configuration:
  custom_column_names:
    library_id: libraryId
  custom_root_fields: {}
delete_permissions:
  - permission:
      filter:
        library:
          user_id:
            _eq: X-Hasura-User-Id
    role: user
event_triggers:
  - definition:
      enable_manual: false
      insert:
        columns: '*'
    name: create_lambda
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: http://0ee210e5d0a4.ngrok.io/lambda
  - definition:
      delete:
        columns: '*'
      enable_manual: false
    name: delete_lambda
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: http://0ee210e5d0a4.ngrok.io/lambda/delete
  - definition:
      enable_manual: false
      update:
        columns:
          - body
          - name
          - id
          - library_id
    name: update_lambda
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: http://0ee210e5d0a4.ngrok.io/lambda/update
insert_permissions:
  - permission:
      backend_only: false
      check:
        library:
          user_id:
            _eq: X-Hasura-User-Id
      columns:
        - body
        - library_id
        - name
    role: user
object_relationships:
  - name: library
    using:
      foreign_key_constraint_on: library_id
select_permissions:
  - permission:
      columns:
        - body
        - id
        - library_id
        - name
      filter:
        library:
          user_id:
            _eq: X-Hasura-User-Id
    role: user
table:
  name: lambda
  schema: public
update_permissions:
  - permission:
      check:
        library:
          user_id:
            _eq: X-Hasura-User-Id
      columns:
        - body
        - library_id
        - name
      filter:
        library:
          user_id:
            _eq: X-Hasura-User-Id
    role: user
