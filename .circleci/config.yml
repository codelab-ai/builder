# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  slack: circleci/slack@3.4.2
  # node: circleci/node@3.0.1

executors:
  node:
    working_directory: ~/app
    environment:
      # install Cypress in Linux-like cache folder
      # CYPRESS_CACHE_FOLDER: '~/.cache/Cypress'
      NX_VERBOSE_LOGGING: true
      # GATSBY_TELEMETRY_DISABLED: 1
      # NODE_ENV: production
      GITHUB_VIEN: VienNguyen24hdev
      SLACK_VIEN: UBPECLD4P
      GITHUB_WEBBER: webberwang
      SLACK_WEBBER: U0J401GAH
      GITHUB_ALEX: aburtsev
    docker:
      - image: circleci/node:14-browsers

commands:
  # SETUP
  setup:
    description: 'Setup Context'
    steps:
      - checkout
      - run:
          name: 'Setup GIT_COMMIT_MSG'
          command: |
            echo 'export GIT_COMMIT_MSG=$(git log --format="format:%s" -n 1 ${CIRCLE_SHA1})' >> $BASH_ENV
            source $BASH_ENV
            echo $GIT_COMMIT_MSG

  # use this for jobs that require the repository
  setup-workspace:
    description: 'Setup Workspace'
    steps:
      - setup
      - attach_workspace:
          at: ..

  # INSTALL
  yarn_install:
    description: 'Install Dependencies'
    steps:
      - restore_cache:
          name: 'Restore Yarn Package Cache'
          keys:
            - dep-cache-{{ checksum "yarn.lock" }}
            # https://discuss.circleci.com/t/circle-2-0-caching-is-too-limited-to-be-very-useful/11694
            - dep-cache-
      - run:
          name: 'Install NPM Packages'
          command: yarn install --frozen-lockfile --non-interactive
      - save_cache:
          name: 'Save Cache'
          key: dep-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/app/node_modules
            # Save yarn workspace
            - ~/app/libs/eslint-config-codelab/node_modules
            - ~/app/plugins/react/node_modules
  build_app:
    description: 'Build Application'
    steps:
      - run:
          name: 'Build Packages'
          command: yarn build

  # LINT
  eslint:
    description: 'ESLint on New Commits'
    steps:
      - run: yarn eslint
  commitlint:
    description: 'Commitlint on New Commits'
    steps:
      - run: yarn commitlint

  # TEST
  unit-tests:
    description: 'Unit Tests'
    steps:
      - run: yarn test --skip-nx-cache

jobs:
  install:
    executor: node
    steps:
      - checkout
      - yarn_install
      - build_app
      - persist_to_workspace:
          root: ..
          paths:
            - app/node_modules
            # Save yarn workspace
            - app/libs/eslint-config-codelab
            - app/libs/plugins/react
            # - .cache/Cypress
  lint:
    environment:
      CIRCLE_COMPARE_URL: <<pipeline.project.git_url>>/compare/<<pipeline.git.base_revision>>..<<pipeline.git.revision>>
      CIRCLE_BASE_REVISION: <<pipeline.git.base_revision>>
      CIRCLE_REVISION: <<pipeline.git.revision>>
    executor: node
    steps:
      - run: echo "This is pipeline ID << pipeline.id >>"
      - run: echo $CIRCLE_COMPARE_URL
      - setup-workspace
      - eslint
      - commitlint
  test:
    executor: node
    steps:
      - setup-workspace
      - unit-tests
  notify:
    executor: node
    steps:
      - setup
      - slack/notify:
          channel: CQVPNKS8K
          color: '#42e2f4'
          mentions: $SLACK_WEBBER
          message: >
            Status: Success \n
            Branch: << pipeline.git.branch >> \n
            Message: $GIT_COMMIT_MSG \n
          # webhook: https://hooks.slack.com/services/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

workflows:
  test_app:
    jobs:
      # - install
      # - lint:
      #     requires:
      #       - install
      # - test:
      #     requires:
      #       - install
      # - notify:
      #     requires:
      #       - lint
      #       - test
      - notify
