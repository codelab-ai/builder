apiVersion: v1
kind: Namespace
metadata:
  name: codelab
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: codelab
  # labels:
  #   app: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: frontend
          # imagePullPolicy: Always
          image: codelabai/codelab:0.01
          # ENTRYPOINT in Docker
          command: ['yarn', 'start:prod:web']
          env:
            # Can only be changed by `next start -p 3000 dist/apps/web`
            - name: WEB_PORT
              value: '3000'
            - name: NODE_ENV
              value: production
            - name: NEXT_PUBLIC_API_ORIGIN
              value: http://localhost:4000
            - name: NEXT_PUBLIC_API_PATHNAME
              value: api/v1
          ports:
            - name: http
              containerPort: 3000
          # volumeMounts:
          #   - mountPath: '/home/codelab/app/dist/apps/web'
          #     name: web-storage
          resources:
            # Running container is not allowed to pass the set limit
            limits:
              memory: 512Mi
              cpu: '0.5'
            # Used by scheduler to determine which node to place the Pod on, think of it as minimum required resource
            requests:
              memory: 256Mi
              cpu: '0.2'
        # - name: web-server
        #   image: nginx
        #   ports:
        #     - containerPort: 8080
        #   volumeMounts:
        #     - mountPath: /etc/nginx # mount nginx-conf volumn to /etc/nginx
        #       readOnly: true
        #       name: nginx-conf
        #     - mountPath: /var/log/nginx
        #       name: log
      # volumes:
      #   - name: web-storage
      #     persistentVolumeClaim:
      #       claimName: csi-pvc
      #   - name: nginx-conf
      #     configMap:
      #       name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
      #       items:
      #         - key: nginx.conf
      #           path: nginx.conf
      #   - name: log
      #     emptyDir: {}
---
# Service
#
# A Service enables network access to a set of Pods in Kubernetes.
#
# Services select Pods based on their labels. When a network request is made to the service, it selects all Pods in the cluster matching the service's selector, chooses one of them, and forwards the network request to it.
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: codelab
spec:
  ports:
    - name: http
      port: 80 # Exposes within cluster
      # targetPort: 8080 # Target from external
      targetPort: 3000 # Target from external
  selector:
    app: web
