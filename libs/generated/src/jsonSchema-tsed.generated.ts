/* eslint-disable import/order, sort-imports */
import {
  DecoratorsMap,
  ObjectFieldGridTemplateFactory,
  ObjectFieldTabsTemplate,
  GroupsUiSchema,
} from '@codelab/tools/generators/json-schema'
import { JSONSchema7 } from 'json-schema'
import { DemoTabsProps } from 'libs/alpha/ui/antd/src/components/demo/Demo.input'

export const AffixPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Affix'],
    },
    props: {
      type: 'object',
      properties: {
        offsetBottom: {
          type: 'string',
          description: 'Offset from the bottom of the viewport (in pixels)',
        },
        offsetTop: {
          type: 'string',
          description: 'Offset from the top of the viewport (in pixels)',
          default: 0,
        },
      },
      title: '',
    },
  },
}

export const AutoCompletePropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_AutoComplete'],
    },
    props: {
      type: 'object',
      properties: {
        allowClear: {
          type: 'boolean',
          description: 'Show clear button',
        },
        autoFocus: {
          type: 'boolean',
          description: 'If get focus when component mounted',
        },
        backfill: {
          type: 'boolean',
          description:
            'If backfill selected item the input when using keyboard',
        },
        childrenInputElement: {
          type: 'array',
          items: {
            type: 'string',
          },
          description: 'Customize input element',
        },
        childrenDataSource: {
          type: 'array',
          items: {
            type: 'string',
          },
          description: 'Data source to auto complete',
        },
        defaultActiveFirstOption: {
          type: 'boolean',
          description: 'Whether active first option by default',
          default: true,
        },
        defaultOpen: {
          type: 'boolean',
          description: 'Initial open state of dropdown',
        },
        defaultValue: {
          type: 'string',
          description: 'Initial selected option',
        },
        disabled: {
          type: 'boolean',
          description: 'Whether disabled select',
        },
        dropdownClassName: {
          type: 'string',
          description: 'The className of dropdown menu',
        },
        dropdownMatchSelectWidth: {
          type: 'number',
          description:
            'Determine whether the dropdown menu and the select input are the same width. Default set min-width same as input. Will ignore when value less than select width. false will disable virtual scroll\t',
        },
        filterOption: {
          type: 'boolean',
          description:
            'If true, filter options by input, if function, filter options against it. The function will receive two arguments, inputValue and option, if the function returns true, the option will be included in the filtered set; Otherwise, it will be excluded\t',
        },
        notFoundContent: {
          type: 'string',
          description: 'Specify content to show when no result matches',
          default: 'Not Found',
        },
        open: {
          type: 'boolean',
          description: 'Controlled open state of dropdown',
        },
        options: {
          type: 'array',
          items: {
            type: 'object',
            properties: {
              label: {
                type: 'string',
                title: 'Label',
              },
              value: {
                type: 'string',
                title: 'Value',
              },
            },
          },
          description:
            'Select options. Will get better perf than jsx definition',
        },
        placeholder: {
          type: 'string',
          description: 'The placeholder of input',
        },
        value: {
          type: 'string',
          description: 'Selected option',
        },
        onBlur: {
          type: 'string',
          description: 'Called when leaving the component',
        },
        onChange: {
          type: 'string',
          description:
            'Called when select an option or input value change, or value of input is changed',
        },
        onDropdownVisibleChange: {
          type: 'string',
          description: 'Called when dropdown open',
        },
        onFocus: {
          type: 'string',
          description: 'Called when entering the component',
        },
        onSearch: {
          type: 'string',
          description: 'Called when searching items',
        },
        onSelect: {
          type: 'string',
          description:
            "Called when a option is selected. param is option's value and option instance",
        },
      },
      title: '',
    },
  },
}

export const AvatarPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    alt: {
      type: 'string',
      description:
        'This attribute defines the alternative text describing the image',
    },
    gap: {
      type: 'number',
      description: 'Letter type unit distance between left and right sides',
    },
    icon: {
      type: 'string',
      description: 'Custom icon type for an icon avatar',
    },
    shape: {
      type: 'string',
      description: 'The shape of avatar',
      enum: ['circle', 'square'],
      default: 'circle',
    },
    size: {
      type: 'object',
      properties: {
        size: {
          type: 'string',
          enum: ['large', 'small', 'default'],
        },
        xxl: {
          type: 'string',
          enum: ['xxl'],
        },
        xl: {
          type: 'string',
          enum: ['xl'],
        },
        lg: {
          type: 'string',
          enum: ['lg'],
        },
        md: {
          type: 'string',
          enum: ['md'],
        },
        sm: {
          type: 'string',
          enum: ['sm'],
        },
        xs: {
          type: 'string',
          enum: ['xs'],
        },
      },
      description: 'The size of the avatar',
      title: 'Avatar Size',
    },
    src: {
      type: 'string',
      description:
        'The address of the image for an image avatar or image element',
    },
    srcSet: {
      type: 'string',
      description: 'A list of sources to use for different screen resolutions',
    },
  },
}

export const AvatarSelectedPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Avatar'],
    },
    props: {
      type: 'object',
      properties: {
        alt: {
          type: 'string',
          description:
            'This attribute defines the alternative text describing the image',
        },
        gap: {
          type: 'number',
          description: 'Letter type unit distance between left and right sides',
        },
        icon: {
          type: 'string',
          description: 'Custom icon type for an icon avatar',
        },
        shape: {
          type: 'string',
          description: 'The shape of avatar',
          enum: ['circle', 'square'],
          default: 'circle',
        },
        size: {
          type: 'object',
          properties: {
            size: {
              type: 'string',
              enum: ['large', 'small', 'default'],
            },
            xxl: {
              type: 'string',
              enum: ['xxl'],
            },
            xl: {
              type: 'string',
              enum: ['xl'],
            },
            lg: {
              type: 'string',
              enum: ['lg'],
            },
            md: {
              type: 'string',
              enum: ['md'],
            },
            sm: {
              type: 'string',
              enum: ['sm'],
            },
            xs: {
              type: 'string',
              enum: ['xs'],
            },
          },
          description: 'The size of the avatar',
          title: 'Avatar Size',
        },
        src: {
          type: 'string',
          description:
            'The address of the image for an image avatar or image element',
        },
        srcSet: {
          type: 'string',
          description:
            'A list of sources to use for different screen resolutions',
        },
      },
      title: '',
    },
  },
}

export const BreadCrumbPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    params: {
      type: 'string',
      description: 'Routing parameters',
    },
    routes: {
      type: 'array',
      items: {
        type: 'object',
        properties: {
          path: {
            type: 'string',
            minLength: 1,
          },
          breadcrumbName: {
            type: 'string',
            minLength: 1,
          },
          children: {
            type: 'array',
            items: {
              type: 'object',
              properties: {
                path: {
                  type: 'string',
                  minLength: 1,
                },
                breadcrumbName: {
                  type: 'string',
                  minLength: 1,
                },
              },
              required: ['path', 'breadcrumbName'],
            },
          },
        },
        required: ['path', 'breadcrumbName'],
      },
      description: 'The routing stack information of router',
    },
    separator: {
      type: 'string',
      description: 'Custom separator',
    },
  },
}

export const BreadcrumbSelectedPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Breadcrumb'],
    },
    props: {
      type: 'object',
      properties: {
        params: {
          type: 'string',
          description: 'Routing parameters',
        },
        routes: {
          type: 'array',
          items: {
            type: 'object',
            properties: {
              path: {
                type: 'string',
                minLength: 1,
              },
              breadcrumbName: {
                type: 'string',
                minLength: 1,
              },
              children: {
                type: 'array',
                items: {
                  type: 'object',
                  properties: {
                    path: {
                      type: 'string',
                      minLength: 1,
                    },
                    breadcrumbName: {
                      type: 'string',
                      minLength: 1,
                    },
                  },
                  required: ['path', 'breadcrumbName'],
                },
              },
            },
            required: ['path', 'breadcrumbName'],
          },
          description: 'The routing stack information of router',
        },
        separator: {
          type: 'string',
          description: 'Custom separator',
        },
      },
      title: '',
    },
  },
}

export const BreadcrumbItemPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Breadcrumb_Item'],
    },
    props: {
      type: 'object',
      properties: {
        className: {
          type: 'string',
          description: 'The additional css class',
        },
        dropdownProps: {
          type: 'object',
          properties: {
            arrow: {
              type: 'boolean',
              description: 'Whether the dropdown arrow should be visible',
              default: false,
            },
            disabled: {
              type: 'boolean',
              description: 'Whether the dropdown menu is disabled',
            },
            overlay: {
              type: 'object',
              properties: {
                defaultOpenKeys: {
                  type: 'array',
                  items: {
                    type: 'string',
                  },
                  description:
                    'Array with the keys of default opened sub menus',
                },
                defaultSelectedKeys: {
                  type: 'array',
                  items: {
                    type: 'string',
                  },
                  description:
                    'Array with the keys of default selected menu items',
                },
                expandIcon: {
                  type: 'string',
                  description: 'custom expand icon of submenu',
                },
                forceSubMenuRender: {
                  type: 'boolean',
                  description:
                    'Render submenu into DOM before it becomes visible',
                },
                inlineCollapsed: {
                  type: 'boolean',
                  description:
                    'Specifies the collapsed status when menu is inline mode',
                },
                inlineIndent: {
                  type: 'number',
                  description:
                    'Indent (in pixels) of inline menu items on each level',
                  default: 24,
                },
                mode: {
                  type: 'string',
                  description: 'Type of menu',
                  enum: [
                    'horizontal',
                    'vertical',
                    'vertical-left',
                    'vertical-right',
                    'inline',
                  ],
                  default: 'vertical',
                },
                multiple: {
                  type: 'boolean',
                  description: 'Allows selection of multiple items',
                },
                openKeys: {
                  type: 'array',
                  items: {
                    type: 'string',
                  },
                  description:
                    'Array with the keys of currently opened sub-menus',
                },
                overflowedIndicator: {
                  type: 'string',
                  description: 'Customized icon when menu is collapsed',
                },
                selectable: {
                  type: 'boolean',
                  description: 'Allows selecting menu items',
                },
                selectedKeys: {
                  type: 'array',
                  items: {
                    type: 'string',
                  },
                  description:
                    'Array with the keys of currently selected menu items',
                },
                style: {
                  type: 'string',
                  description: 'Style of the root node',
                },
                subMenuCloseDelay: {
                  type: 'number',
                  description:
                    'Delay time to hide submenu when mouse leaves (in seconds)',
                  default: 0.1,
                },
                subMenuOpenDelay: {
                  type: 'number',
                  description:
                    'Delay time to show submenu when mouse enters, (in seconds)',
                  default: 0,
                },
                theme: {
                  type: 'string',
                  description: 'Color theme of the menu',
                  enum: ['light', 'dark'],
                  default: 'light',
                },
                triggerSubMenuAction: {
                  type: 'string',
                  description: 'Which action can trigger submenu open/close',
                  enum: ['hover', 'click'],
                  default: 'hover',
                },
              },
              description: 'The dropdown menu',
            },
            overlayClassName: {
              type: 'string',
              description: 'The class name of the dropdown root element',
            },
            overlayStyle: {
              type: 'string',
              description: 'The style of the dropdown root element',
            },
            placement: {
              type: 'string',
              description: 'Placement of popup menu',
              enum: [
                'topLeft',
                'topCenter',
                'topRight',
                'bottomLeft',
                'bottomCenter',
                'bottomRight',
              ],
              default: 'bottomLeft',
            },
            trigger: {
              type: 'array',
              items: {
                type: 'string',
                enum: ['click', 'hover', 'contextMenu'],
              },
              description:
                "The trigger mode which executes the dropdown action. Note that hover can't be used on touchscreens",
              title: 'Trigger',
              uniqueItems: true,
              maxItems: 3,
              default: ['hover'],
            },
            visible: {
              type: 'boolean',
              description: 'Whether the dropdown menu is currently visible',
            },
          },
          description: 'The dropdown props',
          title: 'Dropdown Props',
        },
        href: {
          type: 'string',
          description: 'Target of hyperlink',
        },
        overlay: {
          type: 'object',
          properties: {
            defaultOpenKeys: {
              type: 'array',
              items: {
                type: 'string',
              },
              description: 'Array with the keys of default opened sub menus',
            },
            defaultSelectedKeys: {
              type: 'array',
              items: {
                type: 'string',
              },
              description: 'Array with the keys of default selected menu items',
            },
            expandIcon: {
              type: 'string',
              description: 'custom expand icon of submenu',
            },
            forceSubMenuRender: {
              type: 'boolean',
              description: 'Render submenu into DOM before it becomes visible',
            },
            inlineCollapsed: {
              type: 'boolean',
              description:
                'Specifies the collapsed status when menu is inline mode',
            },
            inlineIndent: {
              type: 'number',
              description:
                'Indent (in pixels) of inline menu items on each level',
              default: 24,
            },
            mode: {
              type: 'string',
              description: 'Type of menu',
              enum: [
                'horizontal',
                'vertical',
                'vertical-left',
                'vertical-right',
                'inline',
              ],
              default: 'vertical',
            },
            multiple: {
              type: 'boolean',
              description: 'Allows selection of multiple items',
            },
            openKeys: {
              type: 'array',
              items: {
                type: 'string',
              },
              description: 'Array with the keys of currently opened sub-menus',
            },
            overflowedIndicator: {
              type: 'string',
              description: 'Customized icon when menu is collapsed',
            },
            selectable: {
              type: 'boolean',
              description: 'Allows selecting menu items',
            },
            selectedKeys: {
              type: 'array',
              items: {
                type: 'string',
              },
              description:
                'Array with the keys of currently selected menu items',
            },
            style: {
              type: 'string',
              description: 'Style of the root node',
            },
            subMenuCloseDelay: {
              type: 'number',
              description:
                'Delay time to hide submenu when mouse leaves (in seconds)',
              default: 0.1,
            },
            subMenuOpenDelay: {
              type: 'number',
              description:
                'Delay time to show submenu when mouse enters, (in seconds)',
              default: 0,
            },
            theme: {
              type: 'string',
              description: 'Color theme of the menu',
              enum: ['light', 'dark'],
              default: 'light',
            },
            triggerSubMenuAction: {
              type: 'string',
              description: 'Which action can trigger submenu open/close',
              enum: ['hover', 'click'],
              default: 'hover',
            },
          },
          description: 'The dropdown menu',
          title: 'Menu Props',
        },
      },
      title: '',
    },
  },
}

export const ButtonPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Button'],
    },
    props: {
      type: 'object',
      properties: {
        block: {
          type: 'boolean',
          description: 'Option to fit button width to its parent width',
        },
        danger: {
          type: 'boolean',
          description: 'Set the danger status of button',
        },
        disabled: {
          type: 'boolean',
          description: 'Disabled state of button',
        },
        ghost: {
          type: 'boolean',
          description:
            'Make background transparent and invert text and border colors\t',
        },
        href: {
          type: 'string',
          description: 'Redirect url of link button',
        },
        htmlType: {
          type: 'string',
          description: 'Set the original html type of button',
          enum: ['submit', 'button', 'reset'],
        },
        icon: {
          type: 'string',
          description: 'Set the icon component of button',
        },
        loading: {
          type: 'number',
          description: 'Set the loading status of button',
        },
        shape: {
          type: 'string',
          description: 'Can be set button shape',
          enum: ['circle', 'round'],
        },
        size: {
          type: 'string',
          description: 'Set the size of button',
          default: 'middle',
          enum: ['small', 'middle', 'large'],
        },
        target: {
          type: 'string',
          description:
            'Same as target attribute of a, works when href is specified',
        },
        type: {
          type: 'string',
          description: 'Can be set to primary ghost dashed link text default',
          enum: ['default', 'primary', 'ghost', 'dashed', 'link', 'text'],
        },
      },
      title: '',
    },
  },
}

export const CardPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Card'],
    },
    props: {
      type: 'object',
      properties: {
        actions: {
          type: 'array',
          items: {
            type: 'string',
          },
          description: 'The action list, shows at the bottom of the Card',
        },
        activeTabKey: {
          type: 'string',
          description: "Current TabPane's key",
        },
        bodyStyle: {
          type: 'string',
          description: 'Inline style to apply to the card content',
        },
        bordered: {
          type: 'boolean',
          description: 'Toggles rendering of the border around the card',
          default: true,
        },
        cover: {
          type: 'string',
          description: 'Card cover',
        },
        defaultActiveTabKey: {
          type: 'string',
          description:
            "Initial active TabPane's key, if activeTabKey is not set",
        },
        extra: {
          type: 'string',
          description: 'Content to render in the top-right corner of the card',
        },
        headStyle: {
          type: 'string',
          description: 'Inline style to apply to the card head',
        },
        hoverable: {
          type: 'boolean',
          description: 'Lift up when hovering card',
        },
        loading: {
          type: 'boolean',
          description:
            'Shows a loading indicator while the contents of the card are being fetched',
        },
        size: {
          type: 'string',
          description: 'Size of card',
          enum: ['default', 'small'],
          default: 'default',
        },
        tabBarExtraContent: {
          type: 'string',
          description: 'Extra content in tab bar',
        },
        tabList: {
          type: 'array',
          items: {
            type: 'object',
            properties: {
              key: {
                type: 'string',
                minLength: 1,
              },
              tab: {
                type: 'string',
              },
              disabled: {
                type: 'boolean',
              },
            },
            required: ['key', 'tab'],
          },
          description: "List of TabPane's head",
        },
        title: {
          type: 'string',
          description: 'Card title',
        },
        type: {
          type: 'string',
          description: 'Card style type, can be set to inner or not set',
          enum: ['inner'],
        },
      },
      title: '',
    },
  },
}

export const CardGridPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Card_Grid'],
    },
    props: {
      type: 'object',
      properties: {
        className: {
          type: 'string',
          description: 'The className of container',
        },
        hoverable: {
          type: 'boolean',
          description: 'Lift up when hovering card grid',
        },
        style: {
          type: 'string',
          description: 'The style object of container',
        },
      },
      title: '',
    },
  },
}

export const CardMetaPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Card_Meta'],
    },
    props: {
      type: 'object',
      properties: {
        avatar: {
          type: 'string',
          description: 'Avatar or icon',
        },
        className: {
          type: 'string',
          description: 'The className of container',
        },
        description: {
          type: 'string',
          description: 'Description content',
        },
        style: {
          type: 'string',
          description: 'The style object of container',
        },
        title: {
          type: 'string',
          description: 'Title content',
        },
      },
      title: '',
    },
  },
}

export const CascaderPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Cascader'],
    },
    props: {
      type: 'object',
      title: '',
    },
  },
}

const DemoGridPropsDecorators: DecoratorsMap = {
  firstname: {
    __grid: {
      order: 0,
      span: 12,
    },
  },
  lastname: {
    __grid: {
      order: 1,
      span: 12,
    },
  },
  email: {
    __grid: {
      order: 2,
      span: 16,
    },
  },
  password: {
    __grid: {
      order: 3,
      span: 8,
    },
  },
}

export const DemoGridPropsGridFormProps = {
  ObjectFieldTemplate: ObjectFieldGridTemplateFactory(DemoGridPropsDecorators),
}

export const DemoGridPropsFormProps = { ...DemoGridPropsGridFormProps }

export const DemoGridPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    email: {
      type: 'string',
    },
    password: {
      type: 'string',
    },
    firstname: {
      type: 'string',
    },
    lastname: {
      type: 'string',
    },
    notGroupedField: {
      type: 'string',
    },
  },
}

const DemoTabsPropsUISchema: GroupsUiSchema<DemoTabsProps> = {
  'ui:groups': [
    'firstname',
    'lastname',
    {
      groups: {
        password: ['password'],
        contacts: ['email'],
      },
      'ui:template': 'tabs',
    },
  ],
}

export const DemoTabsPropsTabsFormProps = {
  ObjectFieldTemplate: ObjectFieldTabsTemplate,
  uiSchema: DemoTabsPropsUISchema,
}

export const DemoTabsPropsFormProps = { ...DemoTabsPropsTabsFormProps }

export const DemoTabsPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    email: {
      type: 'string',
    },
    password: {
      type: 'string',
    },
    firstname: {
      type: 'string',
    },
    lastname: {
      type: 'string',
    },
    notGroupedField: {
      type: 'string',
    },
  },
}

export const DividerPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Divider'],
    },
    props: {
      type: 'object',
      properties: {
        className: {
          type: 'string',
          description: 'The className of container',
        },
        dashed: {
          type: 'boolean',
          description: 'Whether line is dashed',
        },
        orientation: {
          type: 'string',
          description: 'The position of title inside divider',
          enum: ['left', 'right', 'center'],
          default: 'center',
        },
        plain: {
          type: 'boolean',
          description: 'Divider text show as plain style',
        },
        style: {
          type: 'string',
          description: 'The style object of container',
        },
        type: {
          type: 'string',
          description: 'The direction type of divider',
          enum: ['horizontal', 'vertical'],
          default: 'horizontal',
        },
      },
      title: '',
    },
  },
}

export const DropDownPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    arrow: {
      type: 'boolean',
      description: 'Whether the dropdown arrow should be visible',
      default: false,
    },
    disabled: {
      type: 'boolean',
      description: 'Whether the dropdown menu is disabled',
    },
    overlay: {
      type: 'object',
      properties: {
        defaultOpenKeys: {
          type: 'array',
          items: {
            type: 'string',
          },
          description: 'Array with the keys of default opened sub menus',
        },
        defaultSelectedKeys: {
          type: 'array',
          items: {
            type: 'string',
          },
          description: 'Array with the keys of default selected menu items',
        },
        expandIcon: {
          type: 'string',
          description: 'custom expand icon of submenu',
        },
        forceSubMenuRender: {
          type: 'boolean',
          description: 'Render submenu into DOM before it becomes visible',
        },
        inlineCollapsed: {
          type: 'boolean',
          description:
            'Specifies the collapsed status when menu is inline mode',
        },
        inlineIndent: {
          type: 'number',
          description: 'Indent (in pixels) of inline menu items on each level',
          default: 24,
        },
        mode: {
          type: 'string',
          description: 'Type of menu',
          enum: [
            'horizontal',
            'vertical',
            'vertical-left',
            'vertical-right',
            'inline',
          ],
          default: 'vertical',
        },
        multiple: {
          type: 'boolean',
          description: 'Allows selection of multiple items',
        },
        openKeys: {
          type: 'array',
          items: {
            type: 'string',
          },
          description: 'Array with the keys of currently opened sub-menus',
        },
        overflowedIndicator: {
          type: 'string',
          description: 'Customized icon when menu is collapsed',
        },
        selectable: {
          type: 'boolean',
          description: 'Allows selecting menu items',
        },
        selectedKeys: {
          type: 'array',
          items: {
            type: 'string',
          },
          description: 'Array with the keys of currently selected menu items',
        },
        style: {
          type: 'string',
          description: 'Style of the root node',
        },
        subMenuCloseDelay: {
          type: 'number',
          description:
            'Delay time to hide submenu when mouse leaves (in seconds)',
          default: 0.1,
        },
        subMenuOpenDelay: {
          type: 'number',
          description:
            'Delay time to show submenu when mouse enters, (in seconds)',
          default: 0,
        },
        theme: {
          type: 'string',
          description: 'Color theme of the menu',
          enum: ['light', 'dark'],
          default: 'light',
        },
        triggerSubMenuAction: {
          type: 'string',
          description: 'Which action can trigger submenu open/close',
          enum: ['hover', 'click'],
          default: 'hover',
        },
      },
      description: 'The dropdown menu',
    },
    overlayClassName: {
      type: 'string',
      description: 'The class name of the dropdown root element',
    },
    overlayStyle: {
      type: 'string',
      description: 'The style of the dropdown root element',
    },
    placement: {
      type: 'string',
      description: 'Placement of popup menu',
      enum: [
        'topLeft',
        'topCenter',
        'topRight',
        'bottomLeft',
        'bottomCenter',
        'bottomRight',
      ],
      default: 'bottomLeft',
    },
    trigger: {
      type: 'array',
      items: {
        type: 'string',
        enum: ['click', 'hover', 'contextMenu'],
      },
      description:
        "The trigger mode which executes the dropdown action. Note that hover can't be used on touchscreens",
      title: 'Trigger',
      uniqueItems: true,
      maxItems: 3,
      default: ['hover'],
    },
    visible: {
      type: 'boolean',
      description: 'Whether the dropdown menu is currently visible',
    },
  },
}

export const DropdownSelectedPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Dropdown'],
    },
    props: {
      type: 'object',
      properties: {
        arrow: {
          type: 'boolean',
          description: 'Whether the dropdown arrow should be visible',
          default: false,
        },
        disabled: {
          type: 'boolean',
          description: 'Whether the dropdown menu is disabled',
        },
        overlay: {
          type: 'object',
          properties: {
            defaultOpenKeys: {
              type: 'array',
              items: {
                type: 'string',
              },
              description: 'Array with the keys of default opened sub menus',
            },
            defaultSelectedKeys: {
              type: 'array',
              items: {
                type: 'string',
              },
              description: 'Array with the keys of default selected menu items',
            },
            expandIcon: {
              type: 'string',
              description: 'custom expand icon of submenu',
            },
            forceSubMenuRender: {
              type: 'boolean',
              description: 'Render submenu into DOM before it becomes visible',
            },
            inlineCollapsed: {
              type: 'boolean',
              description:
                'Specifies the collapsed status when menu is inline mode',
            },
            inlineIndent: {
              type: 'number',
              description:
                'Indent (in pixels) of inline menu items on each level',
              default: 24,
            },
            mode: {
              type: 'string',
              description: 'Type of menu',
              enum: [
                'horizontal',
                'vertical',
                'vertical-left',
                'vertical-right',
                'inline',
              ],
              default: 'vertical',
            },
            multiple: {
              type: 'boolean',
              description: 'Allows selection of multiple items',
            },
            openKeys: {
              type: 'array',
              items: {
                type: 'string',
              },
              description: 'Array with the keys of currently opened sub-menus',
            },
            overflowedIndicator: {
              type: 'string',
              description: 'Customized icon when menu is collapsed',
            },
            selectable: {
              type: 'boolean',
              description: 'Allows selecting menu items',
            },
            selectedKeys: {
              type: 'array',
              items: {
                type: 'string',
              },
              description:
                'Array with the keys of currently selected menu items',
            },
            style: {
              type: 'string',
              description: 'Style of the root node',
            },
            subMenuCloseDelay: {
              type: 'number',
              description:
                'Delay time to hide submenu when mouse leaves (in seconds)',
              default: 0.1,
            },
            subMenuOpenDelay: {
              type: 'number',
              description:
                'Delay time to show submenu when mouse enters, (in seconds)',
              default: 0,
            },
            theme: {
              type: 'string',
              description: 'Color theme of the menu',
              enum: ['light', 'dark'],
              default: 'light',
            },
            triggerSubMenuAction: {
              type: 'string',
              description: 'Which action can trigger submenu open/close',
              enum: ['hover', 'click'],
              default: 'hover',
            },
          },
          description: 'The dropdown menu',
        },
        overlayClassName: {
          type: 'string',
          description: 'The class name of the dropdown root element',
        },
        overlayStyle: {
          type: 'string',
          description: 'The style of the dropdown root element',
        },
        placement: {
          type: 'string',
          description: 'Placement of popup menu',
          enum: [
            'topLeft',
            'topCenter',
            'topRight',
            'bottomLeft',
            'bottomCenter',
            'bottomRight',
          ],
          default: 'bottomLeft',
        },
        trigger: {
          type: 'array',
          items: {
            type: 'string',
            enum: ['click', 'hover', 'contextMenu'],
          },
          description:
            "The trigger mode which executes the dropdown action. Note that hover can't be used on touchscreens",
          title: 'Trigger',
          uniqueItems: true,
          maxItems: 3,
          default: ['hover'],
        },
        visible: {
          type: 'boolean',
          description: 'Whether the dropdown menu is currently visible',
        },
      },
      title: '',
    },
  },
}

export const IconPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Icon'],
    },
    props: {
      type: 'object',
      properties: {
        className: {
          type: 'string',
          description: 'The className of Icon',
        },
        rotate: {
          type: 'string',
          description: 'Rotate by n degrees (not working in IE9)',
        },
        spin: {
          type: 'boolean',
          description: 'Rotate icon with animation',
        },
        style: {
          type: 'string',
          description: 'The style properties of icon, like fontSize and color',
        },
        twoToneColor: {
          type: 'string',
          description:
            'Only supports the two-tone icon. Specify the primary color',
        },
      },
      title: '',
    },
  },
}

export const LayoutPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: [
        'React_Layout',
        'React_Layout_Header',
        'React_Layout_Footer',
        'React_Layout_Content',
      ],
    },
    props: {
      type: 'object',
      properties: {
        className: {
          type: 'string',
          description: 'Container className',
        },
        hasSider: {
          type: 'boolean',
          description:
            "Whether contain Sider in children, don't have to assign it normally. Useful in ssr avoid style flickering\t",
        },
        style: {
          type: 'string',
          description: 'To customize the styles',
        },
      },
      title: '',
    },
  },
}

export const LayoutSiderPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Layout_Sider'],
    },
    props: {
      type: 'object',
      properties: {
        breakpoint: {
          type: 'string',
          description: 'Breakpoints of the responsive layout',
          enum: ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'],
        },
        className: {
          type: 'string',
          description: 'Container className',
        },
        collapsed: {
          type: 'boolean',
          description: 'To set the current status',
        },
        collapsedWidth: {
          type: 'number',
          description:
            'Width of the collapsed sidebar, by setting to 0 a special trigger will appear',
          default: 80,
        },
        collapsible: {
          type: 'boolean',
          description: 'Whether can be collapsed',
        },
        defaultCollapsed: {
          type: 'boolean',
          description: 'To set the initial status',
        },
        reverseArrow: {
          type: 'boolean',
          description:
            'Reverse direction of arrow, for a sider that expands from the right',
        },
        style: {
          type: 'string',
          description: 'To customize the styles',
        },
        theme: {
          type: 'string',
          description: 'Color theme of the sidebar',
          enum: ['light', 'dark'],
          default: 'dark',
        },
        trigger: {
          type: 'string',
          description:
            'Specify the customized trigger, set to null to hide the trigger',
        },
        width: {
          type: 'string',
          description: 'Width of the sidebar',
          default: 200,
        },
        zeroWidthTriggerStyle: {
          type: 'string',
          description:
            'To customize the styles of the special trigger that appears when collapsedWidth is 0',
        },
      },
      title: '',
    },
  },
}

export const MenuPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    defaultOpenKeys: {
      type: 'array',
      items: {
        type: 'string',
      },
      description: 'Array with the keys of default opened sub menus',
    },
    defaultSelectedKeys: {
      type: 'array',
      items: {
        type: 'string',
      },
      description: 'Array with the keys of default selected menu items',
    },
    expandIcon: {
      type: 'string',
      description: 'custom expand icon of submenu',
    },
    forceSubMenuRender: {
      type: 'boolean',
      description: 'Render submenu into DOM before it becomes visible',
    },
    inlineCollapsed: {
      type: 'boolean',
      description: 'Specifies the collapsed status when menu is inline mode',
    },
    inlineIndent: {
      type: 'number',
      description: 'Indent (in pixels) of inline menu items on each level',
      default: 24,
    },
    mode: {
      type: 'string',
      description: 'Type of menu',
      enum: [
        'horizontal',
        'vertical',
        'vertical-left',
        'vertical-right',
        'inline',
      ],
      default: 'vertical',
    },
    multiple: {
      type: 'boolean',
      description: 'Allows selection of multiple items',
    },
    openKeys: {
      type: 'array',
      items: {
        type: 'string',
      },
      description: 'Array with the keys of currently opened sub-menus',
    },
    overflowedIndicator: {
      type: 'string',
      description: 'Customized icon when menu is collapsed',
    },
    selectable: {
      type: 'boolean',
      description: 'Allows selecting menu items',
    },
    selectedKeys: {
      type: 'array',
      items: {
        type: 'string',
      },
      description: 'Array with the keys of currently selected menu items',
    },
    style: {
      type: 'string',
      description: 'Style of the root node',
    },
    subMenuCloseDelay: {
      type: 'number',
      description: 'Delay time to hide submenu when mouse leaves (in seconds)',
      default: 0.1,
    },
    subMenuOpenDelay: {
      type: 'number',
      description: 'Delay time to show submenu when mouse enters, (in seconds)',
      default: 0,
    },
    theme: {
      type: 'string',
      description: 'Color theme of the menu',
      enum: ['light', 'dark'],
      default: 'light',
    },
    triggerSubMenuAction: {
      type: 'string',
      description: 'Which action can trigger submenu open/close',
      enum: ['hover', 'click'],
      default: 'hover',
    },
  },
}

export const MenuSelectedPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Menu'],
    },
    props: {
      type: 'object',
      properties: {
        defaultOpenKeys: {
          type: 'array',
          items: {
            type: 'string',
          },
          description: 'Array with the keys of default opened sub menus',
        },
        defaultSelectedKeys: {
          type: 'array',
          items: {
            type: 'string',
          },
          description: 'Array with the keys of default selected menu items',
        },
        expandIcon: {
          type: 'string',
          description: 'custom expand icon of submenu',
        },
        forceSubMenuRender: {
          type: 'boolean',
          description: 'Render submenu into DOM before it becomes visible',
        },
        inlineCollapsed: {
          type: 'boolean',
          description:
            'Specifies the collapsed status when menu is inline mode',
        },
        inlineIndent: {
          type: 'number',
          description: 'Indent (in pixels) of inline menu items on each level',
          default: 24,
        },
        mode: {
          type: 'string',
          description: 'Type of menu',
          enum: [
            'horizontal',
            'vertical',
            'vertical-left',
            'vertical-right',
            'inline',
          ],
          default: 'vertical',
        },
        multiple: {
          type: 'boolean',
          description: 'Allows selection of multiple items',
        },
        openKeys: {
          type: 'array',
          items: {
            type: 'string',
          },
          description: 'Array with the keys of currently opened sub-menus',
        },
        overflowedIndicator: {
          type: 'string',
          description: 'Customized icon when menu is collapsed',
        },
        selectable: {
          type: 'boolean',
          description: 'Allows selecting menu items',
        },
        selectedKeys: {
          type: 'array',
          items: {
            type: 'string',
          },
          description: 'Array with the keys of currently selected menu items',
        },
        style: {
          type: 'string',
          description: 'Style of the root node',
        },
        subMenuCloseDelay: {
          type: 'number',
          description:
            'Delay time to hide submenu when mouse leaves (in seconds)',
          default: 0.1,
        },
        subMenuOpenDelay: {
          type: 'number',
          description:
            'Delay time to show submenu when mouse enters, (in seconds)',
          default: 0,
        },
        theme: {
          type: 'string',
          description: 'Color theme of the menu',
          enum: ['light', 'dark'],
          default: 'light',
        },
        triggerSubMenuAction: {
          type: 'string',
          description: 'Which action can trigger submenu open/close',
          enum: ['hover', 'click'],
          default: 'hover',
        },
      },
      title: '',
    },
  },
}

export const MenuItemPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    danger: {
      type: 'boolean',
      description: 'Display the danger style',
    },
    disabled: {
      type: 'boolean',
      description: 'Whether menu item is disabled',
    },
    icon: {
      type: 'string',
      description: 'The icon of the menu item',
    },
    key: {
      type: 'string',
      description: 'Unique ID of the menu item',
    },
    title: {
      type: 'string',
      description: 'Set display title for collapsed item',
    },
  },
}

export const MenuItemSelectedPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Menu_Item'],
    },
    props: {
      type: 'object',
      properties: {
        danger: {
          type: 'boolean',
          description: 'Display the danger style',
        },
        disabled: {
          type: 'boolean',
          description: 'Whether menu item is disabled',
        },
        icon: {
          type: 'string',
          description: 'The icon of the menu item',
        },
        key: {
          type: 'string',
          description: 'Unique ID of the menu item',
        },
        title: {
          type: 'string',
          description: 'Set display title for collapsed item',
        },
      },
      title: '',
    },
  },
}

export const MenuItemGroupPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Menu_ItemGroup'],
    },
    props: {
      type: 'object',
      properties: {
        children: {
          type: 'array',
          title: 'Children of type MenuItem',
          items: {
            type: 'object',
            properties: {
              danger: {
                type: 'boolean',
                description: 'Display the danger style',
              },
              disabled: {
                type: 'boolean',
                description: 'Whether menu item is disabled',
              },
              icon: {
                type: 'string',
                description: 'The icon of the menu item',
              },
              key: {
                type: 'string',
                description: 'Unique ID of the menu item',
              },
              title: {
                type: 'string',
                description: 'Set display title for collapsed item',
              },
            },
          },
        },
        title: {
          type: 'string',
          description: 'The title of the group',
        },
      },
      title: '',
    },
  },
}

export const MenuSubMenuPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Menu_SubMenu'],
    },
    props: {
      type: 'object',
      properties: {
        children: {
          type: 'array',
          description: 'Sub-menus or sub-menu items',
          title: 'Children of type MenuItem',
          items: {
            type: 'object',
            properties: {
              danger: {
                type: 'boolean',
                description: 'Display the danger style',
              },
              disabled: {
                type: 'boolean',
                description: 'Whether menu item is disabled',
              },
              icon: {
                type: 'string',
                description: 'The icon of the menu item',
              },
              key: {
                type: 'string',
                description: 'Unique ID of the menu item',
              },
              title: {
                type: 'string',
                description: 'Set display title for collapsed item',
              },
            },
          },
        },
        disabled: {
          type: 'boolean',
          description: 'Whether sub-menu is disabled',
        },
        icon: {
          type: 'string',
          description: 'Icon of sub menu',
        },
        key: {
          type: 'string',
          description: 'Unique ID of the sub-menu',
        },
        popupClassName: {
          type: 'string',
          description: 'Sub-menu class name, not working when mode="inline"',
        },
        popupOffset: {
          type: 'array',
          title: 'Popup offset in the format of number, number',
          items: [
            {
              title: 'A number',
              type: 'number',
              default: 0,
            },
            {
              title: 'A number',
              type: 'number',
              default: 0,
            },
          ],
        },
        title: {
          type: 'string',
          description: 'Title of sub menu',
        },
      },
      title: '',
    },
  },
}

export const PageHeaderPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_PageHeader'],
    },
    props: {
      type: 'object',
      properties: {
        avatar: {
          type: 'object',
          properties: {
            alt: {
              type: 'string',
              description:
                'This attribute defines the alternative text describing the image',
            },
            gap: {
              type: 'number',
              description:
                'Letter type unit distance between left and right sides',
            },
            icon: {
              type: 'string',
              description: 'Custom icon type for an icon avatar',
            },
            shape: {
              type: 'string',
              description: 'The shape of avatar',
              enum: ['circle', 'square'],
              default: 'circle',
            },
            size: {
              type: 'object',
              properties: {
                size: {
                  type: 'string',
                  enum: ['large', 'small', 'default'],
                },
                xxl: {
                  type: 'string',
                  enum: ['xxl'],
                },
                xl: {
                  type: 'string',
                  enum: ['xl'],
                },
                lg: {
                  type: 'string',
                  enum: ['lg'],
                },
                md: {
                  type: 'string',
                  enum: ['md'],
                },
                sm: {
                  type: 'string',
                  enum: ['sm'],
                },
                xs: {
                  type: 'string',
                  enum: ['xs'],
                },
              },
              description: 'The size of the avatar',
              title: 'Avatar Size',
            },
            src: {
              type: 'string',
              description:
                'The address of the image for an image avatar or image element',
            },
            srcSet: {
              type: 'string',
              description:
                'A list of sources to use for different screen resolutions',
            },
          },
          description: 'Avatar next to the title bar',
          title: 'Avatar Props',
        },
        backIcon: {
          type: 'string',
          description:
            'Custom back icon, if false the back icon will not be displayed',
        },
        breadcrumb: {
          type: 'object',
          properties: {
            params: {
              type: 'string',
              description: 'Routing parameters',
            },
            routes: {
              type: 'array',
              items: {
                type: 'object',
                properties: {
                  path: {
                    type: 'string',
                    minLength: 1,
                  },
                  breadcrumbName: {
                    type: 'string',
                    minLength: 1,
                  },
                  children: {
                    type: 'array',
                    items: {
                      type: 'object',
                      properties: {
                        path: {
                          type: 'string',
                          minLength: 1,
                        },
                        breadcrumbName: {
                          type: 'string',
                          minLength: 1,
                        },
                      },
                      required: ['path', 'breadcrumbName'],
                    },
                  },
                },
                required: ['path', 'breadcrumbName'],
              },
              description: 'The routing stack information of router',
            },
            separator: {
              type: 'string',
              description: 'Custom separator',
            },
          },
          description: 'Breadcrumb configuration',
          title: 'Breadcrumb props',
        },
        extra: {
          type: 'string',
          description:
            'Operating area, at the end of the line of the title line',
        },
        footer: {
          type: 'string',
          description: "PageHeader's footer, generally used to render TabBar",
        },
        ghost: {
          type: 'boolean',
          description: 'PageHeader type, will change background color',
        },
        subTitle: {
          type: 'string',
          description: 'Custom subtitle text',
        },
        tags: {
          type: 'array',
          description: 'Tag list next to title',
          items: {
            type: 'object',
            properties: {
              closable: {
                type: 'boolean',
                description: 'Whether the Tag can be closed',
              },
              closeIcon: {
                type: 'string',
                description: 'Custom close icon',
              },
              color: {
                type: 'string',
                description: 'Color of the Tag',
              },
              icon: {
                type: 'string',
                description: 'Set the icon of tag',
              },
              visible: {
                type: 'boolean',
                description: 'Whether the Tag is closed or not',
              },
            },
          },
        },
        title: {
          type: 'string',
          description: 'Custom title text',
        },
      },
      title: '',
    },
  },
}

export const PaginationPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Pagination'],
    },
    props: {
      type: 'object',
      properties: {
        current: {
          type: 'number',
          description: 'Current page number',
        },
        defaultCurrent: {
          type: 'number',
          description: 'Default initial page number',
          default: 1,
        },
        defaultPageSize: {
          type: 'number',
          description: 'Default number of data items per page',
          default: 10,
        },
        disabled: {
          type: 'boolean',
          description: 'Disable pagination',
        },
        hideOnSinglePage: {
          type: 'boolean',
          description: 'Whether to hide pager on single page',
        },
        pageSize: {
          type: 'number',
          description: 'Number of data items per page',
        },
        pageSizeOptions: {
          type: 'array',
          items: {
            default: ['10', '20', '50', '100'],
            type: 'string',
          },
          description: 'Specify the sizeChanger options',
        },
        responsive: {
          type: 'boolean',
          description:
            'If size is not specified, Pagination would resize according to the width of the window',
        },
        showLessItems: {
          type: 'boolean',
          description: 'Show less page items',
        },
        showQuickJumper: {
          type: 'boolean',
          description: 'Determine whether you can jump to pages directly',
        },
        showSizeChanger: {
          type: 'boolean',
          description:
            'Determine whether to show pageSize select, it will be true when total > 50',
        },
        showTitle: {
          type: 'boolean',
          description: "Show page item's title",
        },
        simple: {
          type: 'boolean',
          description: 'Whether to use simple mode',
        },
        size: {
          type: 'string',
          description: 'Specify the size of Pagination, can be set to small',
          enum: ['default', 'small'],
          default: 'default',
        },
        total: {
          type: 'number',
          description: 'Total number of data items',
          default: 0,
        },
      },
      title: '',
      dependencies: {
        showQuickJumper: {
          oneOf: [
            {
              type: 'object',
              properties: {
                showQuickJumper: {
                  enum: [false],
                },
              },
            },
            {
              type: 'object',
              properties: {
                showQuickJumper: {
                  enum: [true],
                },
                goButton: {
                  type: 'string',
                },
              },
            },
          ],
        },
      },
    },
  },
}

export const RGLLayoutPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    i: {
      type: 'string',
    },
    x: {
      type: 'number',
    },
    y: {
      type: 'number',
    },
    w: {
      type: 'number',
    },
    h: {
      type: 'number',
    },
    minW: {
      type: 'number',
    },
    maxW: {
      type: 'number',
    },
    minH: {
      type: 'number',
    },
    maxH: {
      type: 'number',
    },
    emoved: {
      type: 'boolean',
    },
    static: {
      type: 'boolean',
    },
    isDraggable: {
      type: 'boolean',
    },
    isResizable: {
      type: 'boolean',
    },
    resizeHandles: {
      type: 'string',
      enum: ['s', 'w', 'e', 'n', 'sw', 'nw', 'se', 'ne'],
    },
    isBounded: {
      type: 'boolean',
    },
  },
}

const RGLItemPropsDecorators: DecoratorsMap = {
  'data-grid': {
    x: {
      __grid: {
        order: 0,
        span: 6,
      },
    },
    y: {
      __grid: {
        order: 1,
        span: 6,
      },
    },
    w: {
      __grid: {
        order: 2,
        span: 6,
      },
    },
    h: {
      __grid: {
        order: 3,
        span: 6,
      },
    },
  },
  key: {
    __grid: {
      order: 4,
      span: 6,
    },
  },
}

export const RGLItemPropsGridFormProps = {
  ObjectFieldTemplate: ObjectFieldGridTemplateFactory(RGLItemPropsDecorators),
}

export const RGLItemPropsFormProps = { ...RGLItemPropsGridFormProps }

export const RGLItemPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    'data-grid': {
      type: 'object',
      properties: {
        i: {
          type: 'string',
        },
        x: {
          type: 'number',
        },
        y: {
          type: 'number',
        },
        w: {
          type: 'number',
        },
        h: {
          type: 'number',
        },
        minW: {
          type: 'number',
        },
        maxW: {
          type: 'number',
        },
        minH: {
          type: 'number',
        },
        maxH: {
          type: 'number',
        },
        emoved: {
          type: 'boolean',
        },
        static: {
          type: 'boolean',
        },
        isDraggable: {
          type: 'boolean',
        },
        isResizable: {
          type: 'boolean',
        },
        resizeHandles: {
          type: 'string',
          enum: ['s', 'w', 'e', 'n', 'sw', 'nw', 'se', 'ne'],
        },
        isBounded: {
          type: 'boolean',
        },
      },
    },
    key: {
      type: 'string',
    },
  },
  title: 'RGL Item',
}

export const SpacePropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Space'],
    },
    props: {
      type: 'object',
      properties: {
        align: {
          type: 'string',
          description: 'Align items',
          enum: ['start', 'end', 'center', 'baseline'],
        },
        direction: {
          type: 'string',
          description: 'The space direction',
          enum: ['horizontal', 'vertical'],
          default: 'horizontal',
        },
        size: {
          type: 'string',
          description: 'The space size',
        },
        split: {
          type: 'string',
          description: 'Set split',
        },
        wrap: {
          type: 'boolean',
          description: 'Auto wrap line, when horizontal effective',
        },
      },
      title: '',
    },
  },
}

export const StepsPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Steps'],
    },
    props: {
      type: 'object',
      properties: {
        className: {
          type: 'string',
          description: 'Additional class to Steps',
        },
        current: {
          type: 'number',
          description:
            'To set the current step, counting from 0. You can overwrite this state by using status of Step',
        },
        direction: {
          type: 'string',
          description:
            'To specify the direction of the step bar, horizontal or vertical',
          enum: ['horizontal', 'vertical'],
          default: 'horizontal',
        },
        initial: {
          type: 'number',
          description: 'Set the initial step, counting from 0',
          default: 0,
        },
        labelPlacement: {
          type: 'string',
          description:
            'Place title and description with horizontal or vertical direction',
          enum: ['horizontal', 'vertical'],
          default: 'horizontal',
        },
        percent: {
          type: 'number',
          description:
            'Progress circle percentage of current step in process status (only works on basic Steps)',
        },
        progressDot: {
          type: 'boolean',
          description:
            'Steps with progress dot style, customize the progress dot by setting it to a function. labelPlacement will be vertical',
        },
        responsive: {
          type: 'boolean',
          description:
            'change to vertical direction when screen width smaller than 532px',
        },
        size: {
          type: 'string',
          description:
            'To specify the size of the step bar, default and small are currently supported',
          enum: ['default', 'small'],
          default: 'default',
        },
        status: {
          type: 'string',
          description:
            'To specify the status of current step, can be set to one of the following values: wait process finish error',
          enum: ['wait', 'process', 'finish', 'error'],
          default: 'process',
        },
        type: {
          type: 'string',
          description:
            'Type of steps, can be set to one of the following values: default, navigation',
          enum: ['default', 'navigation'],
          default: 'default',
        },
      },
      title: '',
    },
  },
}

export const StepsStepPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Steps_Step'],
    },
    props: {
      type: 'object',
      properties: {
        description: {
          type: 'string',
          description: 'Description of the step, optional property',
        },
        disabled: {
          type: 'boolean',
          description: 'Disable click',
        },
        icon: {
          type: 'string',
          description: 'Icon of the step, optional property',
        },
        status: {
          type: 'string',
          description:
            'To specify the status. It will be automatically set by current of Steps if not configured. Optional values are: wait process finish error',
          enum: ['wait', 'process', 'finish', 'error'],
          default: 'wait',
        },
        subTitle: {
          type: 'string',
          description: 'Subtitle of the step',
        },
        title: {
          type: 'string',
          description: 'Title of the step',
        },
      },
      title: '',
    },
  },
}

export const TagPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    closable: {
      type: 'boolean',
      description: 'Whether the Tag can be closed',
    },
    closeIcon: {
      type: 'string',
      description: 'Custom close icon',
    },
    color: {
      type: 'string',
      description: 'Color of the Tag',
    },
    icon: {
      type: 'string',
      description: 'Set the icon of tag',
    },
    visible: {
      type: 'boolean',
      description: 'Whether the Tag is closed or not',
    },
  },
}

export const TagSelectedPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: ['React_Tag'],
    },
    props: {
      type: 'object',
      properties: {
        closable: {
          type: 'boolean',
          description: 'Whether the Tag can be closed',
        },
        closeIcon: {
          type: 'string',
          description: 'Custom close icon',
        },
        color: {
          type: 'string',
          description: 'Color of the Tag',
        },
        icon: {
          type: 'string',
          description: 'Set the icon of tag',
        },
        visible: {
          type: 'boolean',
          description: 'Whether the Tag is closed or not',
        },
      },
      title: '',
    },
  },
}

export const TextPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    value: {
      type: 'string',
    },
  },
  title: 'Text',
}

export const TypographyTitlePropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    level: {
      type: 'number',
      enum: [1, 2, 3, 4, 5],
    },
    type: {
      type: 'string',
      enum: ['secondary', 'success', 'warning', 'danger'],
    },
  },
  title: 'Typography Title',
}

export const TypographyTextPropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    mark: {
      type: 'boolean',
    },
  },
}

export const PropsSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    type: {
      type: 'string',
      enum: [
        'React_Fragment',
        'React_Html_Div',
        'React_Html_P',
        'React_Html_A',
        'React_Html_Span',
        'React_Text',
        'React_Icon',
        'React_Menu',
        'React_Menu_Item',
        'React_Menu_ItemGroup',
        'React_Menu_SubMenu',
        'React_Card',
        'React_Card_Grid',
        'React_Card_Meta',
        'React_Typography',
        'React_Typography_Title',
        'React_Typography_Text',
        'React_Typography_Paragraph',
        'React_Alert',
        'React_Affix',
        'React_AutoComplete',
        'React_Button',
        'React_Breadcrumb',
        'React_Breadcrumb_Item',
        'React_Dropdown',
        'React_Form',
        'React_Form_Item',
        'React_Form_ItemHook',
        'React_Form_List',
        'React_Checkbox',
        'React_Input',
        'React_InputNumber',
        'React_Select',
        'React_Select_Option',
        'React_RGL_ResponsiveContainer',
        'React_RGL_Container',
        'React_RGL_Item',
        'React_Provider',
        'React_Modal',
        'React_Radio_Group',
        'React_Radio',
        'React_Rate',
        'React_Slider',
        'React_Switch',
        'React_Table',
        'React_Space',
        'React_DatePicker',
        'React_Divider',
        'React_Pagination',
        'React_PageHeader',
        'React_Badge',
        'React_Avatar',
        'React_Comment',
        'React_Calendar',
        'React_Descriptions',
        'React_Descriptions_Item',
        'React_Empty',
        'React_Timeline',
        'React_Timeline_Item',
        'React_Tabs',
        'React_Tabs_TabPane',
        'React_Statistic',
        'React_Tooltip',
        'React_Tag',
        'React_Tree',
        'React_Drawer',
        'React_Progress',
        'React_Result',
        'React_Spin',
        'React_Skeleton',
        'React_Anchor',
        'React_Anchor_Link',
        'React_BackTop',
        'React_ConfigProvider',
        'React_Popconfirm',
        'React_Transfer',
        'React_TreeSelect',
        'React_TreeNode',
        'React_TimePicker',
        'React_Upload',
        'React_Steps',
        'React_Steps_Step',
        'React_Collapse',
        'React_Collapse_Panel',
        'React_Carousel',
        'React_List',
        'React_List_Item',
        'React_List_Item_Meta',
        'React_Mentions',
        'React_Mentions_Option',
        'React_Layout',
        'React_Layout_Header',
        'React_Layout_Sider',
        'React_Layout_Content',
        'React_Layout_Footer',
        'React_Cascader',
        'React_Popover',
        'React_RenderComponent',
        'React_RenderContainer',
        'React_Mapper',
      ],
    },
  },
  title: '',
}

export const CssPropsSchema: JSONSchema7 = {
  type: 'object',
  $schema: 'http://json-schema.org/draft-07/schema#',
  definitions: {
    CSSProperties: {
      type: 'object',
      properties: {
        alignContent: {
          description:
            "The CSS **`align-content`** property sets the distribution of space between and around content items along a flexbox's cross-axis or a grid's block axis.\n\n**Syntax**: `normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **29**  | **28**  |   **9**   | **12** | **11** |\n| 21 _-x-_ |         | 6.1 _-x-_ |        |        |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |\n\n---",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'normal',
                'revert',
                'space-around',
                'space-between',
                'space-evenly',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        alignItems: {
          description:
            'The CSS **`align-items`** property sets the `align-self` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.\n\n**Syntax**: `normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n|  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :------: | :-----: | :-----: | :----: | :----: |\n|  **52**  | **20**  |  **9**  | **12** | **11** |\n| 21 _-x-_ |         | 7 _-x-_ |        |        |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |\n\n---',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'normal',
                'revert',
                'self-end',
                'self-start',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        alignSelf: {
          description:
            "The **`align-self`** CSS property overrides a grid or flex item's `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n\n**Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n\n**Initial value**: `auto`\n\n---\n\n_Supported in Flex Layout_\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **36**  | **20**  |   **9**   | **12** | **11** |\n| 21 _-x-_ |         | 6.1 _-x-_ |        |        |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  |      IE      |\n| :----: | :-----: | :------: | :----: | :----------: |\n| **57** | **52**  | **10.1** | **16** | **10** _-x-_ |\n\n---",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'normal',
                'revert',
                'self-end',
                'self-start',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        alignTracks: {
          description:
            'The **`align-tracks`** CSS property sets the alignment in the masonry axis for grid containers that have masonry in their block axis.\n\n**Syntax**: `[ normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position> ]#`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   |   n/a   |   No   |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'normal',
                'revert',
                'space-around',
                'space-between',
                'space-evenly',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        animationDelay: {
          description:
            'The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        animationDirection: {
          description:
            'The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n\n**Syntax**: `<single-animation-direction>#`\n\n**Initial value**: `normal`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'alternate',
                'alternate-reverse',
                'inherit',
                'initial',
                'normal',
                'reverse',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        animationDuration: {
          description:
            'The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        animationFillMode: {
          description:
            'The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n\n**Syntax**: `<single-animation-fill-mode>#`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 5 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'backwards',
                'both',
                'forwards',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        animationIterationCount: {
          description:
            'The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n\n**Syntax**: `<single-animation-iteration-count>#`\n\n**Initial value**: `1`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'infinite',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        animationName: {
          description:
            'The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n\n**Syntax**: `[ none | <keyframes-name> ]#`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        animationPlayState: {
          description:
            'The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n\n**Syntax**: `<single-animation-play-state>#`\n\n**Initial value**: `running`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'paused',
                'revert',
                'running',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        animationTimingFunction: {
          description:
            'The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        appearance: {
          description:
            "The `**appearance**` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n\n**Syntax**: `none | auto | textfield | menulist-button | <compat-auto>`\n\n**Initial value**: `auto`\n\n| Chrome  | Firefox |   Safari    |   Edge   | IE  |\n| :-----: | :-----: | :---------: | :------: | :-: |\n| **84**  | **80**  | **3** _-x-_ |  **84**  | No  |\n| 1 _-x-_ | 1 _-x-_ |             | 12 _-x-_ |     |",
          enum: [
            '-moz-initial',
            'auto',
            'button',
            'checkbox',
            'inherit',
            'initial',
            'listbox',
            'menulist',
            'menulist-button',
            'meter',
            'none',
            'progress-bar',
            'push-button',
            'radio',
            'revert',
            'searchfield',
            'slider-horizontal',
            'square-button',
            'textarea',
            'textfield',
            'unset',
          ],
          type: 'string',
        },
        aspectRatio: {
          description:
            'The **`aspect-ratio`**  CSS property sets a **preferred aspect ratio** for the box, which will be used in the calculation of auto sizes and some other layout functions.\n\n**Syntax**: `auto | <ratio>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|  n/a   |   n/a   |   No   |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        backdropFilter: {
          description:
            'The **`backdrop-filter`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.\n\n**Syntax**: `none | <filter-function-list>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |   Safari    |  Edge  | IE  |\n| :----: | :-----: | :---------: | :----: | :-: |\n| **76** |   n/a   | **9** _-x-_ | **17** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        backfaceVisibility: {
          description:
            'The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n\n**Syntax**: `visible | hidden`\n\n**Initial value**: `visible`\n\n|  Chrome  | Firefox  |    Safari     |  Edge  |   IE   |\n| :------: | :------: | :-----------: | :----: | :----: |\n|  **36**  |  **16**  | **5.1** _-x-_ | **12** | **10** |\n| 12 _-x-_ | 10 _-x-_ |               |        |        |',
          enum: [
            '-moz-initial',
            'hidden',
            'inherit',
            'initial',
            'revert',
            'unset',
            'visible',
          ],
          type: 'string',
        },
        backgroundAttachment: {
          description:
            "The **`background-attachment`** CSS property sets whether a background image's position is fixed within the viewport, or scrolls with its containing block.\n\n**Syntax**: `<attachment>#`\n\n**Initial value**: `scroll`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'fixed',
                'inherit',
                'initial',
                'local',
                'revert',
                'scroll',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        backgroundBlendMode: {
          description:
            "The **`background-blend-mode`** CSS property sets how an element's background images should blend with each other and with the element's background color.\n\n**Syntax**: `<blend-mode>#`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **35** | **30**  | **8**  | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'color',
                'color-burn',
                'color-dodge',
                'darken',
                'difference',
                'exclusion',
                'hard-light',
                'hue',
                'inherit',
                'initial',
                'lighten',
                'luminosity',
                'multiply',
                'normal',
                'overlay',
                'revert',
                'saturation',
                'screen',
                'soft-light',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        backgroundClip: {
          description:
            "The **`background-clip`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `border-box`\n\n| Chrome | Firefox |   Safari    |  Edge  |  IE   |\n| :----: | :-----: | :---------: | :----: | :---: |\n| **1**  |  **4**  | **3** _-x-_ | **12** | **9** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'inherit',
                'initial',
                'padding-box',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        backgroundColor: {
          description:
            'The **`background-color`** CSS property sets the background color of an element.\n\n**Syntax**: `<color>`\n\n**Initial value**: `transparent`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        backgroundImage: {
          description:
            'The **`background-image`** CSS property sets one or more background images on an element.\n\n**Syntax**: `<bg-image>#`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        backgroundOrigin: {
          description:
            "The **`background-origin`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `padding-box`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **4**  | **3**  | **12** | **9** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'inherit',
                'initial',
                'padding-box',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        backgroundPosition: {
          description:
            'The **`background-position`** CSS property sets the initial position for each background image. The position is relative to the position layer set by `background-origin`.\n\n**Syntax**: `<bg-position>#`\n\n**Initial value**: `0% 0%`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        backgroundPositionX: {
          description:
            'The **`background-position-x`** CSS property sets the initial horizontal position for each background image. The position is relative to the position layer set by `background-origin`.\n\n**Syntax**: `[ center | [ [ left | right | x-start | x-end ]? <length-percentage>? ]! ]#`\n\n**Initial value**: `left`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  | **49**  | **1**  | **12** | **6** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'unset',
                'x-end',
                'x-start',
              ],
            },
          ],
        },
        backgroundPositionY: {
          description:
            'The **`background-position-y`** CSS property sets the initial vertical position for each background image. The position is relative to the position layer set by `background-origin`.\n\n**Syntax**: `[ center | [ [ top | bottom | y-start | y-end ]? <length-percentage>? ]! ]#`\n\n**Initial value**: `top`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  | **49**  | **1**  | **12** | **6** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'revert',
                'top',
                'unset',
                'y-end',
                'y-start',
              ],
            },
          ],
        },
        backgroundRepeat: {
          description:
            'The **`background-repeat`** CSS property sets how background images are repeated. A background image can be repeated along the horizontal and vertical axes, or not repeated at all.\n\n**Syntax**: `<repeat-style>#`\n\n**Initial value**: `repeat`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'no-repeat',
                'repeat',
                'repeat-x',
                'repeat-y',
                'revert',
                'round',
                'space',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        backgroundSize: {
          description:
            "The **`background-size`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto auto`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **3**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'contain',
                'cover',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        blockOverflow: {
          description:
            '**Syntax**: `clip | ellipsis | <string>`\n\n**Initial value**: `clip`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'clip',
                'ellipsis',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        blockSize: {
          description:
            "The **`block-size`** CSS property defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the `width` or the `height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'width'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderBlockColor: {
          description:
            "The **`border-block-color`** CSS property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color` and `border-bottom-color`, or `border-right-color` and `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>{1,2}`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        borderBlockEndColor: {
          description:
            "The **`border-block-end-color`** CSS property defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        borderBlockEndStyle: {
          description:
            "The **`border-block-end-style`** CSS property defines the style of the logical block-end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        borderBlockEndWidth: {
          description:
            "The **`border-block-end-width`** CSS property defines the width of the logical block-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        borderBlockStartColor: {
          description:
            "The **`border-block-start-color`** CSS property defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        borderBlockStartStyle: {
          description:
            "The **`border-block-start-style`** CSS property defines the style of the logical block start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        borderBlockStartWidth: {
          description:
            "The **`border-block-start-width`** CSS property defines the width of the logical block-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        borderBlockStyle: {
          description:
            "The **`border-block-style`** CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style` and `border-bottom-style`, or `border-left-style` and `border-right-style` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        borderBlockWidth: {
          description:
            "The **`border-block-width`** CSS property defines the width of the logical block borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width` and `border-bottom-width`, or `border-left-width`, and `border-right-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        borderBottomColor: {
          description:
            "The **`border-bottom-color`** CSS property sets the color of an element's bottom border. It can also be set with the shorthand CSS properties `border-color` or `border-bottom`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        borderBottomLeftRadius: {
          description:
            'The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **4**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderBottomRightRadius: {
          description:
            'The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **4**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderBottomStyle: {
          description:
            "The **`border-bottom-style`** CSS property sets the line style of an element's bottom `border`.\n\n**Syntax**: `<line-style>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        borderBottomWidth: {
          description:
            'The **`border-bottom-width`** CSS property sets the width of the bottom border of an element.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        borderCollapse: {
          description:
            'The **`border-collapse`** CSS property sets whether cells inside a `<table>` have shared or separate borders.\n\n**Syntax**: `collapse | separate`\n\n**Initial value**: `separate`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **1**  | **1.2** | **12** | **5** |',
          enum: [
            '-moz-initial',
            'collapse',
            'inherit',
            'initial',
            'revert',
            'separate',
            'unset',
          ],
          type: 'string',
        },
        borderEndEndRadius: {
          description:
            "The **`border-end-end-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **89** | **66**  |   No   |  No  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderEndStartRadius: {
          description:
            "The **`border-end-start-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **89** | **66**  |   No   |  No  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderImageOutset: {
          description:
            "The **`border-image-outset`** CSS property sets the distance by which an element's border image is set out from its border box.\n\n**Syntax**: `[ <length> | <number> ]{1,4}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **15** | **15**  | **6**  | **12** | **11** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderImageRepeat: {
          description:
            "The **`border-image-repeat`** CSS property defines how the edge regions of a source image are adjusted to fit the dimensions of an element's border image.\n\n**Syntax**: `[ stretch | repeat | round | space ]{1,2}`\n\n**Initial value**: `stretch`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **15** | **15**  | **6**  | **12** | **11** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'repeat',
                'revert',
                'round',
                'space',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        borderImageSlice: {
          description:
            "The **`border-image-slice`** CSS property divides the image specified by `border-image-source` into regions. These regions form the components of an element's border image.\n\n**Syntax**: `<number-percentage>{1,4} && fill?`\n\n**Initial value**: `100%`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **15** | **15**  | **6**  | **12** | **11** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        borderImageSource: {
          description:
            "The **`border-image-source`** CSS property sets the source image used to create an element's border image.\n\n**Syntax**: `none | <image>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **15** | **15**  | **6**  | **12** | **11** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        borderImageWidth: {
          description:
            "The **`border-image-width`** CSS property sets the width of an element's border image.\n\n**Syntax**: `[ <length-percentage> | <number> | auto ]{1,4}`\n\n**Initial value**: `1`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **15** | **13**  | **6**  | **12** | **11** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderInlineColor: {
          description:
            "The **`border-inline-color`** CSS property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color` and `border-bottom-color`, or `border-right-color` and `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>{1,2}`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        borderInlineEndColor: {
          description:
            "The **`border-inline-end-color`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`\n\n| Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n| :----: | :-------------------------: | :------: | :----: | :-: |\n| **69** |           **41**            | **12.1** | **79** | No  |\n|        | 3 _(-moz-border-end-color)_ |          |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        borderInlineEndStyle: {
          description:
            "The **`border-inline-end-style`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n| :----: | :-------------------------: | :------: | :----: | :-: |\n| **69** |           **41**            | **12.1** | **79** | No  |\n|        | 3 _(-moz-border-end-style)_ |          |        |     |",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        borderInlineEndWidth: {
          description:
            "The **`border-inline-end-width`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n| :----: | :-------------------------: | :------: | :----: | :-: |\n| **69** |           **41**            | **12.1** | **79** | No  |\n|        | 3 _(-moz-border-end-width)_ |          |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        borderInlineStartColor: {
          description:
            "The **`border-inline-start-color`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`\n\n| Chrome |            Firefox            |  Safari  |  Edge  | IE  |\n| :----: | :---------------------------: | :------: | :----: | :-: |\n| **69** |            **41**             | **12.1** | **79** | No  |\n|        | 3 _(-moz-border-start-color)_ |          |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        borderInlineStartStyle: {
          description:
            "The **`border-inline-start-style`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome |            Firefox            |  Safari  |  Edge  | IE  |\n| :----: | :---------------------------: | :------: | :----: | :-: |\n| **69** |            **41**             | **12.1** | **79** | No  |\n|        | 3 _(-moz-border-start-style)_ |          |        |     |",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        borderInlineStartWidth: {
          description:
            "The **`border-inline-start-width`** CSS property defines the width of the logical inline-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        borderInlineStyle: {
          description:
            "The **`border-inline-style`** CSS property defines the style of the logical inline borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style` and `border-bottom-style`, or `border-left-style` and `border-right-style` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        borderInlineWidth: {
          description:
            "The **`border-inline-width`** CSS property defines the width of the logical inline borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width` and `border-bottom-width`, or `border-left-width`, and `border-right-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        borderLeftColor: {
          description:
            "The **`border-left-color`** CSS property sets the color of an element's left border. It can also be set with the shorthand CSS properties `border-color` or `border-left`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        borderLeftStyle: {
          description:
            "The **`border-left-style`** CSS property sets the line style of an element's left `border`.\n\n**Syntax**: `<line-style>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        borderLeftWidth: {
          description:
            'The **`border-left-width`** CSS property sets the width of the left border of an element.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        borderRightColor: {
          description:
            "The **`border-right-color`** CSS property sets the color of an element's right border. It can also be set with the shorthand CSS properties `border-color` or `border-right`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        borderRightStyle: {
          description:
            "The **`border-right-style`** CSS property sets the line style of an element's right `border`.\n\n**Syntax**: `<line-style>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        borderRightWidth: {
          description:
            'The **`border-right-width`** CSS property sets the width of the right border of an element.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        borderSpacing: {
          description:
            'The **`border-spacing`** CSS property sets the distance between the borders of adjacent `<table>` cells. This property applies only when `border-collapse` is `separate`.\n\n**Syntax**: `<length> <length>?`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **8** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderStartEndRadius: {
          description:
            "The **`border-start-end-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **89** | **66**  |   No   |  No  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderStartStartRadius: {
          description:
            "The **`border-start-start-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **89** | **66**  |   No   |  No  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderTopColor: {
          description:
            "The **`border-top-color`** CSS property sets the color of an element's top border. It can also be set with the shorthand CSS properties `border-color` or `border-top`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        borderTopLeftRadius: {
          description:
            'The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **4**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderTopRightRadius: {
          description:
            'The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **4**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderTopStyle: {
          description:
            "The **`border-top-style`** CSS property sets the line style of an element's top `border`.\n\n**Syntax**: `<line-style>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        borderTopWidth: {
          description:
            'The **`border-top-width`** CSS property sets the width of the top border of an element.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        bottom: {
          description:
            'The **`bottom`** CSS property participates in setting the vertical position of a positioned element. It has no effect on non-positioned elements.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **5** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        boxDecorationBreak: {
          description:
            "The **`box-decoration-break`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.\n\n**Syntax**: `slice | clone`\n\n**Initial value**: `slice`\n\n|    Chrome    | Firefox |    Safari     |     Edge     | IE  |\n| :----------: | :-----: | :-----------: | :----------: | :-: |\n| **22** _-x-_ | **32**  | **6.1** _-x-_ | **79** _-x-_ | No  |",
          enum: [
            '-moz-initial',
            'clone',
            'inherit',
            'initial',
            'revert',
            'slice',
            'unset',
          ],
          type: 'string',
        },
        boxShadow: {
          description:
            "The **`box-shadow`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n\n**Syntax**: `none | <shadow>#`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n| **10**  |  **4**  | **5.1** | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        boxSizing: {
          description:
            'The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n\n**Syntax**: `content-box | border-box`\n\n**Initial value**: `content-box`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n| **10**  | **29**  | **5.1** | **12** | **8** |\n| 1 _-x-_ | 1 _-x-_ | 3 _-x-_ |        |       |',
          enum: [
            '-moz-initial',
            'border-box',
            'content-box',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        breakAfter: {
          description:
            'The **`break-after`** CSS property sets how page, column, or region breaks should behave after a generated box. If there is no generated box, the property is ignored.\n\n**Syntax**: `auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region`\n\n**Initial value**: `auto`\n\n---\n\n_Supported in Multi-column Layout_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  |   No   | **12** | **10** |\n\n---\n\n_Supported in Paged Media_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  | **10** | **12** | **10** |\n\n---',
          enum: [
            '-moz-initial',
            'all',
            'always',
            'auto',
            'avoid',
            'avoid-column',
            'avoid-page',
            'avoid-region',
            'column',
            'inherit',
            'initial',
            'left',
            'page',
            'recto',
            'region',
            'revert',
            'right',
            'unset',
            'verso',
          ],
          type: 'string',
        },
        breakBefore: {
          description:
            'The **`break-before`** CSS property sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored.\n\n**Syntax**: `auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region`\n\n**Initial value**: `auto`\n\n---\n\n_Supported in Multi-column Layout_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  |   No   | **12** | **10** |\n\n---\n\n_Supported in Paged Media_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  | **10** | **12** | **10** |\n\n---',
          enum: [
            '-moz-initial',
            'all',
            'always',
            'auto',
            'avoid',
            'avoid-column',
            'avoid-page',
            'avoid-region',
            'column',
            'inherit',
            'initial',
            'left',
            'page',
            'recto',
            'region',
            'revert',
            'right',
            'unset',
            'verso',
          ],
          type: 'string',
        },
        breakInside: {
          description:
            'The **`break-inside`** CSS property sets how page, column, or region breaks should behave inside a generated box. If there is no generated box, the property is ignored.\n\n**Syntax**: `auto | avoid | avoid-page | avoid-column | avoid-region`\n\n**Initial value**: `auto`\n\n---\n\n_Supported in Multi-column Layout_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  | **10** | **12** | **10** |\n\n---\n\n_Supported in Paged Media_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  | **10** | **12** | **10** |\n\n---',
          enum: [
            '-moz-initial',
            'auto',
            'avoid',
            'avoid-column',
            'avoid-page',
            'avoid-region',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        captionSide: {
          description:
            "The **`caption-side`** CSS property puts the content of a table's `<caption>` on the specified side. The values are relative to the `writing-mode` of the table.\n\n**Syntax**: `top | bottom | block-start | block-end | inline-start | inline-end`\n\n**Initial value**: `top`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **8** |",
          enum: [
            '-moz-initial',
            'block-end',
            'block-start',
            'bottom',
            'inherit',
            'initial',
            'inline-end',
            'inline-start',
            'revert',
            'top',
            'unset',
          ],
          type: 'string',
        },
        caretColor: {
          description:
            'The **`caret-color`** CSS property sets the color of the **insertion caret**, the visible marker where the next character typed will be inserted. This is sometimes referred to as the **text input cursor**. The caret appears in elements such as `<input>` or those with the `contenteditable` attribute. The caret is typically a thin vertical line that flashes to help make it more noticeable. By default, it is black, but its color can be altered with this property.\n\n**Syntax**: `auto | <color>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **53**  | **11.1** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'auto',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        clear: {
          description:
            'The **`clear`** CSS property sets whether an element must be moved below (cleared) floating elements that precede it. The `clear` property applies to floating and non-floating elements.\n\n**Syntax**: `none | left | right | both | inline-start | inline-end`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          enum: [
            '-moz-initial',
            'both',
            'inherit',
            'initial',
            'inline-end',
            'inline-start',
            'left',
            'none',
            'revert',
            'right',
            'unset',
          ],
          type: 'string',
        },
        clipPath: {
          description:
            'The `**clip-path**` CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.\n\n**Syntax**: `<clip-source> | [ <basic-shape> || <geometry-box> ] | none`\n\n**Initial value**: `none`\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **55**  | **3.5** |  **9.1**  | **12** | **10** |\n| 23 _-x-_ |         | 6.1 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'fill-box',
                'inherit',
                'initial',
                'margin-box',
                'none',
                'padding-box',
                'revert',
                'stroke-box',
                'unset',
                'view-box',
              ],
              type: 'string',
            },
          ],
        },
        color: {
          description:
            "The **`color`** CSS property sets the foreground color value of an element's text and text decorations, and sets the `<currentcolor>` value. `currentcolor` may be used as an indirect value on _other_ properties and is the default for other color properties, such as `border-color`.\n\n**Syntax**: `<color>`\n\n**Initial value**: Varies from one browser to another\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        colorAdjust: {
          description:
            "The **`color-adjust`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device.\n\n**Syntax**: `economy | exact`\n\n**Initial value**: `economy`\n\n|                Chrome                 | Firefox |                Safari                |                 Edge                  | IE  |\n| :-----------------------------------: | :-----: | :----------------------------------: | :-----------------------------------: | :-: |\n| **49** _(-webkit-print-color-adjust)_ | **48**  | **6** _(-webkit-print-color-adjust)_ | **79** _(-webkit-print-color-adjust)_ | No  |",
          enum: [
            '-moz-initial',
            'economy',
            'exact',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        columnCount: {
          description:
            "The **`column-count`** CSS property breaks an element's content into the specified number of columns.\n\n**Syntax**: `<integer> | auto`\n\n**Initial value**: `auto`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        columnFill: {
          description:
            "The **`column-fill`** CSS property controls how an element's contents are balanced when broken into columns.\n\n**Syntax**: `auto | balance | balance-all`\n\n**Initial value**: `balance`\n\n| Chrome | Firefox | Safari  |  Edge  |   IE   |\n| :----: | :-----: | :-----: | :----: | :----: |\n| **50** | **52**  |  **9**  | **12** | **10** |\n|        |         | 8 _-x-_ |        |        |",
          enum: [
            '-moz-initial',
            'auto',
            'balance',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        columnGap: {
          description:
            "The **`column-gap`** CSS property sets the size of the gap (gutter) between an element's columns.\n\n**Syntax**: `normal | <length-percentage>`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **84** | **63**  |   No   | **84** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n|         Chrome         |        Firefox         |          Safari          |  Edge  | IE  |\n| :--------------------: | :--------------------: | :----------------------: | :----: | :-: |\n|         **66**         |         **61**         |         **12.1**         | **16** | No  |\n| 57 _(grid-column-gap)_ | 52 _(grid-column-gap)_ | 10.1 _(grid-column-gap)_ |        |     |\n\n---\n\n_Supported in Multi-column Layout_\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  | **10**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |\n\n---",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
            },
          ],
        },
        columnRuleColor: {
          description:
            'The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        columnRuleStyle: {
          description:
            "The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-style'>`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'dashed',
                'dotted',
                'double',
                'groove',
                'hidden',
                'inherit',
                'initial',
                'inset',
                'none',
                'outset',
                'revert',
                'ridge',
                'solid',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        columnRuleWidth: {
          description:
            "The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-width'>`\n\n**Initial value**: `medium`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        columnSpan: {
          description:
            'The **`column-span`** CSS property makes it possible for an element to span across all columns when its value is set to `all`.\n\n**Syntax**: `none | all`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :-----: | :-----: | :-------: | :----: | :----: |\n| **50**  | **71**  |   **9**   | **12** | **10** |\n| 6 _-x-_ |         | 5.1 _-x-_ |        |        |',
          enum: [
            '-moz-initial',
            'all',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        columnWidth: {
          description:
            "The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.\n\n**Syntax**: `<length> | auto`\n\n**Initial value**: `auto`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **50**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        contain: {
          description:
            'The **`contain`** CSS property allows an author to indicate that an element and its contents are, as much as possible, _independent_ of the rest of the document tree. This allows the browser to recalculate layout, style, paint, size, or any combination of them for a limited area of the DOM and not the entire page, leading to obvious performance benefits.\n\n**Syntax**: `none | strict | content | [ size || layout || style || paint ]`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **52** | **69**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'content',
                'inherit',
                'initial',
                'layout',
                'none',
                'paint',
                'revert',
                'size',
                'strict',
                'style',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        content: {
          description:
            'The **`content`** CSS property replaces an element with a generated value. Objects inserted using the `content` property are **anonymous replaced elements**_._\n\n**Syntax**: `normal | none | [ <content-replacement> | <content-list> ] [/ <string> ]?`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **8** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'close-quote',
                'contents',
                'inherit',
                'initial',
                'no-close-quote',
                'no-open-quote',
                'none',
                'normal',
                'open-quote',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        contentVisibility: {
          description:
            "The **`content-visibility`** CSS property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. Basically it enables the user agent to skip an element's rendering work, including layout and painting, until it is needed, makes the initial page load much faster.\n\n**Syntax**: `visible | auto | hidden`\n\n**Initial value**: `visible`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **85** |   No    |   No   | **85** | No  |",
          enum: [
            '-moz-initial',
            'auto',
            'hidden',
            'inherit',
            'initial',
            'revert',
            'unset',
            'visible',
          ],
          type: 'string',
        },
        counterIncrement: {
          description:
            'The **`counter-increment`** CSS property increases or decreases the value of a CSS counter by a given value.\n\n**Syntax**: `[ <custom-ident> <integer>? ]+ | none`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **2**  |  **1**  | **3**  | **12** | **8** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        counterReset: {
          description:
            'The **`counter-reset`** CSS property resets a CSS counter to a given value.\n\n**Syntax**: `[ <custom-ident> <integer>? ]+ | none`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **2**  |  **1**  | **3**  | **12** | **8** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        counterSet: {
          description:
            "The **`counter-set`** CSS property sets a CSS counter to a given value. It manipulates the value of existing counters, and will only create new counters if there isn't already a counter of the given name on the element.\n\n**Syntax**: `[ <custom-ident> <integer>? ]+ | none`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **85** | **68**  |   No   | **85** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        cursor: {
          description:
            'The **`cursor`** CSS property sets the type of mouse cursor, if any, to show when the mouse pointer is over an element.\n\n**Syntax**: `[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **1**  | **1.2** | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-grab',
                '-moz-initial',
                '-webkit-grab',
                'alias',
                'all-scroll',
                'auto',
                'cell',
                'col-resize',
                'context-menu',
                'copy',
                'crosshair',
                'default',
                'e-resize',
                'ew-resize',
                'grab',
                'grabbing',
                'help',
                'inherit',
                'initial',
                'move',
                'n-resize',
                'ne-resize',
                'nesw-resize',
                'no-drop',
                'none',
                'not-allowed',
                'ns-resize',
                'nw-resize',
                'nwse-resize',
                'pointer',
                'progress',
                'revert',
                'row-resize',
                's-resize',
                'se-resize',
                'sw-resize',
                'text',
                'unset',
                'vertical-text',
                'w-resize',
                'wait',
                'zoom-in',
                'zoom-out',
              ],
              type: 'string',
            },
          ],
        },
        direction: {
          description:
            'The **`direction`** CSS property sets the direction of text, table columns, and horizontal overflow. Use `rtl` for languages written from right to left (like Hebrew or Arabic), and `ltr` for those written from left to right (like English and most other languages).\n\n**Syntax**: `ltr | rtl`\n\n**Initial value**: `ltr`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **2**  |  **1**  | **1**  | **12** | **5.5** |',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'ltr',
            'revert',
            'rtl',
            'unset',
          ],
          type: 'string',
        },
        display: {
          description:
            'The **`display`** CSS property sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.\n\n**Syntax**: `[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>`\n\n**Initial value**: `inline`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-ms-flexbox',
                '-ms-grid',
                '-ms-inline-flexbox',
                '-ms-inline-grid',
                '-webkit-flex',
                '-webkit-inline-flex',
                'block',
                'contents',
                'flex',
                'flow',
                'flow-root',
                'grid',
                'inherit',
                'initial',
                'inline',
                'inline-block',
                'inline-flex',
                'inline-grid',
                'inline-list-item',
                'inline-table',
                'list-item',
                'none',
                'revert',
                'ruby',
                'ruby-base',
                'ruby-base-container',
                'ruby-text',
                'ruby-text-container',
                'run-in',
                'table',
                'table-caption',
                'table-cell',
                'table-column',
                'table-column-group',
                'table-footer-group',
                'table-header-group',
                'table-row',
                'table-row-group',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        emptyCells: {
          description:
            'The **`empty-cells`** CSS property sets whether borders and backgrounds appear around `<table>` cells that have no visible content.\n\n**Syntax**: `show | hide`\n\n**Initial value**: `show`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **1**  | **1.2** | **12** | **8** |',
          enum: [
            '-moz-initial',
            'hide',
            'inherit',
            'initial',
            'revert',
            'show',
            'unset',
          ],
          type: 'string',
        },
        filter: {
          description:
            'The **`filter`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.\n\n**Syntax**: `none | <filter-function-list>`\n\n**Initial value**: `none`\n\n|  Chrome  | Firefox | Safari  |  Edge  | IE  |\n| :------: | :-----: | :-----: | :----: | :-: |\n|  **53**  | **35**  | **9.1** | **12** | No  |\n| 18 _-x-_ |         | 6 _-x-_ |        |     |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        flexBasis: {
          description:
            "The **`flex-basis`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with `box-sizing`.\n\n**Syntax**: `content | <'width'>`\n\n**Initial value**: `auto`\n\n|  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :------: | :-----: | :-----: | :----: | :----: |\n|  **29**  | **22**  |  **9**  | **12** | **11** |\n| 22 _-x-_ |         | 7 _-x-_ |        |        |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                '-webkit-auto',
                0,
                'auto',
                'content',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'revert',
                'unset',
              ],
            },
          ],
        },
        flexDirection: {
          description:
            'The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n\n**Syntax**: `row | row-reverse | column | column-reverse`\n\n**Initial value**: `row`\n\n|  Chrome  | Firefox | Safari  |  Edge  |    IE    |\n| :------: | :-----: | :-----: | :----: | :------: |\n|  **29**  | **20**  |  **9**  | **12** |  **11**  |\n| 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |',
          enum: [
            '-moz-initial',
            'column',
            'column-reverse',
            'inherit',
            'initial',
            'revert',
            'row',
            'row-reverse',
            'unset',
          ],
          type: 'string',
        },
        flexGrow: {
          description:
            'The **`flex-grow`** CSS property sets the flex grow factor of a flex item main size.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`\n\n|  Chrome  | Firefox |  Safari   |  Edge  |            IE            |\n| :------: | :-----: | :-------: | :----: | :----------------------: |\n|  **29**  | **20**  |   **9**   | **12** |          **11**          |\n| 22 _-x-_ |         | 6.1 _-x-_ |        | 10 _(-ms-flex-positive)_ |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        flexShrink: {
          description:
            'The **`flex-shrink`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to `flex-shrink`.\n\n**Syntax**: `<number>`\n\n**Initial value**: `1`\n\n|  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :------: | :-----: | :-----: | :----: | :----: |\n|  **29**  | **20**  |  **9**  | **12** | **10** |\n| 22 _-x-_ |         | 8 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        flexWrap: {
          description:
            'The **`flex-wrap`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.\n\n**Syntax**: `nowrap | wrap | wrap-reverse`\n\n**Initial value**: `nowrap`\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **29**  | **28**  |   **9**   | **12** | **11** |\n| 21 _-x-_ |         | 6.1 _-x-_ |        |        |',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'nowrap',
            'revert',
            'unset',
            'wrap',
            'wrap-reverse',
          ],
          type: 'string',
        },
        float: {
          description:
            'The **`float`** CSS property places an element on the left or right side of its container, allowing text and inline elements to wrap around it. The element is removed from the normal flow of the page, though still remaining a part of the flow (in contrast to absolute positioning).\n\n**Syntax**: `left | right | none | inline-start | inline-end`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'inline-end',
            'inline-start',
            'left',
            'none',
            'revert',
            'right',
            'unset',
          ],
          type: 'string',
        },
        fontFamily: {
          description:
            'The **`font-family`** CSS property specifies a prioritized list of one or more font family names and/or generic family names for the selected element.\n\n**Syntax**: `[ <family-name> | <generic-family> ]#`\n\n**Initial value**: depends on user agent\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'cursive',
                'fantasy',
                'inherit',
                'initial',
                'monospace',
                'revert',
                'sans-serif',
                'serif',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontFeatureSettings: {
          description:
            'The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n\n**Syntax**: `normal | <feature-tag-value>#`\n\n**Initial value**: `normal`\n\n|  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n| :------: | :------: | :-----: | :----: | :----: |\n|  **48**  |  **34**  | **9.1** | **15** | **10** |\n| 16 _-x-_ | 15 _-x-_ |         |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontKerning: {
          description:
            'The **`font-kerning`** CSS property sets the use of the kerning information stored in a font.\n\n**Syntax**: `auto | normal | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **33** | **32**  |  **9**  | **79** | No  |\n|        |         | 6 _-x-_ |        |     |',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'none',
            'normal',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        fontLanguageOverride: {
          description:
            'The **`font-language-override`** CSS property controls the use of language-specific glyphs in a typeface.\n\n**Syntax**: `normal | <string>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **34**  |   No   |  No  | No  |\n|        | 4 _-x-_ |        |      |     |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontOpticalSizing: {
          description:
            'The **`font-optical-sizing`** CSS property sets whether text rendering is optimized for viewing at different sizes.\n\n**Syntax**: `auto | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **79** | **62**  | **11** | **17** | No  |',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        fontSize: {
          description:
            'The **`font-size`** CSS property sets the size of the font. Changing the font size also updates the sizes of the font size-relative `<length>` units, such as `em`, `ex`, and so forth.\n\n**Syntax**: `<absolute-size> | <relative-size> | <length-percentage>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'large',
                'larger',
                'medium',
                'revert',
                'small',
                'smaller',
                'unset',
                'x-large',
                'x-small',
                'xx-large',
                'xx-small',
                'xxx-large',
              ],
            },
          ],
        },
        fontSizeAdjust: {
          description:
            'The **`font-size-adjust`** CSS property sets the size of lower-case letters relative to the current font size (which defines the size of upper-case letters).\n\n**Syntax**: `none | <number>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|  n/a   |  **1**  |   No   | n/a  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontSmooth: {
          description:
            'The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n\n**Syntax**: `auto | never | always | <absolute-size> | <length>`\n\n**Initial value**: `auto`\n\n|              Chrome              |              Firefox               |              Safari              |               Edge                | IE  |\n| :------------------------------: | :--------------------------------: | :------------------------------: | :-------------------------------: | :-: |\n| **5** _(-webkit-font-smoothing)_ | **25** _(-moz-osx-font-smoothing)_ | **4** _(-webkit-font-smoothing)_ | **79** _(-webkit-font-smoothing)_ | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'always',
                'auto',
                'inherit',
                'initial',
                'large',
                'medium',
                'never',
                'revert',
                'small',
                'unset',
                'x-large',
                'x-small',
                'xx-large',
                'xx-small',
                'xxx-large',
              ],
            },
          ],
        },
        fontStretch: {
          description:
            'The **`font-stretch`** CSS property selects a normal, condensed, or expanded face from a font.\n\n**Syntax**: `<font-stretch-absolute>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **60** |  **9**  | **11** | **12** | **9** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'condensed',
                'expanded',
                'extra-condensed',
                'extra-expanded',
                'inherit',
                'initial',
                'normal',
                'revert',
                'semi-condensed',
                'semi-expanded',
                'ultra-condensed',
                'ultra-expanded',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontStyle: {
          description:
            'The **`font-style`** CSS property sets whether a font should be styled with a normal, italic, or oblique face from its `font-family`.\n\n**Syntax**: `normal | italic | oblique <angle>?`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'italic',
                'normal',
                'oblique',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontSynthesis: {
          description:
            'The **`font-synthesis`** CSS property controls which missing typefaces, bold or italic, may be synthesized by the browser.\n\n**Syntax**: `none | [ weight || style ]`\n\n**Initial value**: `weight style`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **34**  | **9**  |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'style',
                'unset',
                'weight',
              ],
              type: 'string',
            },
          ],
        },
        fontVariant: {
          description:
            'The **`font-variant`** CSS shorthand property allows you to set all the font variants for a font.\n\n**Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'all-petite-caps',
                'all-small-caps',
                'common-ligatures',
                'contextual',
                'diagonal-fractions',
                'discretionary-ligatures',
                'full-width',
                'historical-forms',
                'historical-ligatures',
                'inherit',
                'initial',
                'jis04',
                'jis78',
                'jis83',
                'jis90',
                'lining-nums',
                'no-common-ligatures',
                'no-contextual',
                'no-discretionary-ligatures',
                'no-historical-ligatures',
                'none',
                'normal',
                'oldstyle-nums',
                'ordinal',
                'petite-caps',
                'proportional-nums',
                'proportional-width',
                'revert',
                'ruby',
                'simplified',
                'slashed-zero',
                'small-caps',
                'stacked-fractions',
                'tabular-nums',
                'titling-caps',
                'traditional',
                'unicase',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontVariantCaps: {
          description:
            'The **`font-variant-caps`** CSS property controls the use of alternate glyphs for capital letters.\n\n**Syntax**: `normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **52** | **34**  |   No   | **79** | No  |',
          enum: [
            '-moz-initial',
            'all-petite-caps',
            'all-small-caps',
            'inherit',
            'initial',
            'normal',
            'petite-caps',
            'revert',
            'small-caps',
            'titling-caps',
            'unicase',
            'unset',
          ],
          type: 'string',
        },
        fontVariantEastAsian: {
          description:
            'The **`font-variant-east-asian`** CSS property controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese.\n\n**Syntax**: `normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **63** | **34**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'full-width',
                'inherit',
                'initial',
                'jis04',
                'jis78',
                'jis83',
                'jis90',
                'normal',
                'proportional-width',
                'revert',
                'ruby',
                'simplified',
                'traditional',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontVariantLigatures: {
          description:
            'The **`font-variant-ligatures`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.\n\n**Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]`\n\n**Initial value**: `normal`\n\n|  Chrome  | Firefox | Safari  |  Edge  | IE  |\n| :------: | :-----: | :-----: | :----: | :-: |\n|  **34**  | **34**  | **9.1** | **79** | No  |\n| 31 _-x-_ |         | 7 _-x-_ |        |     |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'common-ligatures',
                'contextual',
                'discretionary-ligatures',
                'historical-ligatures',
                'inherit',
                'initial',
                'no-common-ligatures',
                'no-contextual',
                'no-discretionary-ligatures',
                'no-historical-ligatures',
                'none',
                'normal',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontVariantNumeric: {
          description:
            'The **`font-variant-numeric`** CSS property controls the usage of alternate glyphs for numbers, fractions, and ordinal markers.\n\n**Syntax**: `normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **52** | **34**  | **9.1** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'diagonal-fractions',
                'inherit',
                'initial',
                'lining-nums',
                'normal',
                'oldstyle-nums',
                'ordinal',
                'proportional-nums',
                'revert',
                'slashed-zero',
                'stacked-fractions',
                'tabular-nums',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontVariantPosition: {
          description:
            'The **`font-variant-position`** CSS property controls the use of alternate, smaller glyphs that are positioned as superscript or subscript.\n\n**Syntax**: `normal | sub | super`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **34**  |   No   |  No  | No  |',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'normal',
            'revert',
            'sub',
            'super',
            'unset',
          ],
          type: 'string',
        },
        fontVariationSettings: {
          description:
            'The **`font-variation-settings`** CSS property provides low-level control over variable font characteristics, by specifying the four letter axis names of the characteristics you want to vary, along with their values.\n\n**Syntax**: `normal | [ <string> <number> ]#`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **62** | **62**  | **11** | **17** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontWeight: {
          description:
            'The **`font-weight`** CSS property sets the weight (or boldness) of the font. The weights available depend on the `font-family` that is currently set.\n\n**Syntax**: `<font-weight-absolute> | bolder | lighter`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **2**  |  **1**  | **1**  | **12** | **3** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'bold',
                'bolder',
                'inherit',
                'initial',
                'lighter',
                'normal',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        forcedColorAdjust: {
          description:
            'The **`forced-color-adjust`** CSS property allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS.\n\n**Syntax**: `auto | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |                Edge                 |                 IE                  |\n| :----: | :-----: | :----: | :---------------------------------: | :---------------------------------: |\n|  n/a   |   No    |   No   | **79** _(-ms-high-contrast-adjust)_ | **10** _(-ms-high-contrast-adjust)_ |',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        gridAutoColumns: {
          description:
            'The **`grid-auto-columns`** CSS property specifies the size of an implicitly-created grid column track or pattern of tracks.\n\n**Syntax**: `<track-size>+`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |          Edge           |             IE              |\n| :----: | :-----: | :------: | :---------------------: | :-------------------------: |\n| **57** | **70**  | **10.1** |         **16**          | **10** _(-ms-grid-columns)_ |\n|        |         |          | 12 _(-ms-grid-columns)_ |                             |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'revert',
                'unset',
              ],
            },
          ],
        },
        gridAutoFlow: {
          description:
            'The **`grid-auto-flow`** CSS property controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.\n\n**Syntax**: `[ row | column ] || dense`\n\n**Initial value**: `row`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'column',
                'dense',
                'inherit',
                'initial',
                'revert',
                'row',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gridAutoRows: {
          description:
            'The **`grid-auto-rows`** CSS property specifies the size of an implicitly-created grid row track or pattern of tracks.\n\n**Syntax**: `<track-size>+`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |         Edge         |            IE            |\n| :----: | :-----: | :------: | :------------------: | :----------------------: |\n| **57** | **70**  | **10.1** |        **16**        | **10** _(-ms-grid-rows)_ |\n|        |         |          | 12 _(-ms-grid-rows)_ |                          |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'revert',
                'unset',
              ],
            },
          ],
        },
        gridColumnEnd: {
          description:
            'The **`grid-column-end`** CSS property specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.\n\n**Syntax**: `<grid-line>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gridColumnStart: {
          description:
            'The **`grid-column-start`** CSS property specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.\n\n**Syntax**: `<grid-line>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gridRowEnd: {
          description:
            'The **`grid-row-end`** CSS property specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.\n\n**Syntax**: `<grid-line>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gridRowStart: {
          description:
            'The **`grid-row-start`** CSS property specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.\n\n**Syntax**: `<grid-line>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gridTemplateAreas: {
          description:
            'The **`grid-template-areas`** CSS property specifies named grid areas, establishing the cells in the grid and assigning them names.\n\n**Syntax**: `none | <string>+`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gridTemplateColumns: {
          description:
            'The **`grid-template-columns`** CSS property defines the line names and track sizing functions of the grid columns.\n\n**Syntax**: `none | <track-list> | <auto-track-list> | subgrid <line-name-list>?`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  |             IE              |\n| :----: | :-----: | :------: | :----: | :-------------------------: |\n| **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-columns)_ |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'none',
                'revert',
                'subgrid',
                'unset',
              ],
            },
          ],
        },
        gridTemplateRows: {
          description:
            'The **`grid-template-rows`** CSS property defines the line names and track sizing functions of the grid rows.\n\n**Syntax**: `none | <track-list> | <auto-track-list> | subgrid <line-name-list>?`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  |            IE            |\n| :----: | :-----: | :------: | :----: | :----------------------: |\n| **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-rows)_ |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'none',
                'revert',
                'subgrid',
                'unset',
              ],
            },
          ],
        },
        hangingPunctuation: {
          description:
            'The **`hanging-punctuation`** CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box.\n\n**Syntax**: `none | [ first || [ force-end | allow-end ] || last ]`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   |   No    | **10** |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'allow-end',
                'first',
                'force-end',
                'inherit',
                'initial',
                'last',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        height: {
          description:
            'The **`height`** CSS property specifies the height of an element. By default, the property defines the height of the content area. If `box-sizing` is set to `border-box`, however, it instead determines the height of the border area.\n\n**Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'revert',
                'unset',
              ],
            },
          ],
        },
        hyphens: {
          description:
            'The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n\n**Syntax**: `none | manual | auto`\n\n**Initial value**: `manual`\n\n|  Chrome  | Firefox |    Safari     |     Edge     |      IE      |\n| :------: | :-----: | :-----------: | :----------: | :----------: |\n|  **55**  | **43**  | **5.1** _-x-_ | **12** _-x-_ | **10** _-x-_ |\n| 13 _-x-_ | 6 _-x-_ |               |              |              |',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'manual',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        imageOrientation: {
          description:
            'The **`image-orientation`** CSS property specifies a layout-independent correction to the orientation of an image. It should _not_ be used for any other orientation adjustments; instead, the `transform` property should be used with the `rotate` `<transform-function>`.\n\n**Syntax**: `from-image | <angle> | [ <angle>? flip ]`\n\n**Initial value**: `from-image`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **81** | **26**  | **13.1** | **81** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'flip',
                'from-image',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        imageRendering: {
          description:
            'The **`image-rendering`** CSS property sets an image scaling algorithm. The property applies to an element itself, to any images set in its other properties, and to its descendants.\n\n**Syntax**: `auto | crisp-edges | pixelated`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **13** | **3.6** | **6**  | **79** | No  |',
          enum: [
            '-moz-crisp-edges',
            '-moz-initial',
            '-webkit-optimize-contrast',
            'auto',
            'crisp-edges',
            'inherit',
            'initial',
            'pixelated',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        imageResolution: {
          description:
            '**Syntax**: `[ from-image || <resolution> ] && snap?`\n\n**Initial value**: `1dppx`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'from-image',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        initialLetter: {
          description:
            'The `initial-letter` CSS property sets styling for dropped, raised, and sunken initial letters.\n\n**Syntax**: `normal | [ <number> <integer>? ]`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   |   No    | **9**  |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        inlineSize: {
          description:
            "The **`inline-size`** CSS property defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the `width` or the `height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'width'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'revert',
                'unset',
              ],
            },
          ],
        },
        inset: {
          description:
            "The **`inset`** CSS property is a shorthand that corresponds to the `top`, `right`, `bottom`, and/or `left` properties. It has the same multi-value syntax of the `margin` shorthand.\n\n**Syntax**: `<'top'>{1,4}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        insetBlock: {
          description:
            "The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>{1,2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        insetBlockEnd: {
          description:
            "The **`inset-block-end`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        insetBlockStart: {
          description:
            "The **`inset-block-start`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        insetInline: {
          description:
            "The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>{1,2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        insetInlineEnd: {
          description:
            "The **`inset-inline-end`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        insetInlineStart: {
          description:
            "The **`inset-inline-start`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        isolation: {
          description:
            'The **`isolation`** CSS property determines whether an element must create a new stacking context.\n\n**Syntax**: `auto | isolate`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **41** | **36**  | **8**  | **79** | No  |',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'isolate',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        justifyContent: {
          description:
            'The CSS **`justify-content`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.\n\n**Syntax**: `normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **52**  | **20**  |   **9**   | **12** | **11** |\n| 21 _-x-_ |         | 6.1 _-x-_ |        |        |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |\n\n---',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'left',
                'normal',
                'revert',
                'right',
                'space-around',
                'space-between',
                'space-evenly',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        justifyItems: {
          description:
            'The CSS **`justify-items`** property defines the default `justify-self` for all items of the box, giving them all a default way of justifying each box along the appropriate axis.\n\n**Syntax**: `normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]`\n\n**Initial value**: `legacy`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **52** | **20**  | **9**  | **12** | **11** |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **45**  | **10.1** | **16** | No  |\n\n---',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'left',
                'legacy',
                'normal',
                'revert',
                'right',
                'self-end',
                'self-start',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        justifySelf: {
          description:
            'The CSS **`justify-self`** property sets the way a box is justified inside its alignment container along the appropriate axis.\n\n**Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]`\n\n**Initial value**: `auto`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **45**  | **10.1** | **16** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  |      IE      |\n| :----: | :-----: | :------: | :----: | :----------: |\n| **57** | **45**  | **10.1** | **16** | **10** _-x-_ |\n\n---',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'left',
                'normal',
                'revert',
                'right',
                'self-end',
                'self-start',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        justifyTracks: {
          description:
            'The **`justify-tracks`** CSS property sets the alignment in the masonry axis for grid containers that have masonry in their inline axis.\n\n**Syntax**: `[ normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ] ]#`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   |   n/a   |   No   |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'left',
                'normal',
                'revert',
                'right',
                'space-around',
                'space-between',
                'space-evenly',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        left: {
          description:
            'The **`left`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        letterSpacing: {
          description:
            'The **`letter-spacing`** CSS property sets the horizontal spacing behavior between text characters. This value is added to the natural spacing between characters while rendering the text. Positive values of `letter-spacing` causes characters to spread farther apart, while negative values of `letter-spacing` bring characters closer together.\n\n**Syntax**: `normal | <length>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
            },
          ],
        },
        lineBreak: {
          description:
            'The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n\n**Syntax**: `auto | loose | normal | strict | anywhere`\n\n**Initial value**: `auto`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE    |\n| :-----: | :-----: | :-----: | :----: | :-----: |\n| **58**  | **69**  | **11**  | **14** | **5.5** |\n| 1 _-x-_ |         | 3 _-x-_ |        |         |',
          enum: [
            '-moz-initial',
            'anywhere',
            'auto',
            'inherit',
            'initial',
            'loose',
            'normal',
            'revert',
            'strict',
            'unset',
          ],
          type: 'string',
        },
        lineHeight: {
          description:
            "The **`line-height`** CSS property sets the height of a line box. It's commonly used to set the distance between lines of text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced inline elements, it specifies the height that is used to calculate line box height.\n\n**Syntax**: `normal | <number> | <length> | <percentage>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
            },
          ],
        },
        lineHeightStep: {
          description:
            'The **`line-height-step`** CSS property sets the step unit for line box heights. When the property is set, line box heights are rounded up to the closest multiple of the unit.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|  n/a   |   No    |   No   | n/a  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        listStyleImage: {
          description:
            'The **`list-style-image`** CSS property sets an image to be used as the list item marker.\n\n**Syntax**: `<url> | none`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        listStylePosition: {
          description:
            'The **`list-style-position`** CSS property sets the position of the `::marker` relative to a list item.\n\n**Syntax**: `inside | outside`\n\n**Initial value**: `outside`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'inside',
            'outside',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        listStyleType: {
          description:
            'The **`list-style-type`** CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element.\n\n**Syntax**: `<counter-style> | <string> | none`\n\n**Initial value**: `disc`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        marginBlock: {
          description:
            "The **`margin-block`** CSS shorthand property defines the logical block start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'margin-left'>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        marginBlockEnd: {
          description:
            "The **`margin-block-end`** CSS property defines the logical block end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        marginBlockStart: {
          description:
            "The **`margin-block-start`** CSS property defines the logical block start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        marginBottom: {
          description:
            'The **`margin-bottom`** CSS property sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        marginInline: {
          description:
            "The **`margin-inline`** CSS shorthand property is a shorthand property that defines both the logical inline start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'margin-left'>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        marginInlineEnd: {
          description:
            "The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`\n\n|          Chrome          |        Firefox        |          Safari          |  Edge  | IE  |\n| :----------------------: | :-------------------: | :----------------------: | :----: | :-: |\n|          **69**          |        **41**         |         **12.1**         | **79** | No  |\n| 2 _(-webkit-margin-end)_ | 3 _(-moz-margin-end)_ | 3 _(-webkit-margin-end)_ |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        marginInlineStart: {
          description:
            "The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`\n\n|           Chrome           |         Firefox         |           Safari           |  Edge  | IE  |\n| :------------------------: | :---------------------: | :------------------------: | :----: | :-: |\n|           **69**           |         **41**          |          **12.1**          | **79** | No  |\n| 2 _(-webkit-margin-start)_ | 3 _(-moz-margin-start)_ | 3 _(-webkit-margin-start)_ |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        marginLeft: {
          description:
            'The **`margin-left`** CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        marginRight: {
          description:
            'The **`margin-right`** CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        marginTop: {
          description:
            'The **`margin-top`** CSS property sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        maskBorderMode: {
          description:
            'The **`mask-border-mode`** CSS property specifies the blending mode used in a mask border.\n\n**Syntax**: `luminance | alpha`\n\n**Initial value**: `alpha`',
          enum: [
            '-moz-initial',
            'alpha',
            'inherit',
            'initial',
            'luminance',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        maskBorderOutset: {
          description:
            "The **`mask-border-outset`** CSS property specifies the distance by which an element's mask border is set out from its border box.\n\n**Syntax**: `[ <length> | <number> ]{1,4}`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        maskBorderRepeat: {
          description:
            "The **`mask-border-repeat`** CSS property sets how the edge regions of a source image are adjusted to fit the dimensions of an element's mask border.\n\n**Syntax**: `[ stretch | repeat | round | space ]{1,2}`\n\n**Initial value**: `stretch`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'repeat',
                'revert',
                'round',
                'space',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        maskBorderSlice: {
          description:
            "The **`mask-border-slice`** CSS property divides the image set by `mask-border-source` into regions. These regions are used to form the components of an element's mask border.\n\n**Syntax**: `<number-percentage>{1,4} fill?`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        maskBorderSource: {
          description:
            "The **`mask-border-source`** CSS property sets the source image used to create an element's mask border.\n\n**Syntax**: `none | <image>`\n\n**Initial value**: `none`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        maskBorderWidth: {
          description:
            "The **`mask-border-width`** CSS property sets the width of an element's mask border.\n\n**Syntax**: `[ <length-percentage> | <number> | auto ]{1,4}`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        maskClip: {
          description:
            'The **`mask-clip`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.\n\n**Syntax**: `[ <geometry-box> | no-clip ]#`\n\n**Initial value**: `border-box`\n\n|   Chrome    | Firefox |   Safari    |     Edge     | IE  |\n| :---------: | :-----: | :---------: | :----------: | :-: |\n| **1** _-x-_ | **53**  | **4** _-x-_ | **79** _-x-_ | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'fill-box',
                'inherit',
                'initial',
                'margin-box',
                'no-clip',
                'padding-box',
                'revert',
                'stroke-box',
                'unset',
                'view-box',
              ],
              type: 'string',
            },
          ],
        },
        maskComposite: {
          description:
            'The **`mask-composite`** CSS property represents a compositing operation used on the current mask layer with the mask layers below it.\n\n**Syntax**: `<compositing-operator>#`\n\n**Initial value**: `add`\n\n| Chrome | Firefox | Safari | Edge  | IE  |\n| :----: | :-----: | :----: | :---: | :-: |\n|   No   | **53**  |   No   | 18-79 | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'add',
                'exclude',
                'inherit',
                'initial',
                'intersect',
                'revert',
                'subtract',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        maskImage: {
          description:
            'The **`mask-image`** CSS property sets the image that is used as mask layer for an element.\n\n**Syntax**: `<mask-reference>#`\n\n**Initial value**: `none`\n\n|   Chrome    | Firefox |   Safari    |  Edge  | IE  |\n| :---------: | :-----: | :---------: | :----: | :-: |\n| **1** _-x-_ | **53**  | **4** _-x-_ | **16** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        maskMode: {
          description:
            'The **`mask-mode`** CSS property sets whether the mask reference defined by `mask-image` is treated as a luminance or alpha mask.\n\n**Syntax**: `<masking-mode>#`\n\n**Initial value**: `match-source`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **53**  |   No   |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'alpha',
                'inherit',
                'initial',
                'luminance',
                'match-source',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        maskOrigin: {
          description:
            'The **`mask-origin`** CSS property sets the origin of a mask.\n\n**Syntax**: `<geometry-box>#`\n\n**Initial value**: `border-box`\n\n|   Chrome    | Firefox |   Safari    |     Edge     | IE  |\n| :---------: | :-----: | :---------: | :----------: | :-: |\n| **1** _-x-_ | **53**  | **4** _-x-_ | **79** _-x-_ | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'inherit',
                'initial',
                'margin-box',
                'padding-box',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        maskPosition: {
          description:
            'The **`mask-position`** CSS property sets the initial position, relative to the mask position layer set by `mask-origin`, for each defined mask image.\n\n**Syntax**: `<position>#`\n\n**Initial value**: `center`\n\n|   Chrome    | Firefox |    Safari     |  Edge  | IE  |\n| :---------: | :-----: | :-----------: | :----: | :-: |\n| **1** _-x-_ | **53**  | **3.2** _-x-_ | **18** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        maskRepeat: {
          description:
            'The **`mask-repeat`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.\n\n**Syntax**: `<repeat-style>#`\n\n**Initial value**: `no-repeat`\n\n|   Chrome    | Firefox |    Safari     |  Edge  | IE  |\n| :---------: | :-----: | :-----------: | :----: | :-: |\n| **1** _-x-_ | **53**  | **3.2** _-x-_ | **18** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'no-repeat',
                'repeat',
                'repeat-x',
                'repeat-y',
                'revert',
                'round',
                'space',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        maskSize: {
          description:
            'The **`mask-size`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto`\n\n|   Chrome    | Firefox |   Safari    |  Edge  | IE  |\n| :---------: | :-----: | :---------: | :----: | :-: |\n| **4** _-x-_ | **53**  | **4** _-x-_ | **18** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'contain',
                'cover',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        maskType: {
          description:
            'The **`mask-type`** CSS property sets whether an SVG `<mask>` element is used as a _luminance_ or an _alpha_ mask. It applies to the `<mask>` element itself.\n\n**Syntax**: `luminance | alpha`\n\n**Initial value**: `luminance`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **24** | **35**  | **6.1** | **79** | No  |',
          enum: [
            '-moz-initial',
            'alpha',
            'inherit',
            'initial',
            'luminance',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        mathStyle: {
          description:
            'The `math-style` property indicates whether MathML equations should render with normal or compact height.\n\n**Syntax**: `normal | compact`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|  n/a   |   n/a   |   No   |  No  | No  |',
          enum: [
            '-moz-initial',
            'compact',
            'inherit',
            'initial',
            'normal',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        maxBlockSize: {
          description:
            "The `**max-block-size**` CSS property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by `writing-mode`. That is, if the writing direction is horizontal, then `max-block-size` is equivalent to `max-height`; if the writing direction is vertical, `max-block-size` is the same as `max-width`.\n\n**Syntax**: `<'max-width'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                0,
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        maxHeight: {
          description:
            'The **`max-height`** CSS property sets the maximum height of an element. It prevents the used value of the `height` property from becoming larger than the value specified for `max-height`.\n\n**Syntax**: `none | <length-percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **18** |  **1**  | **1.3** | **12** | **7** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                '-webkit-max-content',
                '-webkit-min-content',
                0,
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        maxInlineSize: {
          description:
            "The **`max-inline-size`** CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the `max-width` or the `max-height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'max-width'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |   Safari   |  Edge  | IE  |\n| :----: | :-----: | :--------: | :----: | :-: |\n| **57** | **41**  |  **12.1**  | **79** | No  |\n|        |         | 10.1 _-x-_ |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                0,
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        maxLines: {
          description:
            '**Syntax**: `none | <integer>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        maxWidth: {
          description:
            'The **`max-width`** CSS property sets the maximum width of an element. It prevents the used value of the `width` property from becoming larger than the value specified by `max-width`.\n\n**Syntax**: `none | <length-percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **7** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                '-webkit-max-content',
                '-webkit-min-content',
                0,
                'inherit',
                'initial',
                'intrinsic',
                'max-content',
                'min-content',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        minBlockSize: {
          description:
            "The **`min-block-size`** CSS property defines the minimum horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the `min-width` or the `min-height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'min-width'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'revert',
                'unset',
              ],
            },
          ],
        },
        minHeight: {
          description:
            'The **`min-height`** CSS property sets the minimum height of an element. It prevents the used value of the `height` property from becoming smaller than the value specified for `min-height`.\n\n**Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **3**  | **1.3** | **12** | **7** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                '-webkit-max-content',
                '-webkit-min-content',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'revert',
                'unset',
              ],
            },
          ],
        },
        minInlineSize: {
          description:
            "The **`min-inline-size`** CSS property defines the horizontal or vertical minimal size of an element's block, depending on its writing mode. It corresponds to either the `min-width` or the `min-height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'min-width'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'revert',
                'unset',
              ],
            },
          ],
        },
        minWidth: {
          description:
            'The **`min-width`** CSS property sets the minimum width of an element. It prevents the used value of the `width` property from becoming smaller than the value specified for `min-width`.\n\n**Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **7** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                '-webkit-max-content',
                '-webkit-min-content',
                0,
                'auto',
                'inherit',
                'initial',
                'intrinsic',
                'max-content',
                'min-content',
                'min-intrinsic',
                'revert',
                'unset',
              ],
            },
          ],
        },
        mixBlendMode: {
          description:
            "The **`mix-blend-mode`** CSS property sets how an element's content should blend with the content of the element's parent and the element's background.\n\n**Syntax**: `<blend-mode>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **41** | **32**  | **8**  | **79** | No  |",
          enum: [
            '-moz-initial',
            'color',
            'color-burn',
            'color-dodge',
            'darken',
            'difference',
            'exclusion',
            'hard-light',
            'hue',
            'inherit',
            'initial',
            'lighten',
            'luminosity',
            'multiply',
            'normal',
            'overlay',
            'revert',
            'saturation',
            'screen',
            'soft-light',
            'unset',
          ],
          type: 'string',
        },
        motionDistance: {
          description:
            'The **`offset-distance`** CSS property specifies a position along an `offset-path` for an element to be placed.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`\n\n|         Chrome         | Firefox | Safari |  Edge  | IE  |\n| :--------------------: | :-----: | :----: | :----: | :-: |\n|         **55**         | **72**  |   No   | **79** | No  |\n| 46 _(motion-distance)_ |         |        |        |     |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        motionPath: {
          description:
            "The **`offset-path`** CSS property specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system.\n\n**Syntax**: `none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]`\n\n**Initial value**: `none`\n\n|       Chrome       | Firefox | Safari |  Edge  | IE  |\n| :----------------: | :-----: | :----: | :----: | :-: |\n|       **55**       | **72**  |   No   | **79** | No  |\n| 46 _(motion-path)_ |         |        |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'fill-box',
                'inherit',
                'initial',
                'margin-box',
                'none',
                'padding-box',
                'revert',
                'stroke-box',
                'unset',
                'view-box',
              ],
              type: 'string',
            },
          ],
        },
        motionRotation: {
          description:
            'The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n\n**Syntax**: `[ auto | reverse ] || <angle>`\n\n**Initial value**: `auto`\n\n|         Chrome         | Firefox | Safari |  Edge  | IE  |\n| :--------------------: | :-----: | :----: | :----: | :-: |\n|         **56**         | **72**  |   No   | **79** | No  |\n| 46 _(motion-rotation)_ |         |        |        |     |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'reverse',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        objectFit: {
          description:
            'The **`object-fit`** CSS property sets how the content of a replaced element, such as an `<img>` or `<video>`, should be resized to fit its container.\n\n**Syntax**: `fill | contain | cover | none | scale-down`\n\n**Initial value**: `fill`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **31** | **36**  | **10** | **16** | No  |',
          enum: [
            '-moz-initial',
            'contain',
            'cover',
            'fill',
            'inherit',
            'initial',
            'none',
            'revert',
            'scale-down',
            'unset',
          ],
          type: 'string',
        },
        objectPosition: {
          description:
            "The **`object-position`** CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background.\n\n**Syntax**: `<position>`\n\n**Initial value**: `50% 50%`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **31** | **36**  | **10** | **16** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        offsetAnchor: {
          description:
            '**Syntax**: `auto | <position>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **79** | **72**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        offsetDistance: {
          description:
            'The **`offset-distance`** CSS property specifies a position along an `offset-path` for an element to be placed.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`\n\n|         Chrome         | Firefox | Safari |  Edge  | IE  |\n| :--------------------: | :-----: | :----: | :----: | :-: |\n|         **55**         | **72**  |   No   | **79** | No  |\n| 46 _(motion-distance)_ |         |        |        |     |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        offsetPath: {
          description:
            "The **`offset-path`** CSS property specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system.\n\n**Syntax**: `none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]`\n\n**Initial value**: `none`\n\n|       Chrome       | Firefox | Safari |  Edge  | IE  |\n| :----------------: | :-----: | :----: | :----: | :-: |\n|       **55**       | **72**  |   No   | **79** | No  |\n| 46 _(motion-path)_ |         |        |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'fill-box',
                'inherit',
                'initial',
                'margin-box',
                'none',
                'padding-box',
                'revert',
                'stroke-box',
                'unset',
                'view-box',
              ],
              type: 'string',
            },
          ],
        },
        offsetRotate: {
          description:
            'The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n\n**Syntax**: `[ auto | reverse ] || <angle>`\n\n**Initial value**: `auto`\n\n|         Chrome         | Firefox | Safari |  Edge  | IE  |\n| :--------------------: | :-----: | :----: | :----: | :-: |\n|         **56**         | **72**  |   No   | **79** | No  |\n| 46 _(motion-rotation)_ |         |        |        |     |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'reverse',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        offsetRotation: {
          description:
            'The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n\n**Syntax**: `[ auto | reverse ] || <angle>`\n\n**Initial value**: `auto`\n\n|         Chrome         | Firefox | Safari |  Edge  | IE  |\n| :--------------------: | :-----: | :----: | :----: | :-: |\n|         **56**         | **72**  |   No   | **79** | No  |\n| 46 _(motion-rotation)_ |         |        |        |     |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'reverse',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        opacity: {
          description:
            'The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n\n**Syntax**: `<alpha-value>`\n\n**Initial value**: `1.0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **2**  | **12** | **9** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        order: {
          description:
            'The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `0`\n\n|  Chrome  | Firefox | Safari  |  Edge  |    IE    |\n| :------: | :-----: | :-----: | :----: | :------: |\n|  **29**  | **20**  |  **9**  | **12** |  **11**  |\n| 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        orphans: {
          description:
            'The **`orphans`** CSS property sets the minimum number of lines in a block container that must be shown at the _bottom_ of a page, region, or column.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `2`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **25** |   No    | **1.3** | **12** | **8** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        outlineColor: {
          description:
            "The **`outline-color`** CSS property sets the color of an element's outline.\n\n**Syntax**: `<color> | invert`\n\n**Initial value**: `invert`, for browsers supporting it, `currentColor` for the other\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  | **1.5** | **1.2** | **12** | **8** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'invert',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        outlineOffset: {
          description:
            'The **`outline-offset`** CSS property sets the amount of space between an outline and the edge or border of an element.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **1**  | **1.5** | **1.2** | **15** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        outlineStyle: {
          description:
            "The **`outline-style`** CSS property sets the style of an element's outline. An outline is a line that is drawn around an element, outside the `border`.\n\n**Syntax**: `auto | <'border-style'>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  | **1.5** | **1.2** | **12** | **8** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'dashed',
                'dotted',
                'double',
                'groove',
                'hidden',
                'inherit',
                'initial',
                'inset',
                'none',
                'outset',
                'revert',
                'ridge',
                'solid',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        outlineWidth: {
          description:
            "The CSS **`outline-width`** property sets the thickness of an element's outline. An outline is a line that is drawn around an element, outside the `border`.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  | **1.5** | **1.2** | **12** | **8** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        overflowAnchor: {
          description:
            '**Syntax**: `auto | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **56** | **66**  |   No   | **79** | No  |',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        overflowBlock: {
          description:
            '**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **69**  |   No   |  No  | No  |',
          enum: [
            '-moz-initial',
            'auto',
            'clip',
            'hidden',
            'inherit',
            'initial',
            'revert',
            'scroll',
            'unset',
            'visible',
          ],
          type: 'string',
        },
        overflowClipBox: {
          description:
            'The **`overflow-clip-box`** CSS property specifies relative to which box the clipping happens when there is an overflow. It is short hand for the `overflow-clip-box-inline` and `overflow-clip-box-block` properties.\n\n**Syntax**: `padding-box | content-box`\n\n**Initial value**: `padding-box`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **29**  |   No   |  No  | No  |',
          enum: [
            '-moz-initial',
            'content-box',
            'inherit',
            'initial',
            'padding-box',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        overflowInline: {
          description:
            '**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **69**  |   No   |  No  | No  |',
          enum: [
            '-moz-initial',
            'auto',
            'clip',
            'hidden',
            'inherit',
            'initial',
            'revert',
            'scroll',
            'unset',
            'visible',
          ],
          type: 'string',
        },
        overflowWrap: {
          description:
            'The `**overflow-wrap**` CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.\n\n**Syntax**: `normal | break-word | anywhere`\n\n**Initial value**: `normal`\n\n|     Chrome      |      Firefox      |     Safari      |       Edge       |          IE           |\n| :-------------: | :---------------: | :-------------: | :--------------: | :-------------------: |\n|     **23**      |      **49**       |     **6.1**     |      **18**      | **5.5** _(word-wrap)_ |\n| 1 _(word-wrap)_ | 3.5 _(word-wrap)_ | 1 _(word-wrap)_ | 12 _(word-wrap)_ |                       |',
          enum: [
            '-moz-initial',
            'anywhere',
            'break-word',
            'inherit',
            'initial',
            'normal',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        overflowX: {
          description:
            "The **`overflow-x`** CSS property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content.\n\n**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `visible`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  | **3.5** | **3**  | **12** | **5** |",
          enum: [
            '-moz-hidden-unscrollable',
            '-moz-initial',
            'auto',
            'clip',
            'hidden',
            'inherit',
            'initial',
            'revert',
            'scroll',
            'unset',
            'visible',
          ],
          type: 'string',
        },
        overflowY: {
          description:
            "The **`overflow-y`** CSS property sets what shows when content overflows a block-level element's top and bottom edges. This may be nothing, a scroll bar, or the overflow content.\n\n**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `visible`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  | **3.5** | **3**  | **12** | **5** |",
          enum: [
            '-moz-hidden-unscrollable',
            '-moz-initial',
            'auto',
            'clip',
            'hidden',
            'inherit',
            'initial',
            'revert',
            'scroll',
            'unset',
            'visible',
          ],
          type: 'string',
        },
        overscrollBehavior: {
          description:
            "The **`overscroll-behavior`** CSS property sets what a browser does when reaching the boundary of a scrolling area. It's a shorthand for `overscroll-behavior-x` and `overscroll-behavior-y`.\n\n**Syntax**: `[ contain | none | auto ]{1,2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **63** | **59**  |   No   | **18** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'contain',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        overscrollBehaviorBlock: {
          description:
            "The **`overscroll-behavior-block`** CSS property sets the browser's behavior when the block direction boundary of a scrolling area is reached.\n\n**Syntax**: `contain | none | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **77** | **73**  |   No   | **79** | No  |",
          enum: [
            '-moz-initial',
            'auto',
            'contain',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        overscrollBehaviorInline: {
          description:
            "The **`overscroll-behavior-inline`** CSS property sets the browser's behavior when the inline direction boundary of a scrolling area is reached.\n\n**Syntax**: `contain | none | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **77** | **73**  |   No   | **79** | No  |",
          enum: [
            '-moz-initial',
            'auto',
            'contain',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        overscrollBehaviorX: {
          description:
            "The **`overscroll-behavior-x`** CSS property sets the browser's behavior when the horizontal boundary of a scrolling area is reached.\n\n**Syntax**: `contain | none | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **63** | **59**  |   No   | **18** | No  |",
          enum: [
            '-moz-initial',
            'auto',
            'contain',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        overscrollBehaviorY: {
          description:
            "The **`overscroll-behavior-y`** CSS property sets the browser's behavior when the vertical boundary of a scrolling area is reached.\n\n**Syntax**: `contain | none | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **63** | **59**  |   No   | **18** | No  |",
          enum: [
            '-moz-initial',
            'auto',
            'contain',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        paddingBlock: {
          description:
            "The **`padding-block`** CSS shorthand property defines the logical block start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        paddingBlockEnd: {
          description:
            "The **`padding-block-end`** CSS property defines the logical block end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        paddingBlockStart: {
          description:
            "The **`padding-block-start`** CSS property defines the logical block start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        paddingBottom: {
          description:
            'The **`padding-bottom`** CSS property sets the height of the padding area on the bottom of an element.\n\n**Syntax**: `<length> | <percentage>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        paddingInline: {
          description:
            "The **`padding-inline`** CSS shorthand property defines the logical inline start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        paddingInlineEnd: {
          description:
            "The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`\n\n|          Chrome           |        Firefox         |          Safari           |  Edge  | IE  |\n| :-----------------------: | :--------------------: | :-----------------------: | :----: | :-: |\n|          **69**           |         **41**         |         **12.1**          | **79** | No  |\n| 2 _(-webkit-padding-end)_ | 3 _(-moz-padding-end)_ | 3 _(-webkit-padding-end)_ |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        paddingInlineStart: {
          description:
            "The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`\n\n|           Chrome            |         Firefox          |           Safari            |  Edge  | IE  |\n| :-------------------------: | :----------------------: | :-------------------------: | :----: | :-: |\n|           **69**            |          **41**          |          **12.1**           | **79** | No  |\n| 2 _(-webkit-padding-start)_ | 3 _(-moz-padding-start)_ | 3 _(-webkit-padding-start)_ |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        paddingLeft: {
          description:
            'The **`padding-left`** CSS property sets the width of the padding area to the left of an element.\n\n**Syntax**: `<length> | <percentage>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        paddingRight: {
          description:
            'The **`padding-right`** CSS property sets the width of the padding area on the right of an element.\n\n**Syntax**: `<length> | <percentage>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        paddingTop: {
          description:
            'The **`padding-top`** CSS property sets the height of the padding area on the top of an element.\n\n**Syntax**: `<length> | <percentage>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        pageBreakAfter: {
          description:
            'The **`page-break-after`** CSS property adjusts page breaks _after_ the current element.\n\n**Syntax**: `auto | always | avoid | left | right | recto | verso`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **1**  | **1.2** | **12** | **4** |',
          enum: [
            '-moz-initial',
            'always',
            'auto',
            'avoid',
            'inherit',
            'initial',
            'left',
            'recto',
            'revert',
            'right',
            'unset',
            'verso',
          ],
          type: 'string',
        },
        pageBreakBefore: {
          description:
            'The **`page-break-before`** CSS property adjusts page breaks _before_ the current element.\n\n**Syntax**: `auto | always | avoid | left | right | recto | verso`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **1**  | **1.2** | **12** | **4** |',
          enum: [
            '-moz-initial',
            'always',
            'auto',
            'avoid',
            'inherit',
            'initial',
            'left',
            'recto',
            'revert',
            'right',
            'unset',
            'verso',
          ],
          type: 'string',
        },
        pageBreakInside: {
          description:
            'The **`page-break-inside`** CSS property adjusts page breaks _inside_ the current element.\n\n**Syntax**: `auto | avoid`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  | **19**  | **1.3** | **12** | **8** |',
          enum: [
            '-moz-initial',
            'auto',
            'avoid',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        paintOrder: {
          description:
            'The **`paint-order`** CSS property lets you control the order in which the fill and stroke (and painting markers) of text content and shapes are drawn.\n\n**Syntax**: `normal | [ fill || stroke || markers ]`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **35** | **60**  | **8**  | **17** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'fill',
                'inherit',
                'initial',
                'markers',
                'normal',
                'revert',
                'stroke',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        perspective: {
          description:
            'The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n\n**Syntax**: `none | <length>`\n\n**Initial value**: `none`\n\n|  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n| :------: | :------: | :-----: | :----: | :----: |\n|  **36**  |  **16**  |  **9**  | **12** | **10** |\n| 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        perspectiveOrigin: {
          description:
            'The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n\n**Syntax**: `<position>`\n\n**Initial value**: `50% 50%`\n\n|  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n| :------: | :------: | :-----: | :----: | :----: |\n|  **36**  |  **16**  |  **9**  | **12** | **10** |\n| 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        placeContent: {
          description:
            "The `**place-content**` CSS shorthand property allows you to align content along both the block and inline directions at once (i.e. the `align-content` and `justify-content` properties) in a relevant layout system such as Grid or Flexbox.\n\n**Syntax**: `<'align-content'> <'justify-content'>?`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **45**  | **9**  | **79** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **53**  | **11** | **79** | No  |\n\n---",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'normal',
                'revert',
                'space-around',
                'space-between',
                'space-evenly',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        pointerEvents: {
          description:
            'The **`pointer-events`** CSS property sets under what circumstances (if any) a particular graphic element can become the target of pointer events.\n\n**Syntax**: `auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **1**  | **1.5** | **4**  | **12** | **11** |',
          enum: [
            '-moz-initial',
            'all',
            'auto',
            'fill',
            'inherit',
            'initial',
            'none',
            'painted',
            'revert',
            'stroke',
            'unset',
            'visible',
            'visibleFill',
            'visiblePainted',
            'visibleStroke',
          ],
          type: 'string',
        },
        position: {
          description:
            'The **`position`** CSS property sets how an element is positioned in a document. The `top`, `right`, `bottom`, and `left` properties determine the final location of positioned elements.\n\n**Syntax**: `static | relative | absolute | sticky | fixed`\n\n**Initial value**: `static`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          enum: [
            '-moz-initial',
            '-webkit-sticky',
            'absolute',
            'fixed',
            'inherit',
            'initial',
            'relative',
            'revert',
            'static',
            'sticky',
            'unset',
          ],
          type: 'string',
        },
        quotes: {
          description:
            'The **`quotes`** CSS property sets how the browser should render quotation marks that are added using the `open-quotes` or `close-quotes` values of the CSS `content` property.\n\n**Syntax**: `none | auto | [ <string> <string> ]+`\n\n**Initial value**: depends on user agent\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **11** | **1.5** | **9**  | **12** | **8** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        resize: {
          description:
            'The **`resize`** CSS property sets whether an element is resizable, and if so, in which directions.\n\n**Syntax**: `none | both | horizontal | vertical | block | inline`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **1**  |  **4**  | **3**  | **79** | No  |',
          enum: [
            '-moz-initial',
            'block',
            'both',
            'horizontal',
            'inherit',
            'initial',
            'inline',
            'none',
            'revert',
            'unset',
            'vertical',
          ],
          type: 'string',
        },
        right: {
          description:
            'The **`right`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        rotate: {
          description:
            'The **`rotate`** CSS property allows you to specify rotation transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` property.\n\n**Syntax**: `none | <angle> | [ x | y | z | <number>{3} ] && <angle>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **72**  |   No   |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        rowGap: {
          description:
            "The **`row-gap`** CSS property sets the size of the gap (gutter) between an element's grid rows.\n\n**Syntax**: `normal | <length-percentage>`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **84** | **63**  |   No   | **84** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n|       Chrome        |       Firefox       |        Safari         |  Edge  | IE  |\n| :-----------------: | :-----------------: | :-------------------: | :----: | :-: |\n|       **66**        |       **61**        |       **12.1**        | **16** | No  |\n| 57 _(grid-row-gap)_ | 52 _(grid-row-gap)_ | 10.1 _(grid-row-gap)_ |        |     |\n\n---",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
            },
          ],
        },
        rubyAlign: {
          description:
            'The `**ruby-align**` CSS property defines the distribution of the different ruby elements over the base.\n\n**Syntax**: `start | center | space-between | space-around`\n\n**Initial value**: `space-around`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **38**  |   No   |  No  | No  |',
          enum: [
            '-moz-initial',
            'center',
            'inherit',
            'initial',
            'revert',
            'space-around',
            'space-between',
            'start',
            'unset',
          ],
          type: 'string',
        },
        rubyMerge: {
          description:
            '**Syntax**: `separate | collapse | auto`\n\n**Initial value**: `separate`',
          enum: [
            '-moz-initial',
            'auto',
            'collapse',
            'inherit',
            'initial',
            'revert',
            'separate',
            'unset',
          ],
          type: 'string',
        },
        rubyPosition: {
          description:
            'The `**ruby-position**` CSS property defines the position of a ruby element relatives to its base element. It can be position over the element (`over`), under it (`under`), or between the characters, on their right side (`inter-character`).\n\n**Syntax**: `over | under | inter-character`\n\n**Initial value**: `over`\n\n| Chrome  | Firefox |    Safari     | Edge  | IE  |\n| :-----: | :-----: | :-----------: | :---: | :-: |\n| **84**  | **38**  | **6.1** _-x-_ | 12-79 | No  |\n| 1 _-x-_ |         |               |       |     |',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'over',
            'revert',
            'under',
            'unset',
          ],
          type: 'string',
        },
        scale: {
          description:
            'The **`scale`** CSS property allows you to specify scale transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` value.\n\n**Syntax**: `none | <number>{1,3}`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **72**  |   No   |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        scrollBehavior: {
          description:
            'The **`scroll-behavior`** CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs.\n\n**Syntax**: `auto | smooth`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **61** | **36**  |  n/a   | **79** | No  |',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'revert',
            'smooth',
            'unset',
          ],
          type: 'string',
        },
        scrollMargin: {
          description:
            'The **`scroll-margin`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the `margin` property does for margins of an element.\n\n**Syntax**: `<length>{1,4}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |            Safari             |  Edge  | IE  |\n| :----: | :-----: | :---------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin)_ | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollMarginBlock: {
          description:
            'The `scroll-margin-block` shorthand property sets the scroll margins of an element in the block dimension.\n\n**Syntax**: `<length>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollMarginBlockEnd: {
          description:
            'The `scroll-margin-block-end` property defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollMarginBlockStart: {
          description:
            'The `scroll-margin-block-start` property defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollMarginBottom: {
          description:
            'The `scroll-margin-bottom` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |                Safari                |  Edge  | IE  |\n| :----: | :-----: | :----------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-bottom)_ | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollMarginInline: {
          description:
            'The `scroll-margin-inline` shorthand property sets the scroll margins of an element in the inline dimension.\n\n**Syntax**: `<length>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **68**  |   No   |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollMarginInlineEnd: {
          description:
            'The `scroll-margin-inline-end` property defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollMarginInlineStart: {
          description:
            'The `scroll-margin-inline-start` property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollMarginLeft: {
          description:
            'The `scroll-margin-left` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |               Safari               |  Edge  | IE  |\n| :----: | :-----: | :--------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-left)_ | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollMarginRight: {
          description:
            'The `scroll-margin-right` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |               Safari                |  Edge  | IE  |\n| :----: | :-----: | :---------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-right)_ | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollMarginTop: {
          description:
            'The `scroll-margin-top` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |              Safari               |  Edge  | IE  |\n| :----: | :-----: | :-------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-top)_ | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollPadding: {
          description:
            'The **`scroll-padding`** shorthand property sets scroll padding on all sides of an element at once, much like the `padding` property does for padding on an element.\n\n**Syntax**: `[ auto | <length-percentage> ]{1,4}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollPaddingBlock: {
          description:
            'The `scroll-padding-block` shorthand property sets the scroll padding of an element in the block dimension.\n\n**Syntax**: `[ auto | <length-percentage> ]{1,2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollPaddingBlockEnd: {
          description:
            'The `scroll-padding-block-end` property defines offsets for the end edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollPaddingBlockStart: {
          description:
            'The `scroll-padding-block-start` property defines offsets for the start edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollPaddingBottom: {
          description:
            'The `scroll-padding-bottom` property defines offsets for the bottom of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollPaddingInline: {
          description:
            'The `scroll-padding-inline` shorthand property sets the scroll padding of an element in the inline dimension.\n\n**Syntax**: `[ auto | <length-percentage> ]{1,2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollPaddingInlineEnd: {
          description:
            'The `scroll-padding-inline-end` property defines offsets for the end edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollPaddingInlineStart: {
          description:
            'The `scroll-padding-inline-start` property defines offsets for the start edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollPaddingLeft: {
          description:
            'The `scroll-padding-left` property defines offsets for the left of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollPaddingRight: {
          description:
            'The `scroll-padding-right` property defines offsets for the right of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollPaddingTop: {
          description:
            'The **`scroll-padding-top`** property defines offsets for the top of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollSnapAlign: {
          description:
            'The `scroll-snap-align` property specifies the box’s snap position as an alignment of its snap area (as the alignment subject) within its snap container’s snapport (as the alignment container). The two values specify the snapping alignment in the block axis and inline axis, respectively. If only one value is specified, the second value defaults to the same value.\n\n**Syntax**: `[ none | start | end | center ]{1,2}`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'center',
                'end',
                'inherit',
                'initial',
                'none',
                'revert',
                'start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        scrollSnapMargin: {
          description:
            'The **`scroll-margin`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the `margin` property does for margins of an element.\n\n**Syntax**: `<length>{1,4}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |            Safari             |  Edge  | IE  |\n| :----: | :-----: | :---------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin)_ | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollSnapMarginBottom: {
          description:
            'The `scroll-margin-bottom` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |                Safari                |  Edge  | IE  |\n| :----: | :-----: | :----------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-bottom)_ | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollSnapMarginLeft: {
          description:
            'The `scroll-margin-left` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |               Safari               |  Edge  | IE  |\n| :----: | :-----: | :--------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-left)_ | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollSnapMarginRight: {
          description:
            'The `scroll-margin-right` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |               Safari                |  Edge  | IE  |\n| :----: | :-----: | :---------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-right)_ | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollSnapMarginTop: {
          description:
            'The `scroll-margin-top` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |              Safari               |  Edge  | IE  |\n| :----: | :-----: | :-------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-top)_ | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollSnapStop: {
          description:
            'The **`scroll-snap-stop`** CSS property defines whether the scroll container is allowed to "pass over" possible snap positions.\n\n**Syntax**: `normal | always`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **75** |   No    |   No   | **79** | No  |',
          enum: [
            '-moz-initial',
            'always',
            'inherit',
            'initial',
            'normal',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        scrollSnapType: {
          description:
            'The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n\n**Syntax**: `none | [ x | y | block | inline | both ] [ mandatory | proximity ]?`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari  |     Edge     |      IE      |\n| :----: | :-----: | :-----: | :----------: | :----------: |\n| **69** |  39-68  | **11**  | **12** _-x-_ | **10** _-x-_ |\n|        |         | 9 _-x-_ |              |              |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'block',
                'both',
                'inherit',
                'initial',
                'inline',
                'none',
                'revert',
                'unset',
                'x',
                'y',
              ],
              type: 'string',
            },
          ],
        },
        scrollbarColor: {
          description:
            'The **`scrollbar-color`** CSS property sets the color of the scrollbar track and thumb.\n\n**Syntax**: `auto | dark | light | <color>{2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **64**  |   No   |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'auto',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'dark',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'light',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        scrollbarGutter: {
          description:
            "The **`scrollbar-gutter`** CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed.\n\n**Syntax**: `auto | [ stable | always ] && both? && force?`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|  n/a   |   No    |   No   |  No  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'always',
                'auto',
                'inherit',
                'initial',
                'revert',
                'stable',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        scrollbarWidth: {
          description:
            'The **`scrollbar-width`** property allows the author to set the maximum thickness of an element’s scrollbars when they are shown.\n\n**Syntax**: `auto | thin | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **64**  |   No   |  No  | No  |',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'none',
            'revert',
            'thin',
            'unset',
          ],
          type: 'string',
        },
        shapeImageThreshold: {
          description:
            'The **`shape-image-threshold`** CSS property sets the alpha channel threshold used to extract the shape using an image as the value for `shape-outside`.\n\n**Syntax**: `<alpha-value>`\n\n**Initial value**: `0.0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **37** | **62**  | **10.1** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        shapeMargin: {
          description:
            'The **`shape-margin`** CSS property sets a margin for a CSS shape created using `shape-outside`.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **37** | **62**  | **10.1** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        shapeOutside: {
          description:
            'The **`shape-outside`** CSS property defines a shape—which may be non-rectangular—around which adjacent inline content should wrap. By default, inline content wraps around its margin box; `shape-outside` provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than simple boxes.\n\n**Syntax**: `none | <shape-box> || <basic-shape> | <image>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **37** | **62**  | **10.1** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'inherit',
                'initial',
                'margin-box',
                'none',
                'padding-box',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        tabSize: {
          description:
            'The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n\n**Syntax**: `<integer> | <length>`\n\n**Initial value**: `8`\n\n| Chrome |   Firefox   | Safari  |  Edge  | IE  |\n| :----: | :---------: | :-----: | :----: | :-: |\n| **21** | **4** _-x-_ | **6.1** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        tableLayout: {
          description:
            'The **`table-layout`** CSS property sets the algorithm used to lay out `<table>` cells, rows, and columns.\n\n**Syntax**: `auto | fixed`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **14** |  **1**  | **1**  | **12** | **5** |',
          enum: [
            '-moz-initial',
            'auto',
            'fixed',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        textAlign: {
          description:
            'The **`text-align`** CSS property sets the horizontal alignment of a block element or table-cell box. This means it works like `vertical-align` but in the horizontal direction.\n\n**Syntax**: `start | end | left | right | center | justify | match-parent`\n\n**Initial value**: `start`, or a nameless value that acts as `left` if _direction_ is `ltr`, `right` if _direction_ is `rtl` if `start` is not supported by the browser.\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
          enum: [
            '-moz-initial',
            'center',
            'end',
            'inherit',
            'initial',
            'justify',
            'left',
            'match-parent',
            'revert',
            'right',
            'start',
            'unset',
          ],
          type: 'string',
        },
        textAlignLast: {
          description:
            'The **`text-align-last`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.\n\n**Syntax**: `auto | start | end | left | right | center | justify`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **47** | **49**  |   No   | **12** | **5.5** |',
          enum: [
            '-moz-initial',
            'auto',
            'center',
            'end',
            'inherit',
            'initial',
            'justify',
            'left',
            'revert',
            'right',
            'start',
            'unset',
          ],
          type: 'string',
        },
        textCombineUpright: {
          description:
            'The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n\n**Syntax**: `none | all | [ digits <integer>? ]`\n\n**Initial value**: `none`\n\n|           Chrome           | Firefox |              Safari              |                Edge                |                   IE                   |\n| :------------------------: | :-----: | :------------------------------: | :--------------------------------: | :------------------------------------: |\n|           **48**           | **48**  | **5.1** _(-webkit-text-combine)_ |               15-79                | **11** _(-ms-text-combine-horizontal)_ |\n| 9 _(-webkit-text-combine)_ |         |                                  | 12 _(-ms-text-combine-horizontal)_ |                                        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-ms-text-combine-horizontal',
                'all',
                'digits',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        textDecorationColor: {
          description:
            'The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **36**  | **12.1** | **79** | No  |\n|        |         | 8 _-x-_  |        |     |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        textDecorationLine: {
          description:
            'The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n\n**Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **36**  | **12.1** | **79** | No  |\n|        |         | 8 _-x-_  |        |     |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'blink',
                'grammar-error',
                'inherit',
                'initial',
                'line-through',
                'none',
                'overline',
                'revert',
                'spelling-error',
                'underline',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        textDecorationSkip: {
          description:
            'The **`text-decoration-skip`** CSS property sets what parts of an element’s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.\n\n**Syntax**: `none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]`\n\n**Initial value**: `objects`\n\n| Chrome | Firefox |  Safari  | Edge | IE  |\n| :----: | :-----: | :------: | :--: | :-: |\n| 57-64  |   No    | **12.1** |  No  | No  |\n|        |         | 8 _-x-_  |      |     |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'box-decoration',
                'edges',
                'inherit',
                'initial',
                'leading-spaces',
                'none',
                'objects',
                'revert',
                'spaces',
                'trailing-spaces',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        textDecorationSkipInk: {
          description:
            'The **`text-decoration-skip-ink`** CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.\n\n**Syntax**: `auto | all | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **64** | **70**  |   No   | **79** | No  |',
          enum: [
            '-moz-initial',
            'all',
            'auto',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        textDecorationStyle: {
          description:
            'The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n\n**Syntax**: `solid | double | dotted | dashed | wavy`\n\n**Initial value**: `solid`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **36**  | **12.1** | **79** | No  |\n|        |         | 8 _-x-_  |        |     |',
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'inherit',
            'initial',
            'revert',
            'solid',
            'unset',
            'wavy',
          ],
          type: 'string',
        },
        textDecorationThickness: {
          description:
            'The **`text-decoration-thickness`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.\n\n**Syntax**: `auto | from-font | <length> | <percentage> `\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **87** | **70**  | **12.1** | **87** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'from-font',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        textDecorationWidth: {
          description:
            'The **`text-decoration-thickness`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.\n\n**Syntax**: `auto | from-font | <length> | <percentage> `\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **87** | **70**  | **12.1** | **87** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'from-font',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        textEmphasisColor: {
          description:
            'The **`text-emphasis-color`** CSS property sets the color of emphasis marks. This value can also be set using the `text-emphasis` shorthand.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n|    Chrome    | Firefox | Safari  |     Edge     | IE  |\n| :----------: | :-----: | :-----: | :----------: | :-: |\n| **25** _-x-_ | **46**  | **6.1** | **79** _-x-_ | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        textEmphasisPosition: {
          description:
            "The **`text-emphasis-position`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased.\n\n**Syntax**: `[ over | under ] && [ right | left ]`\n\n**Initial value**: `over right`\n\n|    Chrome    | Firefox | Safari  |     Edge     | IE  |\n| :----------: | :-----: | :-----: | :----------: | :-: |\n| **25** _-x-_ | **46**  | **6.1** | **79** _-x-_ | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        textEmphasisStyle: {
          description:
            'The **`text-emphasis-style`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the `text-emphasis` shorthand.\n\n**Syntax**: `none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>`\n\n**Initial value**: `none`\n\n|    Chrome    | Firefox | Safari  |     Edge     | IE  |\n| :----------: | :-----: | :-----: | :----------: | :-: |\n| **25** _-x-_ | **46**  | **6.1** | **79** _-x-_ | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'circle',
                'dot',
                'double-circle',
                'filled',
                'inherit',
                'initial',
                'none',
                'open',
                'revert',
                'sesame',
                'triangle',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        textIndent: {
          description:
            'The **`text-indent`** CSS property sets the length of empty space (indentation) that is put before lines of text in a block.\n\n**Syntax**: `<length-percentage> && hanging? && each-line?`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        textJustify: {
          description:
            'The **`text-justify`** CSS property sets what type of justification should be applied to text when `text-align``: justify;` is set on an element.\n\n**Syntax**: `auto | inter-character | inter-word | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n|  n/a   | **55**  |   No   | **12** | **11** |',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'inter-character',
            'inter-word',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        textOrientation: {
          description:
            'The **`text-orientation`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when `writing-mode` is not `horizontal-tb`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.\n\n**Syntax**: `mixed | upright | sideways`\n\n**Initial value**: `mixed`\n\n|  Chrome  | Firefox |  Safari   |  Edge  | IE  |\n| :------: | :-----: | :-------: | :----: | :-: |\n|  **48**  | **41**  |  **14**   | **79** | No  |\n| 11 _-x-_ |         | 5.1 _-x-_ |        |     |',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'mixed',
            'revert',
            'sideways',
            'unset',
            'upright',
          ],
          type: 'string',
        },
        textOverflow: {
          description:
            "The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('`…`'), or display a custom string.\n\n**Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n\n**Initial value**: `clip`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **7**  | **1.3** | **12** | **6** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'clip',
                'ellipsis',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        textRendering: {
          description:
            'The **`text-rendering`** CSS property provides information to the rendering engine about what to optimize for when rendering text.\n\n**Syntax**: `auto | optimizeSpeed | optimizeLegibility | geometricPrecision`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **4**  |  **1**  | **5**  | **79** | No  |',
          enum: [
            '-moz-initial',
            'auto',
            'geometricPrecision',
            'inherit',
            'initial',
            'optimizeLegibility',
            'optimizeSpeed',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        textShadow: {
          description:
            'The **`text-shadow`** CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and any of its `decorations`. Each shadow is described by some combination of X and Y offsets from the element, blur radius, and color.\n\n**Syntax**: `none | <shadow-t>#`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari  |  Edge  |   IE   |\n| :----: | :-----: | :-----: | :----: | :----: |\n| **2**  | **3.5** | **1.1** | **12** | **10** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        textSizeAdjust: {
          description:
            'The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n\n**Syntax**: `none | auto | <percentage>`\n\n**Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **54** |   No    |   No   | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        textTransform: {
          description:
            "The **`text-transform`** CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized. It also can help improve legibility for ruby.\n\n**Syntax**: `none | capitalize | uppercase | lowercase | full-width | full-size-kana`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          enum: [
            '-moz-initial',
            'capitalize',
            'full-size-kana',
            'full-width',
            'inherit',
            'initial',
            'lowercase',
            'none',
            'revert',
            'unset',
            'uppercase',
          ],
          type: 'string',
        },
        textUnderlineOffset: {
          description:
            'The **`text-underline-offset`** CSS property sets the offset distance of an underline text decoration line (applied using `text-decoration`) from its original position.\n\n**Syntax**: `auto | <length> | <percentage> `\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **87** | **70**  | **12.1** | **87** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        textUnderlinePosition: {
          description:
            "The **`text-underline-position`** CSS property specifies the position of the underline which is set using the `text-decoration` property's `underline` value.\n\n**Syntax**: `auto | from-font | [ under || [ left | right ] ]`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  |  IE   |\n| :----: | :-----: | :------: | :----: | :---: |\n| **33** | **74**  | **12.1** | **12** | **6** |\n|        |         | 9 _-x-_  |        |       |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'from-font',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'under',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        top: {
          description:
            'The **`top`** CSS property participates in specifying the vertical position of a positioned element. It has no effect on non-positioned elements.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **5** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        touchAction: {
          description:
            "The **`touch-action`** CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).\n\n**Syntax**: `auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |    IE    |\n| :----: | :-----: | :----: | :----: | :------: |\n| **36** | **52**  | **13** | **12** |  **11**  |\n|        |         |        |        | 10 _-x-_ |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-ms-manipulation',
                '-ms-none',
                '-ms-pinch-zoom',
                'auto',
                'inherit',
                'initial',
                'manipulation',
                'none',
                'pan-down',
                'pan-left',
                'pan-right',
                'pan-up',
                'pan-x',
                'pan-y',
                'pinch-zoom',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        transform: {
          description:
            'The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n\n**Syntax**: `none | <transform-list>`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE    |\n| :-----: | :-----: | :-------: | :----: | :-----: |\n| **36**  | **16**  |   **9**   | **12** | **10**  |\n| 1 _-x-_ |         | 3.1 _-x-_ |        | 9 _-x-_ |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        transformBox: {
          description:
            'The **`transform-box`** CSS property defines the layout box to which the `transform` and `transform-origin` properties relate.\n\n**Syntax**: `content-box | border-box | fill-box | stroke-box | view-box`\n\n**Initial value**: `view-box`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **64** | **55**  | **11** | **79** | No  |',
          enum: [
            '-moz-initial',
            'border-box',
            'content-box',
            'fill-box',
            'inherit',
            'initial',
            'revert',
            'stroke-box',
            'unset',
            'view-box',
          ],
          type: 'string',
        },
        transformOrigin: {
          description:
            "The **`transform-origin`** CSS property sets the origin for an element's transformations.\n\n**Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n\n**Initial value**: `50% 50% 0`\n\n| Chrome  |  Firefox  | Safari  |  Edge  |   IE    |\n| :-----: | :-------: | :-----: | :----: | :-----: |\n| **36**  |  **16**   |  **9**  | **12** | **10**  |\n| 1 _-x-_ | 3.5 _-x-_ | 2 _-x-_ |        | 9 _-x-_ |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        transformStyle: {
          description:
            'The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n\n**Syntax**: `flat | preserve-3d`\n\n**Initial value**: `flat`\n\n|  Chrome  | Firefox  | Safari  |  Edge  | IE  |\n| :------: | :------: | :-----: | :----: | :-: |\n|  **36**  |  **16**  |  **9**  | **12** | No  |\n| 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |     |',
          enum: [
            '-moz-initial',
            'flat',
            'inherit',
            'initial',
            'preserve-3d',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        transitionDelay: {
          description:
            "The **`transition-delay`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **26**  | **16**  |  **9**  | **12** | **10** |\n| 1 _-x-_ | 4 _-x-_ | 4 _-x-_ |        |        |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        transitionDuration: {
          description:
            'The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :-----: | :-----: | :-------: | :----: | :----: |\n| **26**  | **16**  |   **9**   | **12** | **10** |\n| 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        transitionProperty: {
          description:
            'The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n\n**Syntax**: `none | <single-transition-property>#`\n\n**Initial value**: all\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :-----: | :-----: | :-------: | :----: | :----: |\n| **26**  | **16**  |   **9**   | **12** | **10** |\n| 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'all',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        transitionTimingFunction: {
          description:
            'The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :-----: | :-----: | :-------: | :----: | :----: |\n| **26**  | **16**  |   **9**   | **12** | **10** |\n| 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        translate: {
          description:
            'The **`translate`** CSS property allows you to specify translation transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` value.\n\n**Syntax**: `none | <length-percentage> [ <length-percentage> <length>? ]?`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **72**  |   No   |  No  | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        unicodeBidi: {
          description:
            'The **`unicode-bidi`** CSS property, together with the `direction` property, determines how bidirectional text in a document is handled. For example, if a block of content contains both left-to-right and right-to-left text, the user-agent uses a complex Unicode algorithm to decide how to display the text. The `unicode-bidi` property overrides this algorithm and allows the developer to control the text embedding.\n\n**Syntax**: `normal | embed | isolate | bidi-override | isolate-override | plaintext`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari  |  Edge  |   IE    |\n| :----: | :-----: | :-----: | :----: | :-----: |\n| **2**  |  **1**  | **1.3** | **12** | **5.5** |',
          enum: [
            '-moz-initial',
            '-moz-isolate',
            '-moz-isolate-override',
            '-moz-plaintext',
            '-webkit-isolate',
            'bidi-override',
            'embed',
            'inherit',
            'initial',
            'isolate',
            'isolate-override',
            'normal',
            'plaintext',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        userSelect: {
          description:
            "The `**user-select**` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.\n\n**Syntax**: `auto | text | none | contain | all`\n\n**Initial value**: `auto`\n\n| Chrome  | Firefox |   Safari    |     Edge     |      IE      |\n| :-----: | :-----: | :---------: | :----------: | :----------: |\n| **54**  | **69**  | **3** _-x-_ | **12** _-x-_ | **10** _-x-_ |\n| 1 _-x-_ | 1 _-x-_ |             |              |              |",
          enum: [
            '-moz-initial',
            '-moz-none',
            'all',
            'auto',
            'contain',
            'element',
            'inherit',
            'initial',
            'none',
            'revert',
            'text',
            'unset',
          ],
          type: 'string',
        },
        verticalAlign: {
          description:
            'The **`vertical-align`** CSS property sets vertical alignment of an inline, inline-block or table-cell box.\n\n**Syntax**: `baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>`\n\n**Initial value**: `baseline`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'baseline',
                'bottom',
                'inherit',
                'initial',
                'middle',
                'revert',
                'sub',
                'super',
                'text-bottom',
                'text-top',
                'top',
                'unset',
              ],
            },
          ],
        },
        visibility: {
          description:
            'The **`visibility`** CSS property shows or hides an element without changing the layout of a document. The property can also hide rows or columns in a `<table>`.\n\n**Syntax**: `visible | hidden | collapse`\n\n**Initial value**: `visible`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          enum: [
            '-moz-initial',
            'collapse',
            'hidden',
            'inherit',
            'initial',
            'revert',
            'unset',
            'visible',
          ],
          type: 'string',
        },
        whiteSpace: {
          description:
            'The **`white-space`** CSS property sets how white space inside an element is handled.\n\n**Syntax**: `normal | pre | nowrap | pre-wrap | pre-line | break-spaces`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |',
          enum: [
            '-moz-initial',
            '-moz-pre-wrap',
            'break-spaces',
            'inherit',
            'initial',
            'normal',
            'nowrap',
            'pre',
            'pre-line',
            'pre-wrap',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        widows: {
          description:
            'The **`widows`** CSS property sets the minimum number of lines in a block container that must be shown at the _top_ of a page, region, or column.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `2`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **25** |   No    | **1.3** | **12** | **8** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        width: {
          description:
            "The **`width`** CSS property sets an element's width. By default, it sets the width of the content area, but if `box-sizing` is set to `border-box`, it sets the width of the border area.\n\n**Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                '-webkit-max-content',
                0,
                'auto',
                'inherit',
                'initial',
                'intrinsic',
                'max-content',
                'min-content',
                'min-intrinsic',
                'revert',
                'unset',
              ],
            },
          ],
        },
        willChange: {
          description:
            'The **`will-change`** CSS property hints to browsers how an element is expected to change. Browsers may set up optimizations before an element is actually changed. These kinds of optimizations can increase the responsiveness of a page by doing potentially expensive work before they are actually required.\n\n**Syntax**: `auto | <animateable-feature>#`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **36** | **36**  | **9.1** | **79** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'contents',
                'inherit',
                'initial',
                'revert',
                'scroll-position',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        wordBreak: {
          description:
            'The **`word-break`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.\n\n**Syntax**: `normal | break-all | keep-all | break-word`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  | **15**  | **3**  | **12** | **5.5** |',
          enum: [
            '-moz-initial',
            'break-all',
            'break-word',
            'inherit',
            'initial',
            'keep-all',
            'normal',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        wordSpacing: {
          description:
            'The **`word-spacing`** CSS property sets the length of space between words and between tags.\n\n**Syntax**: `normal | <length-percentage>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **6** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
            },
          ],
        },
        wordWrap: {
          description:
            'The `**overflow-wrap**` CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.\n\n**Syntax**: `normal | break-word`\n\n**Initial value**: `normal`',
          enum: [
            '-moz-initial',
            'break-word',
            'inherit',
            'initial',
            'normal',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        writingMode: {
          description:
            'The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n\n**Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n\n**Initial value**: `horizontal-tb`\n\n| Chrome  | Firefox |  Safari   |  Edge  |  IE   |\n| :-----: | :-----: | :-------: | :----: | :---: |\n| **48**  | **41**  | **10.1**  | **12** | **9** |\n| 8 _-x-_ |         | 5.1 _-x-_ |        |       |',
          enum: [
            '-moz-initial',
            'horizontal-tb',
            'inherit',
            'initial',
            'revert',
            'sideways-lr',
            'sideways-rl',
            'unset',
            'vertical-lr',
            'vertical-rl',
          ],
          type: 'string',
        },
        zIndex: {
          description:
            'The **`z-index`** CSS property sets the z-order of a positioned element and its descendants or flex items. Overlapping elements with a larger z-index cover those with a smaller one.\n\n**Syntax**: `auto | <integer>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        zoom: {
          description:
            'The non-standard **`zoom`** CSS property can be used to control the magnification level of an element. `transform: scale()` should be used instead of this property, if possible. However, unlike CSS Transforms, `zoom` affects the layout size of the element.\n\n**Syntax**: `normal | reset | <number> | <percentage>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari  |  Edge  |   IE    |\n| :----: | :-----: | :-----: | :----: | :-----: |\n| **1**  |   No    | **3.1** | **12** | **5.5** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'normal',
                'reset',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        all: {
          description:
            "The `**all**` shorthand CSS property resets all of an element's properties except `unicode-bidi`, `direction`, and CSS Custom Properties. It can set properties to their initial or inherited values, or to the values specified in another stylesheet origin.\n\n**Syntax**: `initial | inherit | unset | revert`\n\n**Initial value**: There is no practical initial value for it.\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **37** | **27**  | **9.1** | **79** | No  |",
          enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
          type: 'string',
        },
        animation: {
          description:
            'The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n\n**Syntax**: `<single-animation>#`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'alternate',
                'alternate-reverse',
                'backwards',
                'both',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'forwards',
                'infinite',
                'inherit',
                'initial',
                'linear',
                'none',
                'normal',
                'paused',
                'reverse',
                'revert',
                'running',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        background: {
          description:
            'The **`background`** shorthand CSS property sets all background style properties at once, such as color, image, origin and size, or repeat method.\n\n**Syntax**: `[ <bg-layer> , ]* <final-bg-layer>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'border-box',
                'bottom',
                'brown',
                'burlywood',
                'cadetblue',
                'center',
                'chartreuse',
                'chocolate',
                'content-box',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'fixed',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'left',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'local',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'no-repeat',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'padding-box',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'repeat',
                'repeat-x',
                'repeat-y',
                'revert',
                'right',
                'rosybrown',
                'round',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'scroll',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'space',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'top',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        border: {
          description:
            "The **`border`** shorthand CSS property sets an element's border. It sets the values of `border-width`, `border-style`, and `border-color`.\n\n**Syntax**: `<line-width> || <line-style> || <color>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        borderBlock: {
          description:
            "The **`border-block`** CSS property is a shorthand property for setting the individual logical block border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        borderBlockEnd: {
          description:
            "The **`border-block-end`** CSS property is a shorthand property for setting the individual logical block-end border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        borderBlockStart: {
          description:
            "The **`border-block-start`** CSS property is a shorthand property for setting the individual logical block-start border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        borderBottom: {
          description:
            "The **`border-bottom`** shorthand CSS property sets an element's bottom border. It sets the values of `border-bottom-width`, `border-bottom-style` and `border-bottom-color`.\n\n**Syntax**: `<line-width> || <line-style> || <color>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        borderColor: {
          description:
            "The **`border-color`** shorthand CSS property sets the color of an element's border.\n\n**Syntax**: `<color>{1,4}`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        borderImage: {
          description:
            "The **`border-image`** CSS property draws an image around a given element. It replaces the element's regular border.\n\n**Syntax**: `<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>`\n\n| Chrome  |  Firefox  | Safari  |  Edge  |   IE   |\n| :-----: | :-------: | :-----: | :----: | :----: |\n| **16**  |  **15**   |  **6**  | **12** | **11** |\n| 7 _-x-_ | 3.5 _-x-_ | 3 _-x-_ |        |        |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'repeat',
                'revert',
                'round',
                'space',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        borderInline: {
          description:
            "The **`border-inline`** CSS property is a shorthand property for setting the individual logical inline border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        borderInlineEnd: {
          description:
            "The **`border-inline-end`** CSS property is a shorthand property for setting the individual logical inline-end border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        borderInlineStart: {
          description:
            "The **`border-inline-start`** CSS property is a shorthand property for setting the individual logical inline-start border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        borderLeft: {
          description:
            "The **`border-left`** shorthand CSS property sets all the properties of an element's left border.\n\n**Syntax**: `<line-width> || <line-style> || <color>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        borderRadius: {
          description:
            "The **`border-radius`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n\n**Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **4**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        borderRight: {
          description:
            "The **`border-right`** shorthand CSS property sets all the properties of an element's right border.\n\n**Syntax**: `<line-width> || <line-style> || <color>`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        borderStyle: {
          description:
            "The **`border-style`** shorthand CSS property sets the line style for all four sides of an element's border.\n\n**Syntax**: `<line-style>{1,4}`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'dashed',
                'dotted',
                'double',
                'groove',
                'hidden',
                'inherit',
                'initial',
                'inset',
                'none',
                'outset',
                'revert',
                'ridge',
                'solid',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        borderTop: {
          description:
            "The **`border-top`** shorthand CSS property sets all the properties of an element's top border.\n\n**Syntax**: `<line-width> || <line-style> || <color>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        borderWidth: {
          description:
            "The **`border-width`** shorthand CSS property sets the width of an element's border.\n\n**Syntax**: `<line-width>{1,4}`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        columnRule: {
          description:
            "The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        columns: {
          description:
            "The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.\n\n**Syntax**: `<'column-width'> || <'column-count'>`\n\n| Chrome | Firefox | Safari  |  Edge  |   IE   |\n| :----: | :-----: | :-----: | :----: | :----: |\n| **50** | **52**  |  **9**  | **12** | **10** |\n|        |         | 3 _-x-_ |        |        |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        flex: {
          description:
            "The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n\n**Syntax**: `none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]`\n\n|  Chrome  | Firefox |  Safari   |  Edge  |    IE    |\n| :------: | :-----: | :-------: | :----: | :------: |\n|  **29**  | **20**  |   **9**   | **12** |  **11**  |\n| 21 _-x-_ |         | 6.1 _-x-_ |        | 10 _-x-_ |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'content',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        flexFlow: {
          description:
            "The **`flex-flow`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.\n\n**Syntax**: `<'flex-direction'> || <'flex-wrap'>`\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **29**  | **28**  |   **9**   | **12** | **11** |\n| 21 _-x-_ |         | 6.1 _-x-_ |        |        |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'column',
                'column-reverse',
                'inherit',
                'initial',
                'nowrap',
                'revert',
                'row',
                'row-reverse',
                'unset',
                'wrap',
                'wrap-reverse',
              ],
              type: 'string',
            },
          ],
        },
        font: {
          description:
            "The **`font`** CSS shorthand property sets all the different properties of an element's font. Alternatively, it sets an element's font to a system font.\n\n**Syntax**: `[ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'caption',
                'icon',
                'inherit',
                'initial',
                'menu',
                'message-box',
                'revert',
                'small-caption',
                'status-bar',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gap: {
          description:
            "The **`gap`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for `row-gap` and `column-gap`.\n\n**Syntax**: `<'row-gap'> <'column-gap'>?`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **84** | **63**  |   No   | **84** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n|     Chrome      |     Firefox     |      Safari       |  Edge  | IE  |\n| :-------------: | :-------------: | :---------------: | :----: | :-: |\n|     **66**      |     **61**      |      **12**       | **16** | No  |\n| 57 _(grid-gap)_ | 52 _(grid-gap)_ | 10.1 _(grid-gap)_ |        |     |\n\n---\n\n_Supported in Multi-column Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **66** | **61**  |   No   | **16** | No  |\n\n---",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
            },
          ],
        },
        grid: {
          description:
            "The **`grid`** CSS property is a shorthand property that sets all of the explicit and implicit grid properties in a single declaration.\n\n**Syntax**: `<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gridArea: {
          description:
            'The **`grid-area`** CSS shorthand property specifies a grid item’s size and location within a grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.\n\n**Syntax**: `<grid-line> [ / <grid-line> ]{0,3}`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gridColumn: {
          description:
            "The **`grid-column`** CSS shorthand property specifies a grid item's size and location within a grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.\n\n**Syntax**: `<grid-line> [ / <grid-line> ]?`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gridRow: {
          description:
            'The **`grid-row`** CSS shorthand property specifies a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.\n\n**Syntax**: `<grid-line> [ / <grid-line> ]?`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gridTemplate: {
          description:
            "The **`grid-template`** CSS property is a shorthand property for defining grid columns, rows, and areas.\n\n**Syntax**: `none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        lineClamp: {
          description:
            '**Syntax**: `none | <integer>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        listStyle: {
          description:
            "The **`list-style`** CSS shorthand property allows you set all the list style properties at once.\n\n**Syntax**: `<'list-style-type'> || <'list-style-position'> || <'list-style-image'>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'inside',
                'none',
                'outside',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        margin: {
          description:
            'The **`margin`** CSS property sets the margin area on all four sides of an element. It is a shorthand for `margin-top`, `margin-right`, `margin-bottom`, and `margin-left`.\n\n**Syntax**: `[ <length> | <percentage> | auto ]{1,4}`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        mask: {
          description:
            'The **`mask`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.\n\n**Syntax**: `<mask-layer>#`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **1**  |  **2**  | **3.2** | **12** | No  |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'add',
                'alpha',
                'border-box',
                'bottom',
                'center',
                'content-box',
                'exclude',
                'fill-box',
                'inherit',
                'initial',
                'intersect',
                'left',
                'luminance',
                'margin-box',
                'match-source',
                'no-clip',
                'no-repeat',
                'none',
                'padding-box',
                'repeat',
                'repeat-x',
                'repeat-y',
                'revert',
                'right',
                'round',
                'space',
                'stroke-box',
                'subtract',
                'top',
                'unset',
                'view-box',
              ],
            },
          ],
        },
        maskBorder: {
          description:
            "The **`mask-border`** CSS shorthand property lets you create a mask along the edge of an element's border.\n\n**Syntax**: `<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'alpha',
                'inherit',
                'initial',
                'luminance',
                'none',
                'repeat',
                'revert',
                'round',
                'space',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        motion: {
          description:
            "The **`offset`** CSS shorthand property sets all the properties required for animating an element along a defined path.\n\n**Syntax**: `[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?`\n\n|    Chrome     | Firefox | Safari |  Edge  | IE  |\n| :-----------: | :-----: | :----: | :----: | :-: |\n|    **55**     | **72**  |   No   | **79** | No  |\n| 46 _(motion)_ |         |        |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'border-box',
                'bottom',
                'center',
                'content-box',
                'fill-box',
                'inherit',
                'initial',
                'left',
                'margin-box',
                'none',
                'padding-box',
                'revert',
                'right',
                'stroke-box',
                'top',
                'unset',
                'view-box',
              ],
            },
          ],
        },
        offset: {
          description:
            "The **`offset`** CSS shorthand property sets all the properties required for animating an element along a defined path.\n\n**Syntax**: `[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?`\n\n|    Chrome     | Firefox | Safari |  Edge  | IE  |\n| :-----------: | :-----: | :----: | :----: | :-: |\n|    **55**     | **72**  |   No   | **79** | No  |\n| 46 _(motion)_ |         |        |        |     |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'border-box',
                'bottom',
                'center',
                'content-box',
                'fill-box',
                'inherit',
                'initial',
                'left',
                'margin-box',
                'none',
                'padding-box',
                'revert',
                'right',
                'stroke-box',
                'top',
                'unset',
                'view-box',
              ],
            },
          ],
        },
        outline: {
          description:
            "The **`outline`** CSS shorthand property set all the outline properties in a single declaration.\n\n**Syntax**: `[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  | **1.5** | **1.2** | **12** | **8** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'auto',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'invert',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        overflow: {
          description:
            "The **`overflow`** CSS shorthand property sets the desired behavior for an element's overflow — i.e. when an element's content is too big to fit in its block formatting context — in both directions.\n\n**Syntax**: `[ visible | hidden | clip | scroll | auto ]{1,2}`\n\n**Initial value**: `visible`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-hidden-unscrollable',
                '-moz-initial',
                'auto',
                'clip',
                'hidden',
                'inherit',
                'initial',
                'revert',
                'scroll',
                'unset',
                'visible',
              ],
              type: 'string',
            },
          ],
        },
        padding: {
          description:
            'The **`padding`** CSS shorthand property sets the padding area on all four sides of an element at once.\n\n**Syntax**: `[ <length> | <percentage> ]{1,4}`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        placeItems: {
          description:
            "The CSS **`place-items`** shorthand property allows you to align items along both the block and inline directions at once (i.e. the `align-items` and `justify-items` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not set, the first value is also used for it.\n\n**Syntax**: `<'align-items'> <'justify-items'>?`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **45**  | **11** | **79** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **45**  | **11** | **79** | No  |\n\n---",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'normal',
                'revert',
                'self-end',
                'self-start',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        placeSelf: {
          description:
            "The **`place-self`** CSS shorthand property allows you to align an individual item in both the block and inline directions at once (i.e. the `align-self` and `justify-self` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not present, the first value is also used for it.\n\n**Syntax**: `<'align-self'> <'justify-self'>?`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **45**  | **11** | **79** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **45**  | **11** | **79** | No  |\n\n---",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'normal',
                'revert',
                'self-end',
                'self-start',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        textDecoration: {
          description:
            "The **`text-decoration`** shorthand CSS property sets the appearance of decorative lines on text. It is a shorthand for `text-decoration-line`, `text-decoration-color`, `text-decoration-style`, and the newer `text-decoration-thickness` property.\n\n**Syntax**: `<'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'> || <'text-decoration-thickness'>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'auto',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blink',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'from-font',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'grammar-error',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'line-through',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'overline',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'spelling-error',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'underline',
                'unset',
                'violet',
                'wavy',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        textEmphasis: {
          description:
            "The **`text-emphasis`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for `text-emphasis-style` and `text-emphasis-color`.\n\n**Syntax**: `<'text-emphasis-style'> || <'text-emphasis-color'>`\n\n|    Chrome    | Firefox | Safari  |     Edge     | IE  |\n| :----------: | :-----: | :-----: | :----------: | :-: |\n| **25** _-x-_ | **46**  | **6.1** | **79** _-x-_ | No  |",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'circle',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dot',
                'double-circle',
                'filled',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'open',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sesame',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'triangle',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        transition: {
          description:
            'The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n\n**Syntax**: `<single-transition>#`\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :-----: | :-----: | :-------: | :----: | :----: |\n| **26**  | **16**  |   **9**   | **12** | **10** |\n| 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'all',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'none',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozAnimationDelay: {
          description:
            'The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        MozAnimationDirection: {
          description:
            'The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n\n**Syntax**: `<single-animation-direction>#`\n\n**Initial value**: `normal`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'alternate',
                'alternate-reverse',
                'inherit',
                'initial',
                'normal',
                'reverse',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozAnimationDuration: {
          description:
            'The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        MozAnimationFillMode: {
          description:
            'The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n\n**Syntax**: `<single-animation-fill-mode>#`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'backwards',
                'both',
                'forwards',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozAnimationIterationCount: {
          description:
            'The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n\n**Syntax**: `<single-animation-iteration-count>#`\n\n**Initial value**: `1`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'infinite',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozAnimationName: {
          description:
            'The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n\n**Syntax**: `[ none | <keyframes-name> ]#`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozAnimationPlayState: {
          description:
            'The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n\n**Syntax**: `<single-animation-play-state>#`\n\n**Initial value**: `running`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'paused',
                'revert',
                'running',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozAnimationTimingFunction: {
          description:
            'The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozAppearance: {
          description:
            "The `**appearance**` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n\n**Syntax**: `none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized`\n\n**Initial value**: `none` (but this value is overridden in the user agent CSS)",
          enum: [
            '-moz-initial',
            '-moz-mac-unified-toolbar',
            '-moz-win-borderless-glass',
            '-moz-win-browsertabbar-toolbox',
            '-moz-win-communications-toolbox',
            '-moz-win-communicationstext',
            '-moz-win-exclude-glass',
            '-moz-win-glass',
            '-moz-win-media-toolbox',
            '-moz-win-mediatext',
            '-moz-window-button-box',
            '-moz-window-button-box-maximized',
            '-moz-window-button-close',
            '-moz-window-button-maximize',
            '-moz-window-button-minimize',
            '-moz-window-button-restore',
            '-moz-window-frame-bottom',
            '-moz-window-frame-left',
            '-moz-window-frame-right',
            '-moz-window-titlebar',
            '-moz-window-titlebar-maximized',
            'button',
            'button-arrow-down',
            'button-arrow-next',
            'button-arrow-previous',
            'button-arrow-up',
            'button-bevel',
            'button-focus',
            'caret',
            'checkbox',
            'checkbox-container',
            'checkbox-label',
            'checkmenuitem',
            'dualbutton',
            'groupbox',
            'inherit',
            'initial',
            'listbox',
            'listitem',
            'menuarrow',
            'menubar',
            'menucheckbox',
            'menuimage',
            'menuitem',
            'menuitemtext',
            'menulist',
            'menulist-button',
            'menulist-text',
            'menulist-textfield',
            'menupopup',
            'menuradio',
            'menuseparator',
            'meterbar',
            'meterchunk',
            'none',
            'progressbar',
            'progressbar-vertical',
            'progresschunk',
            'progresschunk-vertical',
            'radio',
            'radio-container',
            'radio-label',
            'radiomenuitem',
            'range',
            'range-thumb',
            'resizer',
            'resizerpanel',
            'revert',
            'scale-horizontal',
            'scale-vertical',
            'scalethumb-horizontal',
            'scalethumb-vertical',
            'scalethumbend',
            'scalethumbstart',
            'scalethumbtick',
            'scrollbarbutton-down',
            'scrollbarbutton-left',
            'scrollbarbutton-right',
            'scrollbarbutton-up',
            'scrollbarthumb-horizontal',
            'scrollbarthumb-vertical',
            'scrollbartrack-horizontal',
            'scrollbartrack-vertical',
            'searchfield',
            'separator',
            'sheet',
            'spinner',
            'spinner-downbutton',
            'spinner-textfield',
            'spinner-upbutton',
            'splitter',
            'statusbar',
            'statusbarpanel',
            'tab',
            'tab-scroll-arrow-back',
            'tab-scroll-arrow-forward',
            'tabpanel',
            'tabpanels',
            'textfield',
            'textfield-multiline',
            'toolbar',
            'toolbarbutton',
            'toolbarbutton-dropdown',
            'toolbargripper',
            'toolbox',
            'tooltip',
            'treeheader',
            'treeheadercell',
            'treeheadersortarrow',
            'treeitem',
            'treeline',
            'treetwisty',
            'treetwistyopen',
            'treeview',
            'unset',
          ],
          type: 'string',
        },
        MozBackfaceVisibility: {
          description:
            'The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n\n**Syntax**: `visible | hidden`\n\n**Initial value**: `visible`',
          enum: [
            '-moz-initial',
            'hidden',
            'inherit',
            'initial',
            'revert',
            'unset',
            'visible',
          ],
          type: 'string',
        },
        MozBorderBottomColors: {
          description:
            'In Mozilla applications like Firefox, the **`-moz-border-bottom-colors`** CSS property sets a list of colors for the bottom border.\n\n**Syntax**: `<color>+ | none`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        MozBorderEndColor: {
          description:
            "The **`border-inline-end-color`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        MozBorderEndStyle: {
          description:
            "The **`border-inline-end-style`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        MozBorderEndWidth: {
          description:
            "The **`border-inline-end-width`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        MozBorderLeftColors: {
          description:
            'In Mozilla applications like Firefox, the **`-moz-border-left-colors`** CSS property sets a list of colors for the left border.\n\n**Syntax**: `<color>+ | none`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        MozBorderRightColors: {
          description:
            'In Mozilla applications like Firefox, the **`-moz-border-right-colors`** CSS property sets a list of colors for the right border.\n\n**Syntax**: `<color>+ | none`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        MozBorderStartColor: {
          description:
            "The **`border-inline-start-color`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        MozBorderStartStyle: {
          description:
            "The **`border-inline-start-style`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`",
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'groove',
            'hidden',
            'inherit',
            'initial',
            'inset',
            'none',
            'outset',
            'revert',
            'ridge',
            'solid',
            'unset',
          ],
          type: 'string',
        },
        MozBorderTopColors: {
          description:
            'In Mozilla applications like Firefox, the **`-moz-border-top-colors`** CSS property sets a list of colors for the top border.\n\n**Syntax**: `<color>+ | none`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        MozBoxSizing: {
          description:
            'The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n\n**Syntax**: `content-box | border-box`\n\n**Initial value**: `content-box`',
          enum: [
            '-moz-initial',
            'border-box',
            'content-box',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        MozColumnCount: {
          description:
            "The **`column-count`** CSS property breaks an element's content into the specified number of columns.\n\n**Syntax**: `<integer> | auto`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozColumnFill: {
          description:
            "The **`column-fill`** CSS property controls how an element's contents are balanced when broken into columns.\n\n**Syntax**: `auto | balance | balance-all`\n\n**Initial value**: `balance`",
          enum: [
            '-moz-initial',
            'auto',
            'balance',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        MozColumnGap: {
          description:
            "The **`column-gap`** CSS property sets the size of the gap (gutter) between an element's columns.\n\n**Syntax**: `normal | <length-percentage>`\n\n**Initial value**: `normal`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozColumnRuleColor: {
          description:
            'The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        MozColumnRuleStyle: {
          description:
            "The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-style'>`\n\n**Initial value**: `none`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'dashed',
                'dotted',
                'double',
                'groove',
                'hidden',
                'inherit',
                'initial',
                'inset',
                'none',
                'outset',
                'revert',
                'ridge',
                'solid',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozColumnRuleWidth: {
          description:
            "The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-width'>`\n\n**Initial value**: `medium`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        MozColumnWidth: {
          description:
            "The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.\n\n**Syntax**: `<length> | auto`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozContextProperties: {
          description:
            'The `**-moz-context-properties**` property can be used within privileged contexts in Firefox to share the values of specified properties of the element with a child SVG image.\n\n**Syntax**: `none | [ fill | fill-opacity | stroke | stroke-opacity ]#`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'fill',
                'fill-opacity',
                'inherit',
                'initial',
                'none',
                'revert',
                'stroke',
                'stroke-opacity',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozFontFeatureSettings: {
          description:
            'The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n\n**Syntax**: `normal | <feature-tag-value>#`\n\n**Initial value**: `normal`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozFontLanguageOverride: {
          description:
            'The **`font-language-override`** CSS property controls the use of language-specific glyphs in a typeface.\n\n**Syntax**: `normal | <string>`\n\n**Initial value**: `normal`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozHyphens: {
          description:
            'The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n\n**Syntax**: `none | manual | auto`\n\n**Initial value**: `manual`',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'manual',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        MozImageRegion: {
          description:
            'For certain XUL elements and pseudo-elements that use an image from the `list-style-image` property, this property specifies a region of the image that is used in place of the whole image. This allows elements to use different pieces of the same image to improve performance.\n\n**Syntax**: `<shape> | auto`\n\n**Initial value**: `auto`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozMarginEnd: {
          description:
            "The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozMarginStart: {
          description:
            "The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozOrient: {
          description:
            "The **`-moz-orient`** CSS property specifies the orientation of the element to which it's applied.\n\n**Syntax**: `inline | block | horizontal | vertical`\n\n**Initial value**: `inline`",
          enum: [
            '-moz-initial',
            'block',
            'horizontal',
            'inherit',
            'initial',
            'inline',
            'revert',
            'unset',
            'vertical',
          ],
          type: 'string',
        },
        MozOsxFontSmoothing: {
          description:
            'The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n\n**Syntax**: `auto | never | always | <absolute-size> | <length>`\n\n**Initial value**: `auto`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'always',
                'auto',
                'inherit',
                'initial',
                'large',
                'medium',
                'never',
                'revert',
                'small',
                'unset',
                'x-large',
                'x-small',
                'xx-large',
                'xx-small',
                'xxx-large',
              ],
            },
          ],
        },
        MozPaddingEnd: {
          description:
            "The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozPaddingStart: {
          description:
            "The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozPerspective: {
          description:
            'The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n\n**Syntax**: `none | <length>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozPerspectiveOrigin: {
          description:
            'The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n\n**Syntax**: `<position>`\n\n**Initial value**: `50% 50%`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        MozStackSizing: {
          description:
            '**`-moz-stack-sizing`** is an extended CSS property. Normally, a `<xul:stack>` will change its size so that all of its child elements are completely visible. For example, moving a child of the stack far to the right will widen the stack so the child remains visible.\n\n**Syntax**: `ignore | stretch-to-fit`\n\n**Initial value**: `stretch-to-fit`',
          enum: [
            '-moz-initial',
            'ignore',
            'inherit',
            'initial',
            'revert',
            'stretch-to-fit',
            'unset',
          ],
          type: 'string',
        },
        MozTabSize: {
          description:
            'The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n\n**Syntax**: `<integer> | <length>`\n\n**Initial value**: `8`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozTextBlink: {
          description:
            'The **`-moz-text-blink`** non-standard Mozilla CSS extension specifies the blink mode.\n\n**Syntax**: `none | blink`\n\n**Initial value**: `none`',
          enum: [
            '-moz-initial',
            'blink',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        MozTextSizeAdjust: {
          description:
            'The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n\n**Syntax**: `none | auto | <percentage>`\n\n**Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozTransformOrigin: {
          description:
            "The **`transform-origin`** CSS property sets the origin for an element's transformations.\n\n**Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n\n**Initial value**: `50% 50% 0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        MozTransformStyle: {
          description:
            'The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n\n**Syntax**: `flat | preserve-3d`\n\n**Initial value**: `flat`',
          enum: [
            '-moz-initial',
            'flat',
            'inherit',
            'initial',
            'preserve-3d',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        MozTransitionDelay: {
          description:
            "The **`transition-delay`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        MozTransitionDuration: {
          description:
            'The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        MozTransitionProperty: {
          description:
            'The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n\n**Syntax**: `none | <single-transition-property>#`\n\n**Initial value**: all',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'all',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozTransitionTimingFunction: {
          description:
            'The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozUserFocus: {
          description:
            'The **`-moz-user-focus`** CSS property is used to indicate whether an element can have the focus.\n\n**Syntax**: `ignore | normal | select-after | select-before | select-menu | select-same | select-all | none`\n\n**Initial value**: `none`',
          enum: [
            '-moz-initial',
            'ignore',
            'inherit',
            'initial',
            'none',
            'normal',
            'revert',
            'select-after',
            'select-all',
            'select-before',
            'select-menu',
            'select-same',
            'unset',
          ],
          type: 'string',
        },
        MozUserModify: {
          description:
            'The **`user-modify`** property has no effect in Firefox. It was originally planned to determine whether or not the content of an element can be edited by a user.\n\n**Syntax**: `read-only | read-write | write-only`\n\n**Initial value**: `read-only`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'read-only',
            'read-write',
            'revert',
            'unset',
            'write-only',
          ],
          type: 'string',
        },
        MozUserSelect: {
          description:
            "The `**user-select**` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.\n\n**Syntax**: `auto | text | none | contain | all`\n\n**Initial value**: `auto`",
          enum: [
            '-moz-initial',
            '-moz-none',
            'all',
            'auto',
            'contain',
            'element',
            'inherit',
            'initial',
            'none',
            'revert',
            'text',
            'unset',
          ],
          type: 'string',
        },
        MozWindowDragging: {
          description:
            'The **`-moz-window-dragging`** CSS property specifies whether a window is draggable or not. It only works in Chrome code, and only on Mac OS X.\n\n**Syntax**: `drag | no-drag`\n\n**Initial value**: `drag`',
          enum: [
            '-moz-initial',
            'drag',
            'inherit',
            'initial',
            'no-drag',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        MozWindowShadow: {
          description:
            'The **`-moz-window-shadow`** CSS property specifies whether a window will have a shadow. It only works on Mac OS X.\n\n**Syntax**: `default | menu | tooltip | sheet | none`\n\n**Initial value**: `default`',
          enum: [
            '-moz-initial',
            'default',
            'inherit',
            'initial',
            'menu',
            'none',
            'revert',
            'sheet',
            'tooltip',
            'unset',
          ],
          type: 'string',
        },
        msAccelerator: {
          description:
            'The **`-ms-accelerator`** CSS property is a Microsoft extension that sets or retrieves a string indicating whether the object represents a keyboard shortcut.\n\n**Syntax**: `false | true`\n\n**Initial value**: `false`',
          enum: [
            '-moz-initial',
            'false',
            'inherit',
            'initial',
            'revert',
            'true',
            'unset',
          ],
          type: 'string',
        },
        msAlignSelf: {
          description:
            "The **`align-self`** CSS property overrides a grid or flex item's `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n\n**Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'normal',
                'revert',
                'self-end',
                'self-start',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msBlockProgression: {
          description:
            'The **`-ms-block-progression`** CSS property is a Microsoft extension that specifies the block progression and layout orientation.\n\n**Syntax**: `tb | rl | bt | lr`\n\n**Initial value**: `tb`',
          enum: [
            '-moz-initial',
            'bt',
            'inherit',
            'initial',
            'lr',
            'revert',
            'rl',
            'tb',
            'unset',
          ],
          type: 'string',
        },
        msContentZoomChaining: {
          description:
            'The **`-ms-content-zoom-chaining`** CSS property is a Microsoft extension specifying the zoom behavior that occurs when a user hits the zoom limit during page manipulation.\n\n**Syntax**: `none | chained`\n\n**Initial value**: `none`',
          enum: [
            '-moz-initial',
            'chained',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msContentZoomLimitMax: {
          description:
            "The **`-ms-content-zoom-limit-max`** CSS property is a Microsoft extension that specifies the selected elements' maximum zoom factor.\n\n**Syntax**: `<percentage>`\n\n**Initial value**: `400%`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msContentZoomLimitMin: {
          description:
            'The **`-ms-content-zoom-limit-min`** CSS property is a Microsoft extension that specifies the minimum zoom factor.\n\n**Syntax**: `<percentage>`\n\n**Initial value**: `100%`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msContentZoomSnapPoints: {
          description:
            'The **`-ms-content-zoom-snap-points`** CSS property is a Microsoft extension that specifies where zoom snap-points are located.\n\n**Syntax**: `snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )`\n\n**Initial value**: `snapInterval(0%, 100%)`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msContentZoomSnapType: {
          description:
            'The **`-ms-content-zoom-snap-type`** CSS property is a Microsoft extension that specifies how zooming is affected by defined snap-points.\n\n**Syntax**: `none | proximity | mandatory`\n\n**Initial value**: `none`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'mandatory',
            'none',
            'proximity',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msContentZooming: {
          description:
            'The **`-ms-content-zooming`** CSS property is a Microsoft extension that specifies whether zooming is enabled.\n\n**Syntax**: `none | zoom`\n\n**Initial value**: zoom for the top level element, none for all other elements',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
            'zoom',
          ],
          type: 'string',
        },
        msFilter: {
          description:
            'The `-ms-filter` CSS property is a Microsoft extension that sets or retrieves the filter or collection of filters applied to an object.\n\n**Syntax**: `<string>`\n\n**Initial value**: "" (the empty string)',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msFlexDirection: {
          description:
            'The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n\n**Syntax**: `row | row-reverse | column | column-reverse`\n\n**Initial value**: `row`',
          enum: [
            '-moz-initial',
            'column',
            'column-reverse',
            'inherit',
            'initial',
            'revert',
            'row',
            'row-reverse',
            'unset',
          ],
          type: 'string',
        },
        msFlexPositive: {
          description:
            'The **`flex-grow`** CSS property sets the flex grow factor of a flex item main size.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msFlowFrom: {
          description:
            'The **`-ms-flow-from`** CSS property is a Microsoft extension that gets or sets a value identifying a region container in the document that accepts the content flow from the data source.\n\n**Syntax**: `[ none | <custom-ident> ]#`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msFlowInto: {
          description:
            "The **`-ms-flow-into`** CSS property is a Microsoft extension that gets or sets a value identifying an iframe container in the document that serves as the region's data source.\n\n**Syntax**: `[ none | <custom-ident> ]#`\n\n**Initial value**: `none`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msGridColumns: {
          description:
            'The **`grid-template-columns`** CSS property defines the line names and track sizing functions of the grid columns.\n\n**Syntax**: `none | <track-list> | <auto-track-list>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        msGridRows: {
          description:
            'The **`grid-template-rows`** CSS property defines the line names and track sizing functions of the grid rows.\n\n**Syntax**: `none | <track-list> | <auto-track-list>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        msHighContrastAdjust: {
          description:
            'The **`-ms-high-contrast-adjust`** CSS property is a Microsoft extension that gets or sets a value indicating whether to override any CSS properties that would have been set in high contrast mode.\n\n**Syntax**: `auto | none`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msHyphenateLimitChars: {
          description:
            'The **`-ms-hyphenate-limit-chars`** CSS property is a Microsoft extension that specifies one to three values indicating the minimum number of characters in a hyphenated word. If the word does not meet the required minimum number of characters in the word, before the hyphen, or after the hyphen, then the word is not hyphenated.\n\n**Syntax**: `auto | <integer>{1,3}`\n\n**Initial value**: `auto`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msHyphenateLimitLines: {
          description:
            'The **`-ms-hyphenate-limit-lines`** CSS property is a Microsoft extension specifying the maximum number of consecutive lines in an element that may be ended with a hyphenated word.\n\n**Syntax**: `no-limit | <integer>`\n\n**Initial value**: `no-limit`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'no-limit',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msHyphenateLimitZone: {
          description:
            'The `**-ms-hyphenate-limit-zone**` CSS property is a Microsoft extension specifying the width of the hyphenation zone.\n\n**Syntax**: `<percentage> | <length>`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        msHyphens: {
          description:
            'The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n\n**Syntax**: `none | manual | auto`\n\n**Initial value**: `manual`',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'manual',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msImeAlign: {
          description:
            'The **`-ms-ime-align`** CSS property is a Microsoft extension aligning the Input Method Editor (IME) candidate window box relative to the element on which the IME composition is active. The extension is implemented in Microsoft Edge and Internet Explorer 11.\n\n**Syntax**: `auto | after`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'after',
            'auto',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msJustifySelf: {
          description:
            'The CSS **`justify-self`** property sets the way a box is justified inside its alignment container along the appropriate axis.\n\n**Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]`\n\n**Initial value**: `auto`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'left',
                'normal',
                'revert',
                'right',
                'self-end',
                'self-start',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msLineBreak: {
          description:
            'The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n\n**Syntax**: `auto | loose | normal | strict | anywhere`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'anywhere',
            'auto',
            'inherit',
            'initial',
            'loose',
            'normal',
            'revert',
            'strict',
            'unset',
          ],
          type: 'string',
        },
        msOrder: {
          description:
            'The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msOverflowStyle: {
          description:
            'The **`-ms-overflow-style`** CSS property is a Microsoft extension controlling the behavior of scrollbars when the content of an element overflows.\n\n**Syntax**: `auto | none | scrollbar | -ms-autohiding-scrollbar`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            '-ms-autohiding-scrollbar',
            'auto',
            'inherit',
            'initial',
            'none',
            'revert',
            'scrollbar',
            'unset',
          ],
          type: 'string',
        },
        msOverflowX: {
          description:
            "The **`overflow-x`** CSS property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content.\n\n**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `visible`",
          enum: [
            '-moz-hidden-unscrollable',
            '-moz-initial',
            'auto',
            'clip',
            'hidden',
            'inherit',
            'initial',
            'revert',
            'scroll',
            'unset',
            'visible',
          ],
          type: 'string',
        },
        msOverflowY: {
          description:
            "The **`overflow-y`** CSS property sets what shows when content overflows a block-level element's top and bottom edges. This may be nothing, a scroll bar, or the overflow content.\n\n**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `visible`",
          enum: [
            '-moz-hidden-unscrollable',
            '-moz-initial',
            'auto',
            'clip',
            'hidden',
            'inherit',
            'initial',
            'revert',
            'scroll',
            'unset',
            'visible',
          ],
          type: 'string',
        },
        msScrollChaining: {
          description:
            'The `**-ms-scroll-chaining**` CSS property is a Microsoft extension that specifies the scrolling behavior that occurs when a user hits the scroll limit during a manipulation.\n\n**Syntax**: `chained | none`\n\n**Initial value**: `chained`',
          enum: [
            '-moz-initial',
            'chained',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msScrollLimitXMax: {
          description:
            'The `**-ms-scroll-limit-x-max**` CSS property is a Microsoft extension that specifies the maximum value for the `Element.scrollLeft` property.\n\n**Syntax**: `auto | <length>`\n\n**Initial value**: `auto`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        msScrollLimitXMin: {
          description:
            'The **`-ms-scroll-limit-x-min`** CSS property is a Microsoft extension that specifies the minimum value for the `Element.scrollLeft` property.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        msScrollLimitYMax: {
          description:
            'The **`-ms-scroll-limit-y-max`** CSS property is a Microsoft extension that specifies the maximum value for the `Element.scrollTop` property.\n\n**Syntax**: `auto | <length>`\n\n**Initial value**: `auto`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        msScrollLimitYMin: {
          description:
            'The **`-ms-scroll-limit-y-min`** CSS property is a Microsoft extension that specifies the minimum value for the `Element.scrollTop` property.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        msScrollRails: {
          description:
            'The **`-ms-scroll-rails`** CSS property is a Microsoft extension that specifies whether scrolling locks to the primary axis of motion.\n\n**Syntax**: `none | railed`\n\n**Initial value**: `railed`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'none',
            'railed',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msScrollSnapPointsX: {
          description:
            'The **`-ms-scroll-snap-points-x`** CSS property is a Microsoft extension that specifies where snap-points will be located along the x-axis.\n\n**Syntax**: `snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )`\n\n**Initial value**: `snapInterval(0px, 100%)`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msScrollSnapPointsY: {
          description:
            'The **`-ms-scroll-snap-points-y`** CSS property is a Microsoft extension that specifies where snap-points will be located along the y-axis.\n\n**Syntax**: `snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )`\n\n**Initial value**: `snapInterval(0px, 100%)`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msScrollSnapType: {
          description:
            'The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n\n**Syntax**: `none | proximity | mandatory`\n\n**Initial value**: `none`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'mandatory',
            'none',
            'proximity',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msScrollTranslation: {
          description:
            'The **`-ms-scroll-translation`** CSS property is a Microsoft extension that specifies whether vertical-to-horizontal scroll wheel translation occurs on the specified element.\n\n**Syntax**: `none | vertical-to-horizontal`\n\n**Initial value**: `none`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
            'vertical-to-horizontal',
          ],
          type: 'string',
        },
        msScrollbar3dlightColor: {
          description:
            'The **`-ms-scrollbar-3dlight-color`** CSS property is a Microsoft extension specifying the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\n\n**Syntax**: `<color>`\n\n**Initial value**: depends on user agent',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        msScrollbarArrowColor: {
          description:
            'The **`-ms-scrollbar-arrow-color`** CSS property is a Microsoft extension that specifies the color of the arrow elements of a scroll arrow.\n\n**Syntax**: `<color>`\n\n**Initial value**: `ButtonText`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        msScrollbarBaseColor: {
          description:
            'The `**-ms-scrollbar-base-color**` CSS property is a Microsoft extension that specifies the base color of the main elements of a scroll bar.\n\n**Syntax**: `<color>`\n\n**Initial value**: depends on user agent',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        msScrollbarDarkshadowColor: {
          description:
            "The **`-ms-scrollbar-darkshadow-color`** CSS property is a Microsoft extension that specifies the color of a scroll bar's gutter.\n\n**Syntax**: `<color>`\n\n**Initial value**: `ThreeDDarkShadow`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        msScrollbarFaceColor: {
          description:
            'The `**-ms-scrollbar-face-color**` CSS property is a Microsoft extension that specifies the color of the scroll box and scroll arrows of a scroll bar.\n\n**Syntax**: `<color>`\n\n**Initial value**: `ThreeDFace`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        msScrollbarHighlightColor: {
          description:
            'The `**-ms-scrollbar-highlight-color**` CSS property is a Microsoft extension that specifies the color of the slider tray, the top and left edges of the scroll box, and the scroll arrows of a scroll bar.\n\n**Syntax**: `<color>`\n\n**Initial value**: `ThreeDHighlight`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        msScrollbarShadowColor: {
          description:
            'The **`-ms-scrollbar-shadow-color`** CSS property is a Microsoft extension that specifies the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.\n\n**Syntax**: `<color>`\n\n**Initial value**: `ThreeDDarkShadow`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        msTextAutospace: {
          description:
            'The **`-ms-text-autospace`** CSS property is a Microsoft extension that specifies the autospacing and narrow space width adjustment of text.\n\n**Syntax**: `none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space`\n\n**Initial value**: `none`',
          enum: [
            '-moz-initial',
            'ideograph-alpha',
            'ideograph-numeric',
            'ideograph-parenthesis',
            'ideograph-space',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msTextCombineHorizontal: {
          description:
            'The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n\n**Syntax**: `none | all | [ digits <integer>? ]`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-ms-text-combine-horizontal',
                'all',
                'digits',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msTextOverflow: {
          description:
            "The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('`…`'), or display a custom string.\n\n**Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n\n**Initial value**: `clip`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'clip',
                'ellipsis',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msTouchAction: {
          description:
            "The **`touch-action`** CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).\n\n**Syntax**: `auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-ms-manipulation',
                '-ms-none',
                '-ms-pinch-zoom',
                'auto',
                'inherit',
                'initial',
                'manipulation',
                'none',
                'pan-down',
                'pan-left',
                'pan-right',
                'pan-up',
                'pan-x',
                'pan-y',
                'pinch-zoom',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msTouchSelect: {
          description:
            'The **`-ms-touch-select`** CSS property is a Microsoft extension that toggles the gripper visual elements that enable touch text selection.\n\n**Syntax**: `grippers | none`\n\n**Initial value**: `grippers`',
          enum: [
            '-moz-initial',
            'grippers',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msTransform: {
          description:
            'The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n\n**Syntax**: `none | <transform-list>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msTransformOrigin: {
          description:
            "The **`transform-origin`** CSS property sets the origin for an element's transformations.\n\n**Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n\n**Initial value**: `50% 50% 0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        msTransitionDelay: {
          description:
            "The **`transition-delay`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msTransitionDuration: {
          description:
            'The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msTransitionProperty: {
          description:
            'The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n\n**Syntax**: `none | <single-transition-property>#`\n\n**Initial value**: all',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'all',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msTransitionTimingFunction: {
          description:
            'The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msUserSelect: {
          description:
            "The `**user-select**` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.\n\n**Syntax**: `none | element | text`\n\n**Initial value**: `text`",
          enum: [
            '-moz-initial',
            'element',
            'inherit',
            'initial',
            'none',
            'revert',
            'text',
            'unset',
          ],
          type: 'string',
        },
        msWordBreak: {
          description:
            'The **`word-break`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.\n\n**Syntax**: `normal | break-all | keep-all | break-word`\n\n**Initial value**: `normal`',
          enum: [
            '-moz-initial',
            'break-all',
            'break-word',
            'inherit',
            'initial',
            'keep-all',
            'normal',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msWrapFlow: {
          description:
            'The **`-ms-wrap-flow`** CSS property is a Microsoft extension that specifies how exclusions impact inline content within block-level elements.\n\n**Syntax**: `auto | both | start | end | maximum | clear`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'auto',
            'both',
            'clear',
            'end',
            'inherit',
            'initial',
            'maximum',
            'revert',
            'start',
            'unset',
          ],
          type: 'string',
        },
        msWrapMargin: {
          description:
            'The **`-ms-wrap-margin`** CSS property is a Microsoft extension that specifies a margin that offsets the inner wrap shape from other shapes.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        msWrapThrough: {
          description:
            'The **`-ms-wrap-through`** CSS property is a Microsoft extension that specifies how content should wrap around an exclusion element.\n\n**Syntax**: `wrap | none`\n\n**Initial value**: `wrap`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
            'wrap',
          ],
          type: 'string',
        },
        msWritingMode: {
          description:
            'The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n\n**Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n\n**Initial value**: `horizontal-tb`',
          enum: [
            '-moz-initial',
            'horizontal-tb',
            'inherit',
            'initial',
            'revert',
            'sideways-lr',
            'sideways-rl',
            'unset',
            'vertical-lr',
            'vertical-rl',
          ],
          type: 'string',
        },
        OObjectFit: {
          description:
            'The **`object-fit`** CSS property sets how the content of a replaced element, such as an `<img>` or `<video>`, should be resized to fit its container.\n\n**Syntax**: `fill | contain | cover | none | scale-down`\n\n**Initial value**: `fill`',
          enum: [
            '-moz-initial',
            'contain',
            'cover',
            'fill',
            'inherit',
            'initial',
            'none',
            'revert',
            'scale-down',
            'unset',
          ],
          type: 'string',
        },
        OObjectPosition: {
          description:
            "The **`object-position`** CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background.\n\n**Syntax**: `<position>`\n\n**Initial value**: `50% 50%`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        OTabSize: {
          description:
            'The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n\n**Syntax**: `<integer> | <length>`\n\n**Initial value**: `8`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        OTextOverflow: {
          description:
            "The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('`…`'), or display a custom string.\n\n**Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n\n**Initial value**: `clip`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'clip',
                'ellipsis',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OTransformOrigin: {
          description:
            "The **`transform-origin`** CSS property sets the origin for an element's transformations.\n\n**Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n\n**Initial value**: `50% 50% 0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        WebkitAlignContent: {
          description:
            "The CSS **`align-content`** property sets the distribution of space between and around content items along a flexbox's cross-axis or a grid's block axis.\n\n**Syntax**: `normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>`\n\n**Initial value**: `normal`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'normal',
                'revert',
                'space-around',
                'space-between',
                'space-evenly',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitAlignItems: {
          description:
            'The CSS **`align-items`** property sets the `align-self` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.\n\n**Syntax**: `normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]`\n\n**Initial value**: `normal`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'normal',
                'revert',
                'self-end',
                'self-start',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitAlignSelf: {
          description:
            "The **`align-self`** CSS property overrides a grid or flex item's `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n\n**Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'baseline',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'normal',
                'revert',
                'self-end',
                'self-start',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitAnimationDelay: {
          description:
            'The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitAnimationDirection: {
          description:
            'The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n\n**Syntax**: `<single-animation-direction>#`\n\n**Initial value**: `normal`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'alternate',
                'alternate-reverse',
                'inherit',
                'initial',
                'normal',
                'reverse',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitAnimationDuration: {
          description:
            'The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitAnimationFillMode: {
          description:
            'The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n\n**Syntax**: `<single-animation-fill-mode>#`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'backwards',
                'both',
                'forwards',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitAnimationIterationCount: {
          description:
            'The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n\n**Syntax**: `<single-animation-iteration-count>#`\n\n**Initial value**: `1`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'infinite',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitAnimationName: {
          description:
            'The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n\n**Syntax**: `[ none | <keyframes-name> ]#`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitAnimationPlayState: {
          description:
            'The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n\n**Syntax**: `<single-animation-play-state>#`\n\n**Initial value**: `running`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'paused',
                'revert',
                'running',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitAnimationTimingFunction: {
          description:
            'The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitAppearance: {
          description:
            "The `**appearance**` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n\n**Syntax**: `none | button | button-bevel | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button`\n\n**Initial value**: `none` (but this value is overridden in the user agent CSS)",
          enum: [
            '-apple-pay-button',
            '-moz-initial',
            'button',
            'button-bevel',
            'caret',
            'checkbox',
            'default-button',
            'inherit',
            'initial',
            'inner-spin-button',
            'listbox',
            'listitem',
            'media-controls-background',
            'media-controls-fullscreen-background',
            'media-current-time-display',
            'media-enter-fullscreen-button',
            'media-exit-fullscreen-button',
            'media-fullscreen-button',
            'media-mute-button',
            'media-overlay-play-button',
            'media-play-button',
            'media-seek-back-button',
            'media-seek-forward-button',
            'media-slider',
            'media-sliderthumb',
            'media-time-remaining-display',
            'media-toggle-closed-captions-button',
            'media-volume-slider',
            'media-volume-slider-container',
            'media-volume-sliderthumb',
            'menulist',
            'menulist-button',
            'menulist-text',
            'menulist-textfield',
            'meter',
            'none',
            'progress-bar',
            'progress-bar-value',
            'push-button',
            'radio',
            'revert',
            'searchfield',
            'searchfield-cancel-button',
            'searchfield-decoration',
            'searchfield-results-button',
            'searchfield-results-decoration',
            'slider-horizontal',
            'slider-vertical',
            'sliderthumb-horizontal',
            'sliderthumb-vertical',
            'square-button',
            'textarea',
            'textfield',
            'unset',
          ],
          type: 'string',
        },
        WebkitBackdropFilter: {
          description:
            'The **`backdrop-filter`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.\n\n**Syntax**: `none | <filter-function-list>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitBackfaceVisibility: {
          description:
            'The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n\n**Syntax**: `visible | hidden`\n\n**Initial value**: `visible`',
          enum: [
            '-moz-initial',
            'hidden',
            'inherit',
            'initial',
            'revert',
            'unset',
            'visible',
          ],
          type: 'string',
        },
        WebkitBackgroundClip: {
          description:
            "The **`background-clip`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `border-box`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'inherit',
                'initial',
                'padding-box',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitBackgroundOrigin: {
          description:
            "The **`background-origin`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `padding-box`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'inherit',
                'initial',
                'padding-box',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitBackgroundSize: {
          description:
            "The **`background-size`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'contain',
                'cover',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitBorderBeforeColor: {
          description:
            '**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        WebkitBorderBeforeStyle: {
          description:
            "**Syntax**: `<'border-style'>`\n\n**Initial value**: `none`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'dashed',
                'dotted',
                'double',
                'groove',
                'hidden',
                'inherit',
                'initial',
                'inset',
                'none',
                'outset',
                'revert',
                'ridge',
                'solid',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitBorderBeforeWidth: {
          description:
            "**Syntax**: `<'border-width'>`\n\n**Initial value**: `medium`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        WebkitBorderBottomLeftRadius: {
          description:
            'The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitBorderBottomRightRadius: {
          description:
            'The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitBorderImageSlice: {
          description:
            "The **`border-image-slice`** CSS property divides the image specified by `border-image-source` into regions. These regions form the components of an element's border image.\n\n**Syntax**: `<number-percentage>{1,4} && fill?`\n\n**Initial value**: `100%`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitBorderTopLeftRadius: {
          description:
            'The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitBorderTopRightRadius: {
          description:
            'The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitBoxDecorationBreak: {
          description:
            "The **`box-decoration-break`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.\n\n**Syntax**: `slice | clone`\n\n**Initial value**: `slice`",
          enum: [
            '-moz-initial',
            'clone',
            'inherit',
            'initial',
            'revert',
            'slice',
            'unset',
          ],
          type: 'string',
        },
        WebkitBoxReflect: {
          description:
            'The **`-webkit-box-reflect`** CSS property lets you reflect the content of an element in one specific direction.\n\n**Syntax**: `[ above | below | right | left ]? <length>? <image>?`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'above',
                'below',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'unset',
              ],
            },
          ],
        },
        WebkitBoxShadow: {
          description:
            "The **`box-shadow`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n\n**Syntax**: `none | <shadow>#`\n\n**Initial value**: `none`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitBoxSizing: {
          description:
            'The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n\n**Syntax**: `content-box | border-box`\n\n**Initial value**: `content-box`',
          enum: [
            '-moz-initial',
            'border-box',
            'content-box',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        WebkitClipPath: {
          description:
            'The `**clip-path**` CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.\n\n**Syntax**: `<clip-source> | [ <basic-shape> || <geometry-box> ] | none`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'fill-box',
                'inherit',
                'initial',
                'margin-box',
                'none',
                'padding-box',
                'revert',
                'stroke-box',
                'unset',
                'view-box',
              ],
              type: 'string',
            },
          ],
        },
        WebkitColumnCount: {
          description:
            "The **`column-count`** CSS property breaks an element's content into the specified number of columns.\n\n**Syntax**: `<integer> | auto`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitColumnFill: {
          description:
            "The **`column-fill`** CSS property controls how an element's contents are balanced when broken into columns.\n\n**Syntax**: `auto | balance | balance-all`\n\n**Initial value**: `balance`",
          enum: [
            '-moz-initial',
            'auto',
            'balance',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        WebkitColumnGap: {
          description:
            "The **`column-gap`** CSS property sets the size of the gap (gutter) between an element's columns.\n\n**Syntax**: `normal | <length-percentage>`\n\n**Initial value**: `normal`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitColumnRuleColor: {
          description:
            'The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        WebkitColumnRuleStyle: {
          description:
            "The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-style'>`\n\n**Initial value**: `none`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'dashed',
                'dotted',
                'double',
                'groove',
                'hidden',
                'inherit',
                'initial',
                'inset',
                'none',
                'outset',
                'revert',
                'ridge',
                'solid',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitColumnRuleWidth: {
          description:
            "The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-width'>`\n\n**Initial value**: `medium`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        WebkitColumnSpan: {
          description:
            'The **`column-span`** CSS property makes it possible for an element to span across all columns when its value is set to `all`.\n\n**Syntax**: `none | all`\n\n**Initial value**: `none`',
          enum: [
            '-moz-initial',
            'all',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        WebkitColumnWidth: {
          description:
            "The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.\n\n**Syntax**: `<length> | auto`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitFilter: {
          description:
            'The **`filter`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.\n\n**Syntax**: `none | <filter-function-list>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitFlexBasis: {
          description:
            "The **`flex-basis`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with `box-sizing`.\n\n**Syntax**: `content | <'width'>`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                '-webkit-auto',
                0,
                'auto',
                'content',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitFlexDirection: {
          description:
            'The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n\n**Syntax**: `row | row-reverse | column | column-reverse`\n\n**Initial value**: `row`',
          enum: [
            '-moz-initial',
            'column',
            'column-reverse',
            'inherit',
            'initial',
            'revert',
            'row',
            'row-reverse',
            'unset',
          ],
          type: 'string',
        },
        WebkitFlexGrow: {
          description:
            'The **`flex-grow`** CSS property sets the flex grow factor of a flex item main size.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitFlexShrink: {
          description:
            'The **`flex-shrink`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to `flex-shrink`.\n\n**Syntax**: `<number>`\n\n**Initial value**: `1`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitFlexWrap: {
          description:
            'The **`flex-wrap`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.\n\n**Syntax**: `nowrap | wrap | wrap-reverse`\n\n**Initial value**: `nowrap`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'nowrap',
            'revert',
            'unset',
            'wrap',
            'wrap-reverse',
          ],
          type: 'string',
        },
        WebkitFontFeatureSettings: {
          description:
            'The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n\n**Syntax**: `normal | <feature-tag-value>#`\n\n**Initial value**: `normal`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitFontKerning: {
          description:
            'The **`font-kerning`** CSS property sets the use of the kerning information stored in a font.\n\n**Syntax**: `auto | normal | none`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'none',
            'normal',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        WebkitFontSmoothing: {
          description:
            'The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n\n**Syntax**: `auto | never | always | <absolute-size> | <length>`\n\n**Initial value**: `auto`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'always',
                'auto',
                'inherit',
                'initial',
                'large',
                'medium',
                'never',
                'revert',
                'small',
                'unset',
                'x-large',
                'x-small',
                'xx-large',
                'xx-small',
                'xxx-large',
              ],
            },
          ],
        },
        WebkitFontVariantLigatures: {
          description:
            'The **`font-variant-ligatures`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.\n\n**Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]`\n\n**Initial value**: `normal`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'common-ligatures',
                'contextual',
                'discretionary-ligatures',
                'historical-ligatures',
                'inherit',
                'initial',
                'no-common-ligatures',
                'no-contextual',
                'no-discretionary-ligatures',
                'no-historical-ligatures',
                'none',
                'normal',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitHyphens: {
          description:
            'The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n\n**Syntax**: `none | manual | auto`\n\n**Initial value**: `manual`',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'manual',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        WebkitJustifyContent: {
          description:
            'The CSS **`justify-content`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.\n\n**Syntax**: `normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]`\n\n**Initial value**: `normal`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'center',
                'end',
                'flex-end',
                'flex-start',
                'inherit',
                'initial',
                'left',
                'normal',
                'revert',
                'right',
                'space-around',
                'space-between',
                'space-evenly',
                'start',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitLineBreak: {
          description:
            'The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n\n**Syntax**: `auto | loose | normal | strict | anywhere`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'anywhere',
            'auto',
            'inherit',
            'initial',
            'loose',
            'normal',
            'revert',
            'strict',
            'unset',
          ],
          type: 'string',
        },
        WebkitLineClamp: {
          description:
            'The **`-webkit-line-clamp`** CSS property allows limiting of the contents of a block container to the specified number of lines.\n\n**Syntax**: `none | <integer>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitMarginEnd: {
          description:
            "The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitMarginStart: {
          description:
            "The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitMaskAttachment: {
          description:
            "If a `-webkit-mask-image` is specified, `-webkit-mask-attachment` determines whether the mask image's position is fixed within the viewport, or scrolls along with its containing block.\n\n**Syntax**: `<attachment>#`\n\n**Initial value**: `scroll`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'fixed',
                'inherit',
                'initial',
                'local',
                'revert',
                'scroll',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitMaskClip: {
          description:
            'The **`mask-clip`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.\n\n**Syntax**: `[ <box> | border | padding | content | text ]#`\n\n**Initial value**: `border`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border',
                'border-box',
                'content',
                'content-box',
                'inherit',
                'initial',
                'padding',
                'padding-box',
                'revert',
                'text',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitMaskComposite: {
          description:
            'The **`-webkit-mask-composite`** property specifies the manner in which multiple mask images applied to the same element are composited with one another. Mask images are composited in the opposite order that they are declared with the `-webkit-mask-image` property.\n\n**Syntax**: `<composite-style>#`\n\n**Initial value**: `source-over`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'clear',
                'copy',
                'destination-atop',
                'destination-in',
                'destination-out',
                'destination-over',
                'inherit',
                'initial',
                'revert',
                'source-atop',
                'source-in',
                'source-out',
                'source-over',
                'unset',
                'xor',
              ],
              type: 'string',
            },
          ],
        },
        WebkitMaskImage: {
          description:
            'The **`mask-image`** CSS property sets the image that is used as mask layer for an element.\n\n**Syntax**: `<mask-reference>#`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitMaskOrigin: {
          description:
            'The **`mask-origin`** CSS property sets the origin of a mask.\n\n**Syntax**: `[ <box> | border | padding | content ]#`\n\n**Initial value**: `padding`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border',
                'border-box',
                'content',
                'content-box',
                'inherit',
                'initial',
                'padding',
                'padding-box',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitMaskPosition: {
          description:
            'The **`mask-position`** CSS property sets the initial position, relative to the mask position layer set by `mask-origin`, for each defined mask image.\n\n**Syntax**: `<position>#`\n\n**Initial value**: `0% 0%`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        WebkitMaskPositionX: {
          description:
            'The `-webkit-mask-position-x` CSS property sets the initial horizontal position of a mask image.\n\n**Syntax**: `[ <length-percentage> | left | center | right ]#`\n\n**Initial value**: `0%`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'unset',
              ],
            },
          ],
        },
        WebkitMaskPositionY: {
          description:
            'The `-webkit-mask-position-y` CSS property sets the initial vertical position of a mask image.\n\n**Syntax**: `[ <length-percentage> | top | center | bottom ]#`\n\n**Initial value**: `0%`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'revert',
                'top',
                'unset',
              ],
            },
          ],
        },
        WebkitMaskRepeat: {
          description:
            'The **`mask-repeat`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.\n\n**Syntax**: `<repeat-style>#`\n\n**Initial value**: `repeat`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'no-repeat',
                'repeat',
                'repeat-x',
                'repeat-y',
                'revert',
                'round',
                'space',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitMaskRepeatX: {
          description:
            'The `-webkit-mask-repeat-x` property specifies whether and how a mask image is repeated (tiled) horizontally.\n\n**Syntax**: `repeat | no-repeat | space | round`\n\n**Initial value**: `repeat`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'no-repeat',
            'repeat',
            'revert',
            'round',
            'space',
            'unset',
          ],
          type: 'string',
        },
        WebkitMaskRepeatY: {
          description:
            'The `-webkit-mask-repeat-y` property sets whether and how a mask image is repeated (tiled) vertically.\n\n**Syntax**: `repeat | no-repeat | space | round`\n\n**Initial value**: `repeat`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'no-repeat',
            'repeat',
            'revert',
            'round',
            'space',
            'unset',
          ],
          type: 'string',
        },
        WebkitMaskSize: {
          description:
            'The **`mask-size`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto auto`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'contain',
                'cover',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitMaxInlineSize: {
          description:
            "The **`max-inline-size`** CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the `max-width` or the `max-height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'max-width'>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-moz-max-content',
                '-moz-min-content',
                0,
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitOrder: {
          description:
            'The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitOverflowScrolling: {
          description:
            'The `-webkit-overflow-scrolling` CSS property controls whether or not touch devices use momentum-based scrolling for a given element.\n\n**Syntax**: `auto | touch`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'revert',
            'touch',
            'unset',
          ],
          type: 'string',
        },
        WebkitPaddingEnd: {
          description:
            "The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitPaddingStart: {
          description:
            "The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitPerspective: {
          description:
            'The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n\n**Syntax**: `none | <length>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitPerspectiveOrigin: {
          description:
            'The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n\n**Syntax**: `<position>`\n\n**Initial value**: `50% 50%`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        WebkitPrintColorAdjust: {
          description:
            "The **`color-adjust`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device.\n\n**Syntax**: `economy | exact`\n\n**Initial value**: `economy`",
          enum: [
            '-moz-initial',
            'economy',
            'exact',
            'inherit',
            'initial',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        WebkitRubyPosition: {
          description:
            'The `**ruby-position**` CSS property defines the position of a ruby element relatives to its base element. It can be position over the element (`over`), under it (`under`), or between the characters, on their right side (`inter-character`).\n\n**Syntax**: `over | under | inter-character`\n\n**Initial value**: `over`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'over',
            'revert',
            'under',
            'unset',
          ],
          type: 'string',
        },
        WebkitScrollSnapType: {
          description:
            'The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n\n**Syntax**: `none | [ x | y | block | inline | both ] [ mandatory | proximity ]?`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'block',
                'both',
                'inherit',
                'initial',
                'inline',
                'none',
                'revert',
                'unset',
                'x',
                'y',
              ],
              type: 'string',
            },
          ],
        },
        WebkitShapeMargin: {
          description:
            'The **`shape-margin`** CSS property sets a margin for a CSS shape created using `shape-outside`.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitTapHighlightColor: {
          description:
            "**`-webkit-tap-highlight-color`** is a non-standard CSS property that sets the color of the highlight that appears over a link while it's being tapped. The highlighting indicates to the user that their tap is being successfully recognized, and indicates which element they're tapping on.\n\n**Syntax**: `<color>`\n\n**Initial value**: `black`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTextCombine: {
          description:
            'The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n\n**Syntax**: `none | all | [ digits <integer>? ]`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-ms-text-combine-horizontal',
                'all',
                'digits',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTextDecorationColor: {
          description:
            'The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTextDecorationLine: {
          description:
            'The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n\n**Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'blink',
                'grammar-error',
                'inherit',
                'initial',
                'line-through',
                'none',
                'overline',
                'revert',
                'spelling-error',
                'underline',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTextDecorationSkip: {
          description:
            'The **`text-decoration-skip`** CSS property sets what parts of an element’s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.\n\n**Syntax**: `none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]`\n\n**Initial value**: `objects`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'box-decoration',
                'edges',
                'inherit',
                'initial',
                'leading-spaces',
                'none',
                'objects',
                'revert',
                'spaces',
                'trailing-spaces',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTextDecorationStyle: {
          description:
            'The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n\n**Syntax**: `solid | double | dotted | dashed | wavy`\n\n**Initial value**: `solid`',
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'inherit',
            'initial',
            'revert',
            'solid',
            'unset',
            'wavy',
          ],
          type: 'string',
        },
        WebkitTextEmphasisColor: {
          description:
            'The **`text-emphasis-color`** CSS property sets the color of emphasis marks. This value can also be set using the `text-emphasis` shorthand.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTextEmphasisPosition: {
          description:
            "The **`text-emphasis-position`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased.\n\n**Syntax**: `[ over | under ] && [ right | left ]`\n\n**Initial value**: `over right`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitTextEmphasisStyle: {
          description:
            'The **`text-emphasis-style`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the `text-emphasis` shorthand.\n\n**Syntax**: `none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'circle',
                'dot',
                'double-circle',
                'filled',
                'inherit',
                'initial',
                'none',
                'open',
                'revert',
                'sesame',
                'triangle',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTextFillColor: {
          description:
            'The **`-webkit-text-fill-color`** CSS property specifies the fill color of characters of text. If this property is not set, the value of the `color` property is used.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTextOrientation: {
          description:
            'The **`text-orientation`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when `writing-mode` is not `horizontal-tb`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.\n\n**Syntax**: `mixed | upright | sideways`\n\n**Initial value**: `mixed`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'mixed',
            'revert',
            'sideways',
            'unset',
            'upright',
          ],
          type: 'string',
        },
        WebkitTextSizeAdjust: {
          description:
            'The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n\n**Syntax**: `none | auto | <percentage>`\n\n**Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTextStrokeColor: {
          description:
            'The **`-webkit-text-stroke-color`** CSS property specifies the stroke color of characters of text. If this property is not set, the value of the `color` property is used.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTextStrokeWidth: {
          description:
            'The **`-webkit-text-stroke-width`** CSS property specifies the width of the stroke for text.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitTextUnderlinePosition: {
          description:
            "The **`text-underline-position`** CSS property specifies the position of the underline which is set using the `text-decoration` property's `underline` value.\n\n**Syntax**: `auto | from-font | [ under || [ left | right ] ]`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'from-font',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'under',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTouchCallout: {
          description:
            'The `-webkit-touch-callout` CSS property controls the display of the default callout shown when you touch and hold a touch target.\n\n**Syntax**: `default | none`\n\n**Initial value**: `default`',
          enum: [
            '-moz-initial',
            'default',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        WebkitTransform: {
          description:
            'The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n\n**Syntax**: `none | <transform-list>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTransformOrigin: {
          description:
            "The **`transform-origin`** CSS property sets the origin for an element's transformations.\n\n**Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n\n**Initial value**: `50% 50% 0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        WebkitTransformStyle: {
          description:
            'The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n\n**Syntax**: `flat | preserve-3d`\n\n**Initial value**: `flat`',
          enum: [
            '-moz-initial',
            'flat',
            'inherit',
            'initial',
            'preserve-3d',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        WebkitTransitionDelay: {
          description:
            "The **`transition-delay`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitTransitionDuration: {
          description:
            'The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitTransitionProperty: {
          description:
            'The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n\n**Syntax**: `none | <single-transition-property>#`\n\n**Initial value**: all',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'all',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTransitionTimingFunction: {
          description:
            'The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitUserModify: {
          description:
            '**Syntax**: `read-only | read-write | read-write-plaintext-only`\n\n**Initial value**: `read-only`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'read-only',
            'read-write',
            'read-write-plaintext-only',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        WebkitUserSelect: {
          description:
            "The `**user-select**` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.\n\n**Syntax**: `auto | text | none | contain | all`\n\n**Initial value**: `auto`",
          enum: [
            '-moz-initial',
            '-moz-none',
            'all',
            'auto',
            'contain',
            'element',
            'inherit',
            'initial',
            'none',
            'revert',
            'text',
            'unset',
          ],
          type: 'string',
        },
        WebkitWritingMode: {
          description:
            'The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n\n**Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n\n**Initial value**: `horizontal-tb`',
          enum: [
            '-moz-initial',
            'horizontal-tb',
            'inherit',
            'initial',
            'revert',
            'sideways-lr',
            'sideways-rl',
            'unset',
            'vertical-lr',
            'vertical-rl',
          ],
          type: 'string',
        },
        MozAnimation: {
          description:
            'The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n\n**Syntax**: `<single-animation>#`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'alternate',
                'alternate-reverse',
                'backwards',
                'both',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'forwards',
                'infinite',
                'inherit',
                'initial',
                'linear',
                'none',
                'normal',
                'paused',
                'reverse',
                'revert',
                'running',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozBorderImage: {
          description:
            "The **`border-image`** CSS property draws an image around a given element. It replaces the element's regular border.\n\n**Syntax**: `<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'repeat',
                'revert',
                'round',
                'space',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozColumnRule: {
          description:
            "The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        MozColumns: {
          description:
            "The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.\n\n**Syntax**: `<'column-width'> || <'column-count'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozTransition: {
          description:
            'The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n\n**Syntax**: `<single-transition>#`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'all',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'none',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msContentZoomLimit: {
          description:
            "The **`-ms-content-zoom-limit`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-content-zoom-limit-min` and `-ms-content-zoom-limit-max` properties.\n\n**Syntax**: `<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msContentZoomSnap: {
          description:
            "The **`-ms-content-zoom-snap`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-content-zoom-snap-type` and `-ms-content-zoom-snap-points` properties.\n\n**Syntax**: `<'-ms-content-zoom-snap-type'> || <'-ms-content-zoom-snap-points'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'mandatory',
                'none',
                'proximity',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        msFlex: {
          description:
            "The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n\n**Syntax**: `none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'content',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        msScrollLimit: {
          description:
            "The **\\-ms-scroll-limit** CSS property is a Microsoft extension that specifies values for the `-ms-scroll-limit-x-min`, `-ms-scroll-limit-y-min`, `-ms-scroll-limit-x-max`, and `-ms-scroll-limit-y-max` properties.\n\n**Syntax**: `<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msScrollSnapX: {
          description:
            "The **`-ms-scroll-snap-x`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-scroll-snap-type` and `-ms-scroll-snap-points-x` properties.\n\n**Syntax**: `<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msScrollSnapY: {
          description:
            "The **`-ms-scroll-snap-x`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-scroll-snap-type` and `-ms-scroll-snap-points-y` properties.\n\n**Syntax**: `<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        msTransition: {
          description:
            'The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n\n**Syntax**: `<single-transition>#`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'all',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'none',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitAnimation: {
          description:
            'The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n\n**Syntax**: `<single-animation>#`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'alternate',
                'alternate-reverse',
                'backwards',
                'both',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'forwards',
                'infinite',
                'inherit',
                'initial',
                'linear',
                'none',
                'normal',
                'paused',
                'reverse',
                'revert',
                'running',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitBorderBefore: {
          description:
            "The **`-webkit-border-before`** CSS property is a shorthand property for setting the individual logical block start border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-width'> || <'border-style'> || <color>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        WebkitBorderImage: {
          description:
            "The **`border-image`** CSS property draws an image around a given element. It replaces the element's regular border.\n\n**Syntax**: `<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'repeat',
                'revert',
                'round',
                'space',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitBorderRadius: {
          description:
            "The **`border-radius`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n\n**Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitColumnRule: {
          description:
            "The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        WebkitColumns: {
          description:
            "The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.\n\n**Syntax**: `<'column-width'> || <'column-count'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitFlex: {
          description:
            "The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n\n**Syntax**: `none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'content',
                'inherit',
                'initial',
                'max-content',
                'min-content',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        WebkitFlexFlow: {
          description:
            "The **`flex-flow`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.\n\n**Syntax**: `<'flex-direction'> || <'flex-wrap'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'column',
                'column-reverse',
                'inherit',
                'initial',
                'nowrap',
                'revert',
                'row',
                'row-reverse',
                'unset',
                'wrap',
                'wrap-reverse',
              ],
              type: 'string',
            },
          ],
        },
        WebkitMask: {
          description:
            'The **`mask`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.\n\n**Syntax**: `[ <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || [ <box> | border | padding | content | text ] || [ <box> | border | padding | content ] ]#`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'border',
                'border-box',
                'bottom',
                'center',
                'content',
                'content-box',
                'inherit',
                'initial',
                'left',
                'no-repeat',
                'none',
                'padding',
                'padding-box',
                'repeat',
                'repeat-x',
                'repeat-y',
                'revert',
                'right',
                'round',
                'space',
                'text',
                'top',
                'unset',
              ],
            },
          ],
        },
        WebkitTextEmphasis: {
          description:
            "The **`text-emphasis`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for `text-emphasis-style` and `text-emphasis-color`.\n\n**Syntax**: `<'text-emphasis-style'> || <'text-emphasis-color'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'circle',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dot',
                'double-circle',
                'filled',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'open',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sesame',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'triangle',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        WebkitTextStroke: {
          description:
            'The **`-webkit-text-stroke`** CSS property specifies the width and color of strokes for text characters. This is a shorthand property for the longhand properties `-webkit-text-stroke-width` and `-webkit-text-stroke-color`.\n\n**Syntax**: `<length> || <color>`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        WebkitTransition: {
          description:
            'The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n\n**Syntax**: `<single-transition>#`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'all',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'none',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        azimuth: {
          description:
            'In combination with `elevation`, the **`azimuth`** CSS property enables different audio sources to be positioned spatially for aural presentation. This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and multi-speaker setups allow for a fully three-dimensional stage.\n\n**Syntax**: `<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards`\n\n**Initial value**: `center`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'behind',
                'center',
                'center-left',
                'center-right',
                'far-left',
                'far-right',
                'inherit',
                'initial',
                'left',
                'left-side',
                'leftwards',
                'revert',
                'right',
                'right-side',
                'rightwards',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        boxAlign: {
          description:
            'The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | baseline | stretch`\n\n**Initial value**: `stretch`',
          enum: [
            '-moz-initial',
            'baseline',
            'center',
            'end',
            'inherit',
            'initial',
            'revert',
            'start',
            'stretch',
            'unset',
          ],
          type: 'string',
        },
        boxDirection: {
          description:
            'The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n\n**Syntax**: `normal | reverse | inherit`\n\n**Initial value**: `normal`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'normal',
            'reverse',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        boxFlex: {
          description:
            "The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box's layout.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        boxFlexGroup: {
          description:
            "The **`box-flex-group`** CSS property assigns the flexbox's child elements to a flex group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        boxLines: {
          description:
            'The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n\n**Syntax**: `single | multiple`\n\n**Initial value**: `single`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'multiple',
            'revert',
            'single',
            'unset',
          ],
          type: 'string',
        },
        boxOrdinalGroup: {
          description:
            "The **`box-ordinal-group`** CSS property assigns the flexbox's child elements to an ordinal group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        boxOrient: {
          description:
            'This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.\n\n**Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n\n**Initial value**: `inline-axis` (`horizontal` in XUL)',
          enum: [
            '-moz-initial',
            'block-axis',
            'horizontal',
            'inherit',
            'initial',
            'inline-axis',
            'revert',
            'unset',
            'vertical',
          ],
          type: 'string',
        },
        boxPack: {
          description:
            'The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | justify`\n\n**Initial value**: `start`',
          enum: [
            '-moz-initial',
            'center',
            'end',
            'inherit',
            'initial',
            'justify',
            'revert',
            'start',
            'unset',
          ],
          type: 'string',
        },
        clip: {
          description:
            'The **`clip`** CSS property defines a visible portion of an element. The `clip` property applies only to absolutely positioned elements — that is, elements with `position:absolute` or `position:fixed`.\n\n**Syntax**: `<shape> | auto`\n\n**Initial value**: `auto`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        fontVariantAlternates: {
          description:
            'The **`font-variant-alternates`** CSS property controls the usage of alternate glyphs. These alternate glyphs may be referenced by alternative names defined in `@font-feature-values`.\n\n**Syntax**: `normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]`\n\n**Initial value**: `normal`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'historical-forms',
                'inherit',
                'initial',
                'normal',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        gridColumnGap: {
          description:
            "The **`column-gap`** CSS property sets the size of the gap (gutter) between an element's columns.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        gridGap: {
          description:
            "The **`gap`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for `row-gap` and `column-gap`.\n\n**Syntax**: `<'grid-row-gap'> <'grid-column-gap'>?`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        gridRowGap: {
          description:
            "The **`row-gap`** CSS property sets the size of the gap (gutter) between an element's grid rows.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        imeMode: {
          description:
            'The **`ime-mode`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.\n\n**Syntax**: `auto | normal | active | inactive | disabled`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'active',
            'auto',
            'disabled',
            'inactive',
            'inherit',
            'initial',
            'normal',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        offsetBlock: {
          description:
            "The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>{1,2}`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        offsetBlockEnd: {
          description:
            "The **`inset-block-end`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        offsetBlockStart: {
          description:
            "The **`inset-block-start`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        offsetInline: {
          description:
            "The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>{1,2}`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        offsetInlineEnd: {
          description:
            "The **`inset-inline-end`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        offsetInlineStart: {
          description:
            "The **`inset-inline-start`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        scrollSnapCoordinate: {
          description:
            "The **`scroll-snap-coordinate`** CSS property defines the x and y coordinate positions within an element that will align with its nearest ancestor scroll container's `scroll-snap-destination` for each respective axis.\n\n**Syntax**: `none | <position>#`\n\n**Initial value**: `none`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'none',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        scrollSnapDestination: {
          description:
            "The **`scroll-snap-destination`** CSS property defines the position in x and y coordinates within the scroll container's visual viewport which element snap points align with.\n\n**Syntax**: `<position>`\n\n**Initial value**: `0px 0px`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'bottom',
                'center',
                'inherit',
                'initial',
                'left',
                'revert',
                'right',
                'top',
                'unset',
              ],
            },
          ],
        },
        scrollSnapPointsX: {
          description:
            'The **`scroll-snap-points-x`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.\n\n**Syntax**: `none | repeat( <length-percentage> )`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        scrollSnapPointsY: {
          description:
            'The **`scroll-snap-points-y`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.\n\n**Syntax**: `none | repeat( <length-percentage> )`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        scrollSnapTypeX: {
          description:
            'The **`scroll-snap-type-x`** CSS property defines how strictly snap points are enforced on the horizontal axis of the scroll container in case there is one.\n\n**Syntax**: `none | mandatory | proximity`\n\n**Initial value**: `none`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'mandatory',
            'none',
            'proximity',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        scrollSnapTypeY: {
          description:
            'The **`scroll-snap-type-y`** CSS property defines how strictly snap points are enforced on the vertical axis of the scroll container in case there is one.\n\n**Syntax**: `none | mandatory | proximity`\n\n**Initial value**: `none`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'mandatory',
            'none',
            'proximity',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        scrollbarTrackColor: {
          description:
            'The **`-ms-scrollbar-track-color`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.\n\n**Syntax**: `<color>`\n\n**Initial value**: `Scrollbar`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        textCombineHorizontal: {
          description:
            'The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n\n**Syntax**: `none | all | [ digits <integer>? ]`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                '-ms-text-combine-horizontal',
                'all',
                'digits',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        KhtmlBoxAlign: {
          description:
            'The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | baseline | stretch`\n\n**Initial value**: `stretch`',
          enum: [
            '-moz-initial',
            'baseline',
            'center',
            'end',
            'inherit',
            'initial',
            'revert',
            'start',
            'stretch',
            'unset',
          ],
          type: 'string',
        },
        KhtmlBoxDirection: {
          description:
            'The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n\n**Syntax**: `normal | reverse | inherit`\n\n**Initial value**: `normal`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'normal',
            'reverse',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        KhtmlBoxFlex: {
          description:
            "The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box's layout.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        KhtmlBoxFlexGroup: {
          description:
            "The **`box-flex-group`** CSS property assigns the flexbox's child elements to a flex group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        KhtmlBoxLines: {
          description:
            'The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n\n**Syntax**: `single | multiple`\n\n**Initial value**: `single`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'multiple',
            'revert',
            'single',
            'unset',
          ],
          type: 'string',
        },
        KhtmlBoxOrdinalGroup: {
          description:
            "The **`box-ordinal-group`** CSS property assigns the flexbox's child elements to an ordinal group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        KhtmlBoxOrient: {
          description:
            'This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.\n\n**Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n\n**Initial value**: `inline-axis` (`horizontal` in XUL)',
          enum: [
            '-moz-initial',
            'block-axis',
            'horizontal',
            'inherit',
            'initial',
            'inline-axis',
            'revert',
            'unset',
            'vertical',
          ],
          type: 'string',
        },
        KhtmlBoxPack: {
          description:
            'The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | justify`\n\n**Initial value**: `start`',
          enum: [
            '-moz-initial',
            'center',
            'end',
            'inherit',
            'initial',
            'justify',
            'revert',
            'start',
            'unset',
          ],
          type: 'string',
        },
        KhtmlLineBreak: {
          description:
            'The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n\n**Syntax**: `auto | loose | normal | strict | anywhere`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'anywhere',
            'auto',
            'inherit',
            'initial',
            'loose',
            'normal',
            'revert',
            'strict',
            'unset',
          ],
          type: 'string',
        },
        KhtmlOpacity: {
          description:
            'The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n\n**Syntax**: `<alpha-value>`\n\n**Initial value**: `1.0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        KhtmlUserSelect: {
          description:
            "The `**user-select**` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.\n\n**Syntax**: `auto | text | none | contain | all`\n\n**Initial value**: `auto`",
          enum: [
            '-moz-initial',
            '-moz-none',
            'all',
            'auto',
            'contain',
            'element',
            'inherit',
            'initial',
            'none',
            'revert',
            'text',
            'unset',
          ],
          type: 'string',
        },
        MozBackgroundClip: {
          description:
            "The **`background-clip`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `border-box`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'inherit',
                'initial',
                'padding-box',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozBackgroundInlinePolicy: {
          description:
            "The **`box-decoration-break`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.\n\n**Syntax**: `slice | clone`\n\n**Initial value**: `slice`",
          enum: [
            '-moz-initial',
            'clone',
            'inherit',
            'initial',
            'revert',
            'slice',
            'unset',
          ],
          type: 'string',
        },
        MozBackgroundOrigin: {
          description:
            "The **`background-origin`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `padding-box`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'border-box',
                'content-box',
                'inherit',
                'initial',
                'padding-box',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozBackgroundSize: {
          description:
            "The **`background-size`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'contain',
                'cover',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozBinding: {
          description:
            'The **`-moz-binding`** CSS property is used by Mozilla-based applications to attach an XBL binding to a DOM element.\n\n**Syntax**: `<url> | none`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozBorderRadius: {
          description:
            "The **`border-radius`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n\n**Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozBorderRadiusBottomleft: {
          description:
            'The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozBorderRadiusBottomright: {
          description:
            'The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozBorderRadiusTopleft: {
          description:
            'The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozBorderRadiusTopright: {
          description:
            'The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozBoxAlign: {
          description:
            'The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | baseline | stretch`\n\n**Initial value**: `stretch`',
          enum: [
            '-moz-initial',
            'baseline',
            'center',
            'end',
            'inherit',
            'initial',
            'revert',
            'start',
            'stretch',
            'unset',
          ],
          type: 'string',
        },
        MozBoxDirection: {
          description:
            'The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n\n**Syntax**: `normal | reverse | inherit`\n\n**Initial value**: `normal`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'normal',
            'reverse',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        MozBoxFlex: {
          description:
            "The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box's layout.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        MozBoxOrdinalGroup: {
          description:
            "The **`box-ordinal-group`** CSS property assigns the flexbox's child elements to an ordinal group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        MozBoxOrient: {
          description:
            'This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.\n\n**Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n\n**Initial value**: `inline-axis` (`horizontal` in XUL)',
          enum: [
            '-moz-initial',
            'block-axis',
            'horizontal',
            'inherit',
            'initial',
            'inline-axis',
            'revert',
            'unset',
            'vertical',
          ],
          type: 'string',
        },
        MozBoxPack: {
          description:
            'The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | justify`\n\n**Initial value**: `start`',
          enum: [
            '-moz-initial',
            'center',
            'end',
            'inherit',
            'initial',
            'justify',
            'revert',
            'start',
            'unset',
          ],
          type: 'string',
        },
        MozBoxShadow: {
          description:
            "The **`box-shadow`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n\n**Syntax**: `none | <shadow>#`\n\n**Initial value**: `none`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozFloatEdge: {
          description:
            'The non-standard **`-moz-float-edge`** CSS property specifies whether the height and width properties of the element include the margin, border, or padding thickness.\n\n**Syntax**: `border-box | content-box | margin-box | padding-box`\n\n**Initial value**: `content-box`',
          enum: [
            '-moz-initial',
            'border-box',
            'content-box',
            'inherit',
            'initial',
            'margin-box',
            'padding-box',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        MozForceBrokenImageIcon: {
          description:
            'The **`-moz-force-broken-image-icon`** extended CSS property can be used to force the broken image icon to be shown even when a broken image has an `alt` attribute.\n\n**Syntax**: `<integer [0,1]>`\n\n**Initial value**: `0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        MozOpacity: {
          description:
            'The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n\n**Syntax**: `<alpha-value>`\n\n**Initial value**: `1.0`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        MozOutline: {
          description:
            "The **`outline`** CSS shorthand property set all the outline properties in a single declaration.\n\n**Syntax**: `[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'auto',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'dashed',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'dotted',
                'double',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'groove',
                'hidden',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'inset',
                'invert',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'medium',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'outset',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'ridge',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'solid',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thick',
                'thin',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
            },
          ],
        },
        MozOutlineColor: {
          description:
            "The **`outline-color`** CSS property sets the color of an element's outline.\n\n**Syntax**: `<color> | invert`\n\n**Initial value**: `invert`, for browsers supporting it, `currentColor` for the other",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'invert',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        MozOutlineRadius: {
          description:
            "In Mozilla applications like Firefox, the **`-moz-outline-radius`** CSS shorthand property can be used to give an element's `outline` rounded corners.\n\n**Syntax**: `<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozOutlineRadiusBottomleft: {
          description:
            "In Mozilla applications, the **`-moz-outline-radius-bottomleft`** CSS property can be used to round the bottom-left corner of an element's `outline`.\n\n**Syntax**: `<outline-radius>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozOutlineRadiusBottomright: {
          description:
            "In Mozilla applications, the **`-moz-outline-radius-bottomright`** CSS property can be used to round the bottom-right corner of an element's `outline`.\n\n**Syntax**: `<outline-radius>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozOutlineRadiusTopleft: {
          description:
            "In Mozilla applications, the **`-moz-outline-radius-topleft`** CSS property can be used to round the top-left corner of an element's `outline`.\n\n**Syntax**: `<outline-radius>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozOutlineRadiusTopright: {
          description:
            "In Mozilla applications, the **`-moz-outline-radius-topright`** CSS property can be used to round the top-right corner of an element's `outline`.\n\n**Syntax**: `<outline-radius>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        MozOutlineStyle: {
          description:
            "The **`outline-style`** CSS property sets the style of an element's outline. An outline is a line that is drawn around an element, outside the `border`.\n\n**Syntax**: `auto | <'border-style'>`\n\n**Initial value**: `none`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'dashed',
                'dotted',
                'double',
                'groove',
                'hidden',
                'inherit',
                'initial',
                'inset',
                'none',
                'outset',
                'revert',
                'ridge',
                'solid',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozOutlineWidth: {
          description:
            "The CSS **`outline-width`** property sets the thickness of an element's outline. An outline is a line that is drawn around an element, outside the `border`.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'medium',
                'revert',
                'thick',
                'thin',
                'unset',
              ],
            },
          ],
        },
        MozTextAlignLast: {
          description:
            'The **`text-align-last`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.\n\n**Syntax**: `auto | start | end | left | right | center | justify`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'auto',
            'center',
            'end',
            'inherit',
            'initial',
            'justify',
            'left',
            'revert',
            'right',
            'start',
            'unset',
          ],
          type: 'string',
        },
        MozTextDecorationColor: {
          description:
            'The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        MozTextDecorationLine: {
          description:
            'The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n\n**Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'blink',
                'grammar-error',
                'inherit',
                'initial',
                'line-through',
                'none',
                'overline',
                'revert',
                'spelling-error',
                'underline',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        MozTextDecorationStyle: {
          description:
            'The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n\n**Syntax**: `solid | double | dotted | dashed | wavy`\n\n**Initial value**: `solid`',
          enum: [
            '-moz-initial',
            'dashed',
            'dotted',
            'double',
            'inherit',
            'initial',
            'revert',
            'solid',
            'unset',
            'wavy',
          ],
          type: 'string',
        },
        MozUserInput: {
          description:
            'In Mozilla applications, **`-moz-user-input`** determines if an element will accept user input.\n\n**Syntax**: `auto | none | enabled | disabled`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'auto',
            'disabled',
            'enabled',
            'inherit',
            'initial',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msImeMode: {
          description:
            'The **`ime-mode`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.\n\n**Syntax**: `auto | normal | active | inactive | disabled`\n\n**Initial value**: `auto`',
          enum: [
            '-moz-initial',
            'active',
            'auto',
            'disabled',
            'inactive',
            'inherit',
            'initial',
            'normal',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        msScrollbarTrackColor: {
          description:
            'The **`-ms-scrollbar-track-color`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.\n\n**Syntax**: `<color>`\n\n**Initial value**: `Scrollbar`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        OAnimation: {
          description:
            'The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n\n**Syntax**: `<single-animation>#`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'alternate',
                'alternate-reverse',
                'backwards',
                'both',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'forwards',
                'infinite',
                'inherit',
                'initial',
                'linear',
                'none',
                'normal',
                'paused',
                'reverse',
                'revert',
                'running',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OAnimationDelay: {
          description:
            'The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        OAnimationDirection: {
          description:
            'The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n\n**Syntax**: `<single-animation-direction>#`\n\n**Initial value**: `normal`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'alternate',
                'alternate-reverse',
                'inherit',
                'initial',
                'normal',
                'reverse',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OAnimationDuration: {
          description:
            'The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        OAnimationFillMode: {
          description:
            'The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n\n**Syntax**: `<single-animation-fill-mode>#`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'backwards',
                'both',
                'forwards',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OAnimationIterationCount: {
          description:
            'The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n\n**Syntax**: `<single-animation-iteration-count>#`\n\n**Initial value**: `1`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'infinite',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OAnimationName: {
          description:
            'The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n\n**Syntax**: `[ none | <keyframes-name> ]#`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OAnimationPlayState: {
          description:
            'The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n\n**Syntax**: `<single-animation-play-state>#`\n\n**Initial value**: `running`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'paused',
                'revert',
                'running',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OAnimationTimingFunction: {
          description:
            'The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OBackgroundSize: {
          description:
            "The **`background-size`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto auto`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'auto',
                'contain',
                'cover',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        OBorderImage: {
          description:
            "The **`border-image`** CSS property draws an image around a given element. It replaces the element's regular border.\n\n**Syntax**: `<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'repeat',
                'revert',
                'round',
                'space',
                'stretch',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OTransform: {
          description:
            'The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n\n**Syntax**: `none | <transform-list>`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OTransition: {
          description:
            'The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n\n**Syntax**: `<single-transition>#`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'all',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'none',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OTransitionDelay: {
          description:
            "The **`transition-delay`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        OTransitionDuration: {
          description:
            'The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        OTransitionProperty: {
          description:
            'The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n\n**Syntax**: `none | <single-transition-property>#`\n\n**Initial value**: all',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'all',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        OTransitionTimingFunction: {
          description:
            'The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ease',
                'ease-in',
                'ease-in-out',
                'ease-out',
                'inherit',
                'initial',
                'linear',
                'revert',
                'step-end',
                'step-start',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitBoxAlign: {
          description:
            'The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | baseline | stretch`\n\n**Initial value**: `stretch`',
          enum: [
            '-moz-initial',
            'baseline',
            'center',
            'end',
            'inherit',
            'initial',
            'revert',
            'start',
            'stretch',
            'unset',
          ],
          type: 'string',
        },
        WebkitBoxDirection: {
          description:
            'The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n\n**Syntax**: `normal | reverse | inherit`\n\n**Initial value**: `normal`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'normal',
            'reverse',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        WebkitBoxFlex: {
          description:
            "The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box's layout.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitBoxFlexGroup: {
          description:
            "The **`box-flex-group`** CSS property assigns the flexbox's child elements to a flex group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitBoxLines: {
          description:
            'The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n\n**Syntax**: `single | multiple`\n\n**Initial value**: `single`',
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'multiple',
            'revert',
            'single',
            'unset',
          ],
          type: 'string',
        },
        WebkitBoxOrdinalGroup: {
          description:
            "The **`box-ordinal-group`** CSS property assigns the flexbox's child elements to an ordinal group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        WebkitBoxOrient: {
          description:
            'This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.\n\n**Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n\n**Initial value**: `inline-axis` (`horizontal` in XUL)',
          enum: [
            '-moz-initial',
            'block-axis',
            'horizontal',
            'inherit',
            'initial',
            'inline-axis',
            'revert',
            'unset',
            'vertical',
          ],
          type: 'string',
        },
        WebkitBoxPack: {
          description:
            'The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | justify`\n\n**Initial value**: `start`',
          enum: [
            '-moz-initial',
            'center',
            'end',
            'inherit',
            'initial',
            'justify',
            'revert',
            'start',
            'unset',
          ],
          type: 'string',
        },
        WebkitScrollSnapPointsX: {
          description:
            'The **`scroll-snap-points-x`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.\n\n**Syntax**: `none | repeat( <length-percentage> )`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        WebkitScrollSnapPointsY: {
          description:
            'The **`scroll-snap-points-y`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.\n\n**Syntax**: `none | repeat( <length-percentage> )`\n\n**Initial value**: `none`',
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        alignmentBaseline: {
          enum: [
            '-moz-initial',
            'after-edge',
            'alphabetic',
            'auto',
            'baseline',
            'before-edge',
            'central',
            'hanging',
            'ideographic',
            'inherit',
            'initial',
            'mathematical',
            'middle',
            'revert',
            'text-after-edge',
            'text-before-edge',
            'unset',
          ],
          type: 'string',
        },
        baselineShift: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'baseline',
                'inherit',
                'initial',
                'revert',
                'sub',
                'super',
                'unset',
              ],
            },
          ],
        },
        clipRule: {
          enum: [
            '-moz-initial',
            'evenodd',
            'inherit',
            'initial',
            'nonzero',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        colorInterpolation: {
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'linearRGB',
            'revert',
            'sRGB',
            'unset',
          ],
          type: 'string',
        },
        colorRendering: {
          enum: [
            '-moz-initial',
            'auto',
            'inherit',
            'initial',
            'optimizeQuality',
            'optimizeSpeed',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        dominantBaseline: {
          enum: [
            '-moz-initial',
            'alphabetic',
            'auto',
            'central',
            'hanging',
            'ideographic',
            'inherit',
            'initial',
            'mathematical',
            'middle',
            'no-change',
            'reset-size',
            'revert',
            'text-after-edge',
            'text-before-edge',
            'unset',
            'use-script',
          ],
          type: 'string',
        },
        fill: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'child',
                'chocolate',
                'context-fill',
                'context-stroke',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        fillOpacity: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        fillRule: {
          enum: [
            '-moz-initial',
            'evenodd',
            'inherit',
            'initial',
            'nonzero',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        floodColor: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentColor',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        floodOpacity: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        glyphOrientationVertical: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'auto',
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        lightingColor: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentColor',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        marker: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        markerEnd: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        markerMid: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        markerStart: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
              type: 'string',
            },
          ],
        },
        shapeRendering: {
          enum: [
            '-moz-initial',
            'auto',
            'crispEdges',
            'geometricPrecision',
            'inherit',
            'initial',
            'optimizeSpeed',
            'revert',
            'unset',
          ],
          type: 'string',
        },
        stopColor: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'chocolate',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentColor',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        stopOpacity: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        stroke: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                'ActiveBorder',
                'ActiveCaption',
                'AppWorkspace',
                'Background',
                'ButtonFace',
                'ButtonHighlight',
                'ButtonShadow',
                'ButtonText',
                'CaptionText',
                'GrayText',
                'Highlight',
                'HighlightText',
                'InactiveBorder',
                'InactiveCaption',
                'InactiveCaptionText',
                'InfoBackground',
                'InfoText',
                'Menu',
                'MenuText',
                'Scrollbar',
                'ThreeDDarkShadow',
                'ThreeDFace',
                'ThreeDHighlight',
                'ThreeDLightShadow',
                'ThreeDShadow',
                'Window',
                'WindowFrame',
                'WindowText',
                'aliceblue',
                'antiquewhite',
                'aqua',
                'aquamarine',
                'azure',
                'beige',
                'bisque',
                'black',
                'blanchedalmond',
                'blue',
                'blueviolet',
                'brown',
                'burlywood',
                'cadetblue',
                'chartreuse',
                'child',
                'chocolate',
                'context-fill',
                'context-stroke',
                'coral',
                'cornflowerblue',
                'cornsilk',
                'crimson',
                'currentcolor',
                'cyan',
                'darkblue',
                'darkcyan',
                'darkgoldenrod',
                'darkgray',
                'darkgreen',
                'darkgrey',
                'darkkhaki',
                'darkmagenta',
                'darkolivegreen',
                'darkorange',
                'darkorchid',
                'darkred',
                'darksalmon',
                'darkseagreen',
                'darkslateblue',
                'darkslategray',
                'darkslategrey',
                'darkturquoise',
                'darkviolet',
                'deeppink',
                'deepskyblue',
                'dimgray',
                'dimgrey',
                'dodgerblue',
                'firebrick',
                'floralwhite',
                'forestgreen',
                'fuchsia',
                'gainsboro',
                'ghostwhite',
                'gold',
                'goldenrod',
                'gray',
                'green',
                'greenyellow',
                'grey',
                'honeydew',
                'hotpink',
                'indianred',
                'indigo',
                'inherit',
                'initial',
                'ivory',
                'khaki',
                'lavender',
                'lavenderblush',
                'lawngreen',
                'lemonchiffon',
                'lightblue',
                'lightcoral',
                'lightcyan',
                'lightgoldenrodyellow',
                'lightgray',
                'lightgreen',
                'lightgrey',
                'lightpink',
                'lightsalmon',
                'lightseagreen',
                'lightskyblue',
                'lightslategray',
                'lightslategrey',
                'lightsteelblue',
                'lightyellow',
                'lime',
                'limegreen',
                'linen',
                'magenta',
                'maroon',
                'mediumaquamarine',
                'mediumblue',
                'mediumorchid',
                'mediumpurple',
                'mediumseagreen',
                'mediumslateblue',
                'mediumspringgreen',
                'mediumturquoise',
                'mediumvioletred',
                'midnightblue',
                'mintcream',
                'mistyrose',
                'moccasin',
                'navajowhite',
                'navy',
                'none',
                'oldlace',
                'olive',
                'olivedrab',
                'orange',
                'orangered',
                'orchid',
                'palegoldenrod',
                'palegreen',
                'paleturquoise',
                'palevioletred',
                'papayawhip',
                'peachpuff',
                'peru',
                'pink',
                'plum',
                'powderblue',
                'purple',
                'rebeccapurple',
                'red',
                'revert',
                'rosybrown',
                'royalblue',
                'saddlebrown',
                'salmon',
                'sandybrown',
                'seagreen',
                'seashell',
                'sienna',
                'silver',
                'skyblue',
                'slateblue',
                'slategray',
                'slategrey',
                'snow',
                'springgreen',
                'steelblue',
                'tan',
                'teal',
                'thistle',
                'tomato',
                'transparent',
                'turquoise',
                'unset',
                'violet',
                'wheat',
                'white',
                'whitesmoke',
                'yellow',
                'yellowgreen',
              ],
              type: 'string',
            },
          ],
        },
        strokeDasharray: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'none',
                'revert',
                'unset',
              ],
            },
          ],
        },
        strokeDashoffset: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        strokeLinecap: {
          enum: [
            '-moz-initial',
            'butt',
            'inherit',
            'initial',
            'revert',
            'round',
            'square',
            'unset',
          ],
          type: 'string',
        },
        strokeLinejoin: {
          enum: [
            '-moz-initial',
            'bevel',
            'inherit',
            'initial',
            'miter',
            'revert',
            'round',
            'unset',
          ],
          type: 'string',
        },
        strokeMiterlimit: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        strokeOpacity: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'number',
                },
              ],
            },
            {
              enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
              type: 'string',
            },
          ],
        },
        strokeWidth: {
          anyOf: [
            {
              allOf: [
                {
                  type: 'object',
                },
                {
                  type: 'string',
                },
              ],
            },
            {
              enum: [
                '-moz-initial',
                0,
                'inherit',
                'initial',
                'revert',
                'unset',
              ],
            },
          ],
        },
        textAnchor: {
          enum: [
            '-moz-initial',
            'end',
            'inherit',
            'initial',
            'middle',
            'revert',
            'start',
            'unset',
          ],
          type: 'string',
        },
        vectorEffect: {
          enum: [
            '-moz-initial',
            'inherit',
            'initial',
            'non-scaling-stroke',
            'none',
            'revert',
            'unset',
          ],
          type: 'string',
        },
      },
    },
  },
}

const UpdateVertexInputDecorators: DecoratorsMap = {
  props: {
    'data-grid': {
      x: {
        __grid: {
          order: 1,
          span: 6,
        },
      },
      y: {
        __grid: {
          order: 2,
          span: 6,
        },
      },
      w: {
        __grid: {
          order: 3,
          span: 6,
        },
      },
      h: {
        __grid: {
          order: 4,
          span: 6,
        },
      },
    },
  },
}

export const UpdateVertexInputGridFormProps = {
  ObjectFieldTemplate: ObjectFieldGridTemplateFactory(
    UpdateVertexInputDecorators,
  ),
}

export const UpdateVertexInputFormProps = { ...UpdateVertexInputGridFormProps }

export const UpdateVertexInputSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    vertexId: {
      type: 'string',
      minLength: 3,
    },
    props: {
      type: 'object',
      properties: {
        type: {
          type: 'string',
          enum: [
            'React_Fragment',
            'React_Html_Div',
            'React_Html_P',
            'React_Html_A',
            'React_Html_Span',
            'React_Text',
            'React_Icon',
            'React_Menu',
            'React_Menu_Item',
            'React_Menu_ItemGroup',
            'React_Menu_SubMenu',
            'React_Card',
            'React_Card_Grid',
            'React_Card_Meta',
            'React_Typography',
            'React_Typography_Title',
            'React_Typography_Text',
            'React_Typography_Paragraph',
            'React_Alert',
            'React_Affix',
            'React_AutoComplete',
            'React_Button',
            'React_Breadcrumb',
            'React_Breadcrumb_Item',
            'React_Dropdown',
            'React_Form',
            'React_Form_Item',
            'React_Form_ItemHook',
            'React_Form_List',
            'React_Checkbox',
            'React_Input',
            'React_InputNumber',
            'React_Select',
            'React_Select_Option',
            'React_RGL_ResponsiveContainer',
            'React_RGL_Container',
            'React_RGL_Item',
            'React_Provider',
            'React_Modal',
            'React_Radio_Group',
            'React_Radio',
            'React_Rate',
            'React_Slider',
            'React_Switch',
            'React_Table',
            'React_Space',
            'React_DatePicker',
            'React_Divider',
            'React_Pagination',
            'React_PageHeader',
            'React_Badge',
            'React_Avatar',
            'React_Comment',
            'React_Calendar',
            'React_Descriptions',
            'React_Descriptions_Item',
            'React_Empty',
            'React_Timeline',
            'React_Timeline_Item',
            'React_Tabs',
            'React_Tabs_TabPane',
            'React_Statistic',
            'React_Tooltip',
            'React_Tag',
            'React_Tree',
            'React_Drawer',
            'React_Progress',
            'React_Result',
            'React_Spin',
            'React_Skeleton',
            'React_Anchor',
            'React_Anchor_Link',
            'React_BackTop',
            'React_ConfigProvider',
            'React_Popconfirm',
            'React_Transfer',
            'React_TreeSelect',
            'React_TreeNode',
            'React_TimePicker',
            'React_Upload',
            'React_Steps',
            'React_Steps_Step',
            'React_Collapse',
            'React_Collapse_Panel',
            'React_Carousel',
            'React_List',
            'React_List_Item',
            'React_List_Item_Meta',
            'React_Mentions',
            'React_Mentions_Option',
            'React_Layout',
            'React_Layout_Header',
            'React_Layout_Sider',
            'React_Layout_Content',
            'React_Layout_Footer',
            'React_Cascader',
            'React_Popover',
            'React_RenderComponent',
            'React_RenderContainer',
            'React_Mapper',
          ],
        },
      },
      title: '',
      dependencies: {
        type: {
          oneOf: [
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Button'],
                },
                props: {
                  type: 'object',
                  properties: {
                    block: {
                      type: 'boolean',
                      description:
                        'Option to fit button width to its parent width',
                    },
                    danger: {
                      type: 'boolean',
                      description: 'Set the danger status of button',
                    },
                    disabled: {
                      type: 'boolean',
                      description: 'Disabled state of button',
                    },
                    ghost: {
                      type: 'boolean',
                      description:
                        'Make background transparent and invert text and border colors\t',
                    },
                    href: {
                      type: 'string',
                      description: 'Redirect url of link button',
                    },
                    htmlType: {
                      type: 'string',
                      description: 'Set the original html type of button',
                      enum: ['submit', 'button', 'reset'],
                    },
                    icon: {
                      type: 'string',
                      description: 'Set the icon component of button',
                    },
                    loading: {
                      type: 'number',
                      description: 'Set the loading status of button',
                    },
                    shape: {
                      type: 'string',
                      description: 'Can be set button shape',
                      enum: ['circle', 'round'],
                    },
                    size: {
                      type: 'string',
                      description: 'Set the size of button',
                      default: 'middle',
                      enum: ['small', 'middle', 'large'],
                    },
                    target: {
                      type: 'string',
                      description:
                        'Same as target attribute of a, works when href is specified',
                    },
                    type: {
                      type: 'string',
                      description:
                        'Can be set to primary ghost dashed link text default',
                      enum: [
                        'default',
                        'primary',
                        'ghost',
                        'dashed',
                        'link',
                        'text',
                      ],
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Card'],
                },
                props: {
                  type: 'object',
                  properties: {
                    actions: {
                      type: 'array',
                      items: {
                        type: 'string',
                      },
                      description:
                        'The action list, shows at the bottom of the Card',
                    },
                    activeTabKey: {
                      type: 'string',
                      description: "Current TabPane's key",
                    },
                    bodyStyle: {
                      type: 'string',
                      description: 'Inline style to apply to the card content',
                    },
                    bordered: {
                      type: 'boolean',
                      description:
                        'Toggles rendering of the border around the card',
                      default: true,
                    },
                    cover: {
                      type: 'string',
                      description: 'Card cover',
                    },
                    defaultActiveTabKey: {
                      type: 'string',
                      description:
                        "Initial active TabPane's key, if activeTabKey is not set",
                    },
                    extra: {
                      type: 'string',
                      description:
                        'Content to render in the top-right corner of the card',
                    },
                    headStyle: {
                      type: 'string',
                      description: 'Inline style to apply to the card head',
                    },
                    hoverable: {
                      type: 'boolean',
                      description: 'Lift up when hovering card',
                    },
                    loading: {
                      type: 'boolean',
                      description:
                        'Shows a loading indicator while the contents of the card are being fetched',
                    },
                    size: {
                      type: 'string',
                      description: 'Size of card',
                      enum: ['default', 'small'],
                      default: 'default',
                    },
                    tabBarExtraContent: {
                      type: 'string',
                      description: 'Extra content in tab bar',
                    },
                    tabList: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          key: {
                            type: 'string',
                            minLength: 1,
                          },
                          tab: {
                            type: 'string',
                          },
                          disabled: {
                            type: 'boolean',
                          },
                        },
                        required: ['key', 'tab'],
                      },
                      description: "List of TabPane's head",
                    },
                    title: {
                      type: 'string',
                      description: 'Card title',
                    },
                    type: {
                      type: 'string',
                      description:
                        'Card style type, can be set to inner or not set',
                      enum: ['inner'],
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Card_Grid'],
                },
                props: {
                  type: 'object',
                  properties: {
                    className: {
                      type: 'string',
                      description: 'The className of container',
                    },
                    hoverable: {
                      type: 'boolean',
                      description: 'Lift up when hovering card grid',
                    },
                    style: {
                      type: 'string',
                      description: 'The style object of container',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Card_Meta'],
                },
                props: {
                  type: 'object',
                  properties: {
                    avatar: {
                      type: 'string',
                      description: 'Avatar or icon',
                    },
                    className: {
                      type: 'string',
                      description: 'The className of container',
                    },
                    description: {
                      type: 'string',
                      description: 'Description content',
                    },
                    style: {
                      type: 'string',
                      description: 'The style object of container',
                    },
                    title: {
                      type: 'string',
                      description: 'Title content',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Icon'],
                },
                props: {
                  type: 'object',
                  properties: {
                    className: {
                      type: 'string',
                      description: 'The className of Icon',
                    },
                    rotate: {
                      type: 'string',
                      description: 'Rotate by n degrees (not working in IE9)',
                    },
                    spin: {
                      type: 'boolean',
                      description: 'Rotate icon with animation',
                    },
                    style: {
                      type: 'string',
                      description:
                        'The style properties of icon, like fontSize and color',
                    },
                    twoToneColor: {
                      type: 'string',
                      description:
                        'Only supports the two-tone icon. Specify the primary color',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Divider'],
                },
                props: {
                  type: 'object',
                  properties: {
                    className: {
                      type: 'string',
                      description: 'The className of container',
                    },
                    dashed: {
                      type: 'boolean',
                      description: 'Whether line is dashed',
                    },
                    orientation: {
                      type: 'string',
                      description: 'The position of title inside divider',
                      enum: ['left', 'right', 'center'],
                      default: 'center',
                    },
                    plain: {
                      type: 'boolean',
                      description: 'Divider text show as plain style',
                    },
                    style: {
                      type: 'string',
                      description: 'The style object of container',
                    },
                    type: {
                      type: 'string',
                      description: 'The direction type of divider',
                      enum: ['horizontal', 'vertical'],
                      default: 'horizontal',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: [
                    'React_Layout',
                    'React_Layout_Header',
                    'React_Layout_Footer',
                    'React_Layout_Content',
                  ],
                },
                props: {
                  type: 'object',
                  properties: {
                    className: {
                      type: 'string',
                      description: 'Container className',
                    },
                    hasSider: {
                      type: 'boolean',
                      description:
                        "Whether contain Sider in children, don't have to assign it normally. Useful in ssr avoid style flickering\t",
                    },
                    style: {
                      type: 'string',
                      description: 'To customize the styles',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Layout_Sider'],
                },
                props: {
                  type: 'object',
                  properties: {
                    breakpoint: {
                      type: 'string',
                      description: 'Breakpoints of the responsive layout',
                      enum: ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'],
                    },
                    className: {
                      type: 'string',
                      description: 'Container className',
                    },
                    collapsed: {
                      type: 'boolean',
                      description: 'To set the current status',
                    },
                    collapsedWidth: {
                      type: 'number',
                      description:
                        'Width of the collapsed sidebar, by setting to 0 a special trigger will appear',
                      default: 80,
                    },
                    collapsible: {
                      type: 'boolean',
                      description: 'Whether can be collapsed',
                    },
                    defaultCollapsed: {
                      type: 'boolean',
                      description: 'To set the initial status',
                    },
                    reverseArrow: {
                      type: 'boolean',
                      description:
                        'Reverse direction of arrow, for a sider that expands from the right',
                    },
                    style: {
                      type: 'string',
                      description: 'To customize the styles',
                    },
                    theme: {
                      type: 'string',
                      description: 'Color theme of the sidebar',
                      enum: ['light', 'dark'],
                      default: 'dark',
                    },
                    trigger: {
                      type: 'string',
                      description:
                        'Specify the customized trigger, set to null to hide the trigger',
                    },
                    width: {
                      type: 'string',
                      description: 'Width of the sidebar',
                      default: 200,
                    },
                    zeroWidthTriggerStyle: {
                      type: 'string',
                      description:
                        'To customize the styles of the special trigger that appears when collapsedWidth is 0',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Space'],
                },
                props: {
                  type: 'object',
                  properties: {
                    align: {
                      type: 'string',
                      description: 'Align items',
                      enum: ['start', 'end', 'center', 'baseline'],
                    },
                    direction: {
                      type: 'string',
                      description: 'The space direction',
                      enum: ['horizontal', 'vertical'],
                      default: 'horizontal',
                    },
                    size: {
                      type: 'string',
                      description: 'The space size',
                    },
                    split: {
                      type: 'string',
                      description: 'Set split',
                    },
                    wrap: {
                      type: 'boolean',
                      description: 'Auto wrap line, when horizontal effective',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Affix'],
                },
                props: {
                  type: 'object',
                  properties: {
                    offsetBottom: {
                      type: 'string',
                      description:
                        'Offset from the bottom of the viewport (in pixels)',
                    },
                    offsetTop: {
                      type: 'string',
                      description:
                        'Offset from the top of the viewport (in pixels)',
                      default: 0,
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Breadcrumb'],
                },
                props: {
                  type: 'object',
                  properties: {
                    params: {
                      type: 'string',
                      description: 'Routing parameters',
                    },
                    routes: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          path: {
                            type: 'string',
                            minLength: 1,
                          },
                          breadcrumbName: {
                            type: 'string',
                            minLength: 1,
                          },
                          children: {
                            type: 'array',
                            items: {
                              type: 'object',
                              properties: {
                                path: {
                                  type: 'string',
                                  minLength: 1,
                                },
                                breadcrumbName: {
                                  type: 'string',
                                  minLength: 1,
                                },
                              },
                              required: ['path', 'breadcrumbName'],
                            },
                          },
                        },
                        required: ['path', 'breadcrumbName'],
                      },
                      description: 'The routing stack information of router',
                    },
                    separator: {
                      type: 'string',
                      description: 'Custom separator',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Breadcrumb_Item'],
                },
                props: {
                  type: 'object',
                  properties: {
                    className: {
                      type: 'string',
                      description: 'The additional css class',
                    },
                    dropdownProps: {
                      type: 'object',
                      properties: {
                        arrow: {
                          type: 'boolean',
                          description:
                            'Whether the dropdown arrow should be visible',
                          default: false,
                        },
                        disabled: {
                          type: 'boolean',
                          description: 'Whether the dropdown menu is disabled',
                        },
                        overlay: {
                          type: 'object',
                          properties: {
                            defaultOpenKeys: {
                              type: 'array',
                              items: {
                                type: 'string',
                              },
                              description:
                                'Array with the keys of default opened sub menus',
                            },
                            defaultSelectedKeys: {
                              type: 'array',
                              items: {
                                type: 'string',
                              },
                              description:
                                'Array with the keys of default selected menu items',
                            },
                            expandIcon: {
                              type: 'string',
                              description: 'custom expand icon of submenu',
                            },
                            forceSubMenuRender: {
                              type: 'boolean',
                              description:
                                'Render submenu into DOM before it becomes visible',
                            },
                            inlineCollapsed: {
                              type: 'boolean',
                              description:
                                'Specifies the collapsed status when menu is inline mode',
                            },
                            inlineIndent: {
                              type: 'number',
                              description:
                                'Indent (in pixels) of inline menu items on each level',
                              default: 24,
                            },
                            mode: {
                              type: 'string',
                              description: 'Type of menu',
                              enum: [
                                'horizontal',
                                'vertical',
                                'vertical-left',
                                'vertical-right',
                                'inline',
                              ],
                              default: 'vertical',
                            },
                            multiple: {
                              type: 'boolean',
                              description: 'Allows selection of multiple items',
                            },
                            openKeys: {
                              type: 'array',
                              items: {
                                type: 'string',
                              },
                              description:
                                'Array with the keys of currently opened sub-menus',
                            },
                            overflowedIndicator: {
                              type: 'string',
                              description:
                                'Customized icon when menu is collapsed',
                            },
                            selectable: {
                              type: 'boolean',
                              description: 'Allows selecting menu items',
                            },
                            selectedKeys: {
                              type: 'array',
                              items: {
                                type: 'string',
                              },
                              description:
                                'Array with the keys of currently selected menu items',
                            },
                            style: {
                              type: 'string',
                              description: 'Style of the root node',
                            },
                            subMenuCloseDelay: {
                              type: 'number',
                              description:
                                'Delay time to hide submenu when mouse leaves (in seconds)',
                              default: 0.1,
                            },
                            subMenuOpenDelay: {
                              type: 'number',
                              description:
                                'Delay time to show submenu when mouse enters, (in seconds)',
                              default: 0,
                            },
                            theme: {
                              type: 'string',
                              description: 'Color theme of the menu',
                              enum: ['light', 'dark'],
                              default: 'light',
                            },
                            triggerSubMenuAction: {
                              type: 'string',
                              description:
                                'Which action can trigger submenu open/close',
                              enum: ['hover', 'click'],
                              default: 'hover',
                            },
                          },
                          description: 'The dropdown menu',
                        },
                        overlayClassName: {
                          type: 'string',
                          description:
                            'The class name of the dropdown root element',
                        },
                        overlayStyle: {
                          type: 'string',
                          description: 'The style of the dropdown root element',
                        },
                        placement: {
                          type: 'string',
                          description: 'Placement of popup menu',
                          enum: [
                            'topLeft',
                            'topCenter',
                            'topRight',
                            'bottomLeft',
                            'bottomCenter',
                            'bottomRight',
                          ],
                          default: 'bottomLeft',
                        },
                        trigger: {
                          type: 'array',
                          items: {
                            type: 'string',
                            enum: ['click', 'hover', 'contextMenu'],
                          },
                          description:
                            "The trigger mode which executes the dropdown action. Note that hover can't be used on touchscreens",
                          title: 'Trigger',
                          uniqueItems: true,
                          maxItems: 3,
                          default: ['hover'],
                        },
                        visible: {
                          type: 'boolean',
                          description:
                            'Whether the dropdown menu is currently visible',
                        },
                      },
                      description: 'The dropdown props',
                      title: 'Dropdown Props',
                    },
                    href: {
                      type: 'string',
                      description: 'Target of hyperlink',
                    },
                    overlay: {
                      type: 'object',
                      properties: {
                        defaultOpenKeys: {
                          type: 'array',
                          items: {
                            type: 'string',
                          },
                          description:
                            'Array with the keys of default opened sub menus',
                        },
                        defaultSelectedKeys: {
                          type: 'array',
                          items: {
                            type: 'string',
                          },
                          description:
                            'Array with the keys of default selected menu items',
                        },
                        expandIcon: {
                          type: 'string',
                          description: 'custom expand icon of submenu',
                        },
                        forceSubMenuRender: {
                          type: 'boolean',
                          description:
                            'Render submenu into DOM before it becomes visible',
                        },
                        inlineCollapsed: {
                          type: 'boolean',
                          description:
                            'Specifies the collapsed status when menu is inline mode',
                        },
                        inlineIndent: {
                          type: 'number',
                          description:
                            'Indent (in pixels) of inline menu items on each level',
                          default: 24,
                        },
                        mode: {
                          type: 'string',
                          description: 'Type of menu',
                          enum: [
                            'horizontal',
                            'vertical',
                            'vertical-left',
                            'vertical-right',
                            'inline',
                          ],
                          default: 'vertical',
                        },
                        multiple: {
                          type: 'boolean',
                          description: 'Allows selection of multiple items',
                        },
                        openKeys: {
                          type: 'array',
                          items: {
                            type: 'string',
                          },
                          description:
                            'Array with the keys of currently opened sub-menus',
                        },
                        overflowedIndicator: {
                          type: 'string',
                          description: 'Customized icon when menu is collapsed',
                        },
                        selectable: {
                          type: 'boolean',
                          description: 'Allows selecting menu items',
                        },
                        selectedKeys: {
                          type: 'array',
                          items: {
                            type: 'string',
                          },
                          description:
                            'Array with the keys of currently selected menu items',
                        },
                        style: {
                          type: 'string',
                          description: 'Style of the root node',
                        },
                        subMenuCloseDelay: {
                          type: 'number',
                          description:
                            'Delay time to hide submenu when mouse leaves (in seconds)',
                          default: 0.1,
                        },
                        subMenuOpenDelay: {
                          type: 'number',
                          description:
                            'Delay time to show submenu when mouse enters, (in seconds)',
                          default: 0,
                        },
                        theme: {
                          type: 'string',
                          description: 'Color theme of the menu',
                          enum: ['light', 'dark'],
                          default: 'light',
                        },
                        triggerSubMenuAction: {
                          type: 'string',
                          description:
                            'Which action can trigger submenu open/close',
                          enum: ['hover', 'click'],
                          default: 'hover',
                        },
                      },
                      description: 'The dropdown menu',
                      title: 'Menu Props',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Dropdown'],
                },
                props: {
                  type: 'object',
                  properties: {
                    arrow: {
                      type: 'boolean',
                      description:
                        'Whether the dropdown arrow should be visible',
                      default: false,
                    },
                    disabled: {
                      type: 'boolean',
                      description: 'Whether the dropdown menu is disabled',
                    },
                    overlay: {
                      type: 'object',
                      properties: {
                        defaultOpenKeys: {
                          type: 'array',
                          items: {
                            type: 'string',
                          },
                          description:
                            'Array with the keys of default opened sub menus',
                        },
                        defaultSelectedKeys: {
                          type: 'array',
                          items: {
                            type: 'string',
                          },
                          description:
                            'Array with the keys of default selected menu items',
                        },
                        expandIcon: {
                          type: 'string',
                          description: 'custom expand icon of submenu',
                        },
                        forceSubMenuRender: {
                          type: 'boolean',
                          description:
                            'Render submenu into DOM before it becomes visible',
                        },
                        inlineCollapsed: {
                          type: 'boolean',
                          description:
                            'Specifies the collapsed status when menu is inline mode',
                        },
                        inlineIndent: {
                          type: 'number',
                          description:
                            'Indent (in pixels) of inline menu items on each level',
                          default: 24,
                        },
                        mode: {
                          type: 'string',
                          description: 'Type of menu',
                          enum: [
                            'horizontal',
                            'vertical',
                            'vertical-left',
                            'vertical-right',
                            'inline',
                          ],
                          default: 'vertical',
                        },
                        multiple: {
                          type: 'boolean',
                          description: 'Allows selection of multiple items',
                        },
                        openKeys: {
                          type: 'array',
                          items: {
                            type: 'string',
                          },
                          description:
                            'Array with the keys of currently opened sub-menus',
                        },
                        overflowedIndicator: {
                          type: 'string',
                          description: 'Customized icon when menu is collapsed',
                        },
                        selectable: {
                          type: 'boolean',
                          description: 'Allows selecting menu items',
                        },
                        selectedKeys: {
                          type: 'array',
                          items: {
                            type: 'string',
                          },
                          description:
                            'Array with the keys of currently selected menu items',
                        },
                        style: {
                          type: 'string',
                          description: 'Style of the root node',
                        },
                        subMenuCloseDelay: {
                          type: 'number',
                          description:
                            'Delay time to hide submenu when mouse leaves (in seconds)',
                          default: 0.1,
                        },
                        subMenuOpenDelay: {
                          type: 'number',
                          description:
                            'Delay time to show submenu when mouse enters, (in seconds)',
                          default: 0,
                        },
                        theme: {
                          type: 'string',
                          description: 'Color theme of the menu',
                          enum: ['light', 'dark'],
                          default: 'light',
                        },
                        triggerSubMenuAction: {
                          type: 'string',
                          description:
                            'Which action can trigger submenu open/close',
                          enum: ['hover', 'click'],
                          default: 'hover',
                        },
                      },
                      description: 'The dropdown menu',
                    },
                    overlayClassName: {
                      type: 'string',
                      description:
                        'The class name of the dropdown root element',
                    },
                    overlayStyle: {
                      type: 'string',
                      description: 'The style of the dropdown root element',
                    },
                    placement: {
                      type: 'string',
                      description: 'Placement of popup menu',
                      enum: [
                        'topLeft',
                        'topCenter',
                        'topRight',
                        'bottomLeft',
                        'bottomCenter',
                        'bottomRight',
                      ],
                      default: 'bottomLeft',
                    },
                    trigger: {
                      type: 'array',
                      items: {
                        type: 'string',
                        enum: ['click', 'hover', 'contextMenu'],
                      },
                      description:
                        "The trigger mode which executes the dropdown action. Note that hover can't be used on touchscreens",
                      title: 'Trigger',
                      uniqueItems: true,
                      maxItems: 3,
                      default: ['hover'],
                    },
                    visible: {
                      type: 'boolean',
                      description:
                        'Whether the dropdown menu is currently visible',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Menu'],
                },
                props: {
                  type: 'object',
                  properties: {
                    defaultOpenKeys: {
                      type: 'array',
                      items: {
                        type: 'string',
                      },
                      description:
                        'Array with the keys of default opened sub menus',
                    },
                    defaultSelectedKeys: {
                      type: 'array',
                      items: {
                        type: 'string',
                      },
                      description:
                        'Array with the keys of default selected menu items',
                    },
                    expandIcon: {
                      type: 'string',
                      description: 'custom expand icon of submenu',
                    },
                    forceSubMenuRender: {
                      type: 'boolean',
                      description:
                        'Render submenu into DOM before it becomes visible',
                    },
                    inlineCollapsed: {
                      type: 'boolean',
                      description:
                        'Specifies the collapsed status when menu is inline mode',
                    },
                    inlineIndent: {
                      type: 'number',
                      description:
                        'Indent (in pixels) of inline menu items on each level',
                      default: 24,
                    },
                    mode: {
                      type: 'string',
                      description: 'Type of menu',
                      enum: [
                        'horizontal',
                        'vertical',
                        'vertical-left',
                        'vertical-right',
                        'inline',
                      ],
                      default: 'vertical',
                    },
                    multiple: {
                      type: 'boolean',
                      description: 'Allows selection of multiple items',
                    },
                    openKeys: {
                      type: 'array',
                      items: {
                        type: 'string',
                      },
                      description:
                        'Array with the keys of currently opened sub-menus',
                    },
                    overflowedIndicator: {
                      type: 'string',
                      description: 'Customized icon when menu is collapsed',
                    },
                    selectable: {
                      type: 'boolean',
                      description: 'Allows selecting menu items',
                    },
                    selectedKeys: {
                      type: 'array',
                      items: {
                        type: 'string',
                      },
                      description:
                        'Array with the keys of currently selected menu items',
                    },
                    style: {
                      type: 'string',
                      description: 'Style of the root node',
                    },
                    subMenuCloseDelay: {
                      type: 'number',
                      description:
                        'Delay time to hide submenu when mouse leaves (in seconds)',
                      default: 0.1,
                    },
                    subMenuOpenDelay: {
                      type: 'number',
                      description:
                        'Delay time to show submenu when mouse enters, (in seconds)',
                      default: 0,
                    },
                    theme: {
                      type: 'string',
                      description: 'Color theme of the menu',
                      enum: ['light', 'dark'],
                      default: 'light',
                    },
                    triggerSubMenuAction: {
                      type: 'string',
                      description:
                        'Which action can trigger submenu open/close',
                      enum: ['hover', 'click'],
                      default: 'hover',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Menu_Item'],
                },
                props: {
                  type: 'object',
                  properties: {
                    danger: {
                      type: 'boolean',
                      description: 'Display the danger style',
                    },
                    disabled: {
                      type: 'boolean',
                      description: 'Whether menu item is disabled',
                    },
                    icon: {
                      type: 'string',
                      description: 'The icon of the menu item',
                    },
                    key: {
                      type: 'string',
                      description: 'Unique ID of the menu item',
                    },
                    title: {
                      type: 'string',
                      description: 'Set display title for collapsed item',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Menu_SubMenu'],
                },
                props: {
                  type: 'object',
                  properties: {
                    children: {
                      type: 'array',
                      description: 'Sub-menus or sub-menu items',
                      title: 'Children of type MenuItem',
                      items: {
                        type: 'object',
                        properties: {
                          danger: {
                            type: 'boolean',
                            description: 'Display the danger style',
                          },
                          disabled: {
                            type: 'boolean',
                            description: 'Whether menu item is disabled',
                          },
                          icon: {
                            type: 'string',
                            description: 'The icon of the menu item',
                          },
                          key: {
                            type: 'string',
                            description: 'Unique ID of the menu item',
                          },
                          title: {
                            type: 'string',
                            description: 'Set display title for collapsed item',
                          },
                        },
                      },
                    },
                    disabled: {
                      type: 'boolean',
                      description: 'Whether sub-menu is disabled',
                    },
                    icon: {
                      type: 'string',
                      description: 'Icon of sub menu',
                    },
                    key: {
                      type: 'string',
                      description: 'Unique ID of the sub-menu',
                    },
                    popupClassName: {
                      type: 'string',
                      description:
                        'Sub-menu class name, not working when mode="inline"',
                    },
                    popupOffset: {
                      type: 'array',
                      title: 'Popup offset in the format of number, number',
                      items: [
                        {
                          title: 'A number',
                          type: 'number',
                          default: 0,
                        },
                        {
                          title: 'A number',
                          type: 'number',
                          default: 0,
                        },
                      ],
                    },
                    title: {
                      type: 'string',
                      description: 'Title of sub menu',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Menu_ItemGroup'],
                },
                props: {
                  type: 'object',
                  properties: {
                    children: {
                      type: 'array',
                      title: 'Children of type MenuItem',
                      items: {
                        type: 'object',
                        properties: {
                          danger: {
                            type: 'boolean',
                            description: 'Display the danger style',
                          },
                          disabled: {
                            type: 'boolean',
                            description: 'Whether menu item is disabled',
                          },
                          icon: {
                            type: 'string',
                            description: 'The icon of the menu item',
                          },
                          key: {
                            type: 'string',
                            description: 'Unique ID of the menu item',
                          },
                          title: {
                            type: 'string',
                            description: 'Set display title for collapsed item',
                          },
                        },
                      },
                    },
                    title: {
                      type: 'string',
                      description: 'The title of the group',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_PageHeader'],
                },
                props: {
                  type: 'object',
                  properties: {
                    avatar: {
                      type: 'object',
                      properties: {
                        alt: {
                          type: 'string',
                          description:
                            'This attribute defines the alternative text describing the image',
                        },
                        gap: {
                          type: 'number',
                          description:
                            'Letter type unit distance between left and right sides',
                        },
                        icon: {
                          type: 'string',
                          description: 'Custom icon type for an icon avatar',
                        },
                        shape: {
                          type: 'string',
                          description: 'The shape of avatar',
                          enum: ['circle', 'square'],
                          default: 'circle',
                        },
                        size: {
                          type: 'object',
                          properties: {
                            size: {
                              type: 'string',
                              enum: ['large', 'small', 'default'],
                            },
                            xxl: {
                              type: 'string',
                              enum: ['xxl'],
                            },
                            xl: {
                              type: 'string',
                              enum: ['xl'],
                            },
                            lg: {
                              type: 'string',
                              enum: ['lg'],
                            },
                            md: {
                              type: 'string',
                              enum: ['md'],
                            },
                            sm: {
                              type: 'string',
                              enum: ['sm'],
                            },
                            xs: {
                              type: 'string',
                              enum: ['xs'],
                            },
                          },
                          description: 'The size of the avatar',
                          title: 'Avatar Size',
                        },
                        src: {
                          type: 'string',
                          description:
                            'The address of the image for an image avatar or image element',
                        },
                        srcSet: {
                          type: 'string',
                          description:
                            'A list of sources to use for different screen resolutions',
                        },
                      },
                      description: 'Avatar next to the title bar',
                      title: 'Avatar Props',
                    },
                    backIcon: {
                      type: 'string',
                      description:
                        'Custom back icon, if false the back icon will not be displayed',
                    },
                    breadcrumb: {
                      type: 'object',
                      properties: {
                        params: {
                          type: 'string',
                          description: 'Routing parameters',
                        },
                        routes: {
                          type: 'array',
                          items: {
                            type: 'object',
                            properties: {
                              path: {
                                type: 'string',
                                minLength: 1,
                              },
                              breadcrumbName: {
                                type: 'string',
                                minLength: 1,
                              },
                              children: {
                                type: 'array',
                                items: {
                                  type: 'object',
                                  properties: {
                                    path: {
                                      type: 'string',
                                      minLength: 1,
                                    },
                                    breadcrumbName: {
                                      type: 'string',
                                      minLength: 1,
                                    },
                                  },
                                  required: ['path', 'breadcrumbName'],
                                },
                              },
                            },
                            required: ['path', 'breadcrumbName'],
                          },
                          description:
                            'The routing stack information of router',
                        },
                        separator: {
                          type: 'string',
                          description: 'Custom separator',
                        },
                      },
                      description: 'Breadcrumb configuration',
                      title: 'Breadcrumb props',
                    },
                    extra: {
                      type: 'string',
                      description:
                        'Operating area, at the end of the line of the title line',
                    },
                    footer: {
                      type: 'string',
                      description:
                        "PageHeader's footer, generally used to render TabBar",
                    },
                    ghost: {
                      type: 'boolean',
                      description:
                        'PageHeader type, will change background color',
                    },
                    subTitle: {
                      type: 'string',
                      description: 'Custom subtitle text',
                    },
                    tags: {
                      type: 'array',
                      description: 'Tag list next to title',
                      items: {
                        type: 'object',
                        properties: {
                          closable: {
                            type: 'boolean',
                            description: 'Whether the Tag can be closed',
                          },
                          closeIcon: {
                            type: 'string',
                            description: 'Custom close icon',
                          },
                          color: {
                            type: 'string',
                            description: 'Color of the Tag',
                          },
                          icon: {
                            type: 'string',
                            description: 'Set the icon of tag',
                          },
                          visible: {
                            type: 'boolean',
                            description: 'Whether the Tag is closed or not',
                          },
                        },
                      },
                    },
                    title: {
                      type: 'string',
                      description: 'Custom title text',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Avatar'],
                },
                props: {
                  type: 'object',
                  properties: {
                    alt: {
                      type: 'string',
                      description:
                        'This attribute defines the alternative text describing the image',
                    },
                    gap: {
                      type: 'number',
                      description:
                        'Letter type unit distance between left and right sides',
                    },
                    icon: {
                      type: 'string',
                      description: 'Custom icon type for an icon avatar',
                    },
                    shape: {
                      type: 'string',
                      description: 'The shape of avatar',
                      enum: ['circle', 'square'],
                      default: 'circle',
                    },
                    size: {
                      type: 'object',
                      properties: {
                        size: {
                          type: 'string',
                          enum: ['large', 'small', 'default'],
                        },
                        xxl: {
                          type: 'string',
                          enum: ['xxl'],
                        },
                        xl: {
                          type: 'string',
                          enum: ['xl'],
                        },
                        lg: {
                          type: 'string',
                          enum: ['lg'],
                        },
                        md: {
                          type: 'string',
                          enum: ['md'],
                        },
                        sm: {
                          type: 'string',
                          enum: ['sm'],
                        },
                        xs: {
                          type: 'string',
                          enum: ['xs'],
                        },
                      },
                      description: 'The size of the avatar',
                      title: 'Avatar Size',
                    },
                    src: {
                      type: 'string',
                      description:
                        'The address of the image for an image avatar or image element',
                    },
                    srcSet: {
                      type: 'string',
                      description:
                        'A list of sources to use for different screen resolutions',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Tag'],
                },
                props: {
                  type: 'object',
                  properties: {
                    closable: {
                      type: 'boolean',
                      description: 'Whether the Tag can be closed',
                    },
                    closeIcon: {
                      type: 'string',
                      description: 'Custom close icon',
                    },
                    color: {
                      type: 'string',
                      description: 'Color of the Tag',
                    },
                    icon: {
                      type: 'string',
                      description: 'Set the icon of tag',
                    },
                    visible: {
                      type: 'boolean',
                      description: 'Whether the Tag is closed or not',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Pagination'],
                },
                props: {
                  type: 'object',
                  properties: {
                    current: {
                      type: 'number',
                      description: 'Current page number',
                    },
                    defaultCurrent: {
                      type: 'number',
                      description: 'Default initial page number',
                      default: 1,
                    },
                    defaultPageSize: {
                      type: 'number',
                      description: 'Default number of data items per page',
                      default: 10,
                    },
                    disabled: {
                      type: 'boolean',
                      description: 'Disable pagination',
                    },
                    hideOnSinglePage: {
                      type: 'boolean',
                      description: 'Whether to hide pager on single page',
                    },
                    pageSize: {
                      type: 'number',
                      description: 'Number of data items per page',
                    },
                    pageSizeOptions: {
                      type: 'array',
                      items: {
                        default: ['10', '20', '50', '100'],
                        type: 'string',
                      },
                      description: 'Specify the sizeChanger options',
                    },
                    responsive: {
                      type: 'boolean',
                      description:
                        'If size is not specified, Pagination would resize according to the width of the window',
                    },
                    showLessItems: {
                      type: 'boolean',
                      description: 'Show less page items',
                    },
                    showQuickJumper: {
                      type: 'boolean',
                      description:
                        'Determine whether you can jump to pages directly',
                    },
                    showSizeChanger: {
                      type: 'boolean',
                      description:
                        'Determine whether to show pageSize select, it will be true when total > 50',
                    },
                    showTitle: {
                      type: 'boolean',
                      description: "Show page item's title",
                    },
                    simple: {
                      type: 'boolean',
                      description: 'Whether to use simple mode',
                    },
                    size: {
                      type: 'string',
                      description:
                        'Specify the size of Pagination, can be set to small',
                      enum: ['default', 'small'],
                      default: 'default',
                    },
                    total: {
                      type: 'number',
                      description: 'Total number of data items',
                      default: 0,
                    },
                  },
                  title: '',
                  dependencies: {
                    showQuickJumper: {
                      oneOf: [
                        {
                          type: 'object',
                          properties: {
                            showQuickJumper: {
                              enum: [false],
                            },
                          },
                        },
                        {
                          type: 'object',
                          properties: {
                            showQuickJumper: {
                              enum: [true],
                            },
                            goButton: {
                              type: 'string',
                            },
                          },
                        },
                      ],
                    },
                  },
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Steps'],
                },
                props: {
                  type: 'object',
                  properties: {
                    className: {
                      type: 'string',
                      description: 'Additional class to Steps',
                    },
                    current: {
                      type: 'number',
                      description:
                        'To set the current step, counting from 0. You can overwrite this state by using status of Step',
                    },
                    direction: {
                      type: 'string',
                      description:
                        'To specify the direction of the step bar, horizontal or vertical',
                      enum: ['horizontal', 'vertical'],
                      default: 'horizontal',
                    },
                    initial: {
                      type: 'number',
                      description: 'Set the initial step, counting from 0',
                      default: 0,
                    },
                    labelPlacement: {
                      type: 'string',
                      description:
                        'Place title and description with horizontal or vertical direction',
                      enum: ['horizontal', 'vertical'],
                      default: 'horizontal',
                    },
                    percent: {
                      type: 'number',
                      description:
                        'Progress circle percentage of current step in process status (only works on basic Steps)',
                    },
                    progressDot: {
                      type: 'boolean',
                      description:
                        'Steps with progress dot style, customize the progress dot by setting it to a function. labelPlacement will be vertical',
                    },
                    responsive: {
                      type: 'boolean',
                      description:
                        'change to vertical direction when screen width smaller than 532px',
                    },
                    size: {
                      type: 'string',
                      description:
                        'To specify the size of the step bar, default and small are currently supported',
                      enum: ['default', 'small'],
                      default: 'default',
                    },
                    status: {
                      type: 'string',
                      description:
                        'To specify the status of current step, can be set to one of the following values: wait process finish error',
                      enum: ['wait', 'process', 'finish', 'error'],
                      default: 'process',
                    },
                    type: {
                      type: 'string',
                      description:
                        'Type of steps, can be set to one of the following values: default, navigation',
                      enum: ['default', 'navigation'],
                      default: 'default',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_Steps_Step'],
                },
                props: {
                  type: 'object',
                  properties: {
                    description: {
                      type: 'string',
                      description: 'Description of the step, optional property',
                    },
                    disabled: {
                      type: 'boolean',
                      description: 'Disable click',
                    },
                    icon: {
                      type: 'string',
                      description: 'Icon of the step, optional property',
                    },
                    status: {
                      type: 'string',
                      description:
                        'To specify the status. It will be automatically set by current of Steps if not configured. Optional values are: wait process finish error',
                      enum: ['wait', 'process', 'finish', 'error'],
                      default: 'wait',
                    },
                    subTitle: {
                      type: 'string',
                      description: 'Subtitle of the step',
                    },
                    title: {
                      type: 'string',
                      description: 'Title of the step',
                    },
                  },
                  title: '',
                },
              },
            },
            {
              type: 'object',
              properties: {
                type: {
                  type: 'string',
                  enum: ['React_AutoComplete'],
                },
                props: {
                  type: 'object',
                  properties: {
                    allowClear: {
                      type: 'boolean',
                      description: 'Show clear button',
                    },
                    autoFocus: {
                      type: 'boolean',
                      description: 'If get focus when component mounted',
                    },
                    backfill: {
                      type: 'boolean',
                      description:
                        'If backfill selected item the input when using keyboard',
                    },
                    childrenInputElement: {
                      type: 'array',
                      items: {
                        type: 'string',
                      },
                      description: 'Customize input element',
                    },
                    childrenDataSource: {
                      type: 'array',
                      items: {
                        type: 'string',
                      },
                      description: 'Data source to auto complete',
                    },
                    defaultActiveFirstOption: {
                      type: 'boolean',
                      description: 'Whether active first option by default',
                      default: true,
                    },
                    defaultOpen: {
                      type: 'boolean',
                      description: 'Initial open state of dropdown',
                    },
                    defaultValue: {
                      type: 'string',
                      description: 'Initial selected option',
                    },
                    disabled: {
                      type: 'boolean',
                      description: 'Whether disabled select',
                    },
                    dropdownClassName: {
                      type: 'string',
                      description: 'The className of dropdown menu',
                    },
                    dropdownMatchSelectWidth: {
                      type: 'number',
                      description:
                        'Determine whether the dropdown menu and the select input are the same width. Default set min-width same as input. Will ignore when value less than select width. false will disable virtual scroll\t',
                    },
                    filterOption: {
                      type: 'boolean',
                      description:
                        'If true, filter options by input, if function, filter options against it. The function will receive two arguments, inputValue and option, if the function returns true, the option will be included in the filtered set; Otherwise, it will be excluded\t',
                    },
                    notFoundContent: {
                      type: 'string',
                      description:
                        'Specify content to show when no result matches',
                      default: 'Not Found',
                    },
                    open: {
                      type: 'boolean',
                      description: 'Controlled open state of dropdown',
                    },
                    options: {
                      type: 'array',
                      items: {
                        type: 'object',
                        properties: {
                          label: {
                            type: 'string',
                            title: 'Label',
                          },
                          value: {
                            type: 'string',
                            title: 'Value',
                          },
                        },
                      },
                      description:
                        'Select options. Will get better perf than jsx definition',
                    },
                    placeholder: {
                      type: 'string',
                      description: 'The placeholder of input',
                    },
                    value: {
                      type: 'string',
                      description: 'Selected option',
                    },
                    onBlur: {
                      type: 'string',
                      description: 'Called when leaving the component',
                    },
                    onChange: {
                      type: 'string',
                      description:
                        'Called when select an option or input value change, or value of input is changed',
                    },
                    onDropdownVisibleChange: {
                      type: 'string',
                      description: 'Called when dropdown open',
                    },
                    onFocus: {
                      type: 'string',
                      description: 'Called when entering the component',
                    },
                    onSearch: {
                      type: 'string',
                      description: 'Called when searching items',
                    },
                    onSelect: {
                      type: 'string',
                      description:
                        "Called when a option is selected. param is option's value and option instance",
                    },
                  },
                  title: '',
                },
              },
            },
          ],
        },
      },
    },
  },
  required: ['vertexId'],
}

export const CreateStyleInputSchema: JSONSchema7 = {
  type: 'object',
  properties: {
    props: {
      type: 'array',
      items: {
        type: 'object',
        $schema: 'http://json-schema.org/draft-07/schema#',
        definitions: {
          CSSProperties: {
            type: 'object',
            properties: {
              alignContent: {
                description:
                  "The CSS **`align-content`** property sets the distribution of space between and around content items along a flexbox's cross-axis or a grid's block axis.\n\n**Syntax**: `normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **29**  | **28**  |   **9**   | **12** | **11** |\n| 21 _-x-_ |         | 6.1 _-x-_ |        |        |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |\n\n---",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'space-around',
                      'space-between',
                      'space-evenly',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              alignItems: {
                description:
                  'The CSS **`align-items`** property sets the `align-self` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.\n\n**Syntax**: `normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n|  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :------: | :-----: | :-----: | :----: | :----: |\n|  **52**  | **20**  |  **9**  | **12** | **11** |\n| 21 _-x-_ |         | 7 _-x-_ |        |        |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |\n\n---',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'self-end',
                      'self-start',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              alignSelf: {
                description:
                  "The **`align-self`** CSS property overrides a grid or flex item's `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n\n**Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n\n**Initial value**: `auto`\n\n---\n\n_Supported in Flex Layout_\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **36**  | **20**  |   **9**   | **12** | **11** |\n| 21 _-x-_ |         | 6.1 _-x-_ |        |        |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  |      IE      |\n| :----: | :-----: | :------: | :----: | :----------: |\n| **57** | **52**  | **10.1** | **16** | **10** _-x-_ |\n\n---",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'self-end',
                      'self-start',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              alignTracks: {
                description:
                  'The **`align-tracks`** CSS property sets the alignment in the masonry axis for grid containers that have masonry in their block axis.\n\n**Syntax**: `[ normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position> ]#`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   |   n/a   |   No   |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'space-around',
                      'space-between',
                      'space-evenly',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              animationDelay: {
                description:
                  'The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              animationDirection: {
                description:
                  'The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n\n**Syntax**: `<single-animation-direction>#`\n\n**Initial value**: `normal`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'alternate',
                      'alternate-reverse',
                      'inherit',
                      'initial',
                      'normal',
                      'reverse',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              animationDuration: {
                description:
                  'The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              animationFillMode: {
                description:
                  'The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n\n**Syntax**: `<single-animation-fill-mode>#`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 5 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'backwards',
                      'both',
                      'forwards',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              animationIterationCount: {
                description:
                  'The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n\n**Syntax**: `<single-animation-iteration-count>#`\n\n**Initial value**: `1`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'infinite',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              animationName: {
                description:
                  'The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n\n**Syntax**: `[ none | <keyframes-name> ]#`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              animationPlayState: {
                description:
                  'The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n\n**Syntax**: `<single-animation-play-state>#`\n\n**Initial value**: `running`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'paused',
                      'revert',
                      'running',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              animationTimingFunction: {
                description:
                  'The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              appearance: {
                description:
                  "The `**appearance**` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n\n**Syntax**: `none | auto | textfield | menulist-button | <compat-auto>`\n\n**Initial value**: `auto`\n\n| Chrome  | Firefox |   Safari    |   Edge   | IE  |\n| :-----: | :-----: | :---------: | :------: | :-: |\n| **84**  | **80**  | **3** _-x-_ |  **84**  | No  |\n| 1 _-x-_ | 1 _-x-_ |             | 12 _-x-_ |     |",
                enum: [
                  '-moz-initial',
                  'auto',
                  'button',
                  'checkbox',
                  'inherit',
                  'initial',
                  'listbox',
                  'menulist',
                  'menulist-button',
                  'meter',
                  'none',
                  'progress-bar',
                  'push-button',
                  'radio',
                  'revert',
                  'searchfield',
                  'slider-horizontal',
                  'square-button',
                  'textarea',
                  'textfield',
                  'unset',
                ],
                type: 'string',
              },
              aspectRatio: {
                description:
                  'The **`aspect-ratio`**  CSS property sets a **preferred aspect ratio** for the box, which will be used in the calculation of auto sizes and some other layout functions.\n\n**Syntax**: `auto | <ratio>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|  n/a   |   n/a   |   No   |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              backdropFilter: {
                description:
                  'The **`backdrop-filter`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.\n\n**Syntax**: `none | <filter-function-list>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |   Safari    |  Edge  | IE  |\n| :----: | :-----: | :---------: | :----: | :-: |\n| **76** |   n/a   | **9** _-x-_ | **17** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              backfaceVisibility: {
                description:
                  'The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n\n**Syntax**: `visible | hidden`\n\n**Initial value**: `visible`\n\n|  Chrome  | Firefox  |    Safari     |  Edge  |   IE   |\n| :------: | :------: | :-----------: | :----: | :----: |\n|  **36**  |  **16**  | **5.1** _-x-_ | **12** | **10** |\n| 12 _-x-_ | 10 _-x-_ |               |        |        |',
                enum: [
                  '-moz-initial',
                  'hidden',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                  'visible',
                ],
                type: 'string',
              },
              backgroundAttachment: {
                description:
                  "The **`background-attachment`** CSS property sets whether a background image's position is fixed within the viewport, or scrolls with its containing block.\n\n**Syntax**: `<attachment>#`\n\n**Initial value**: `scroll`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'fixed',
                      'inherit',
                      'initial',
                      'local',
                      'revert',
                      'scroll',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              backgroundBlendMode: {
                description:
                  "The **`background-blend-mode`** CSS property sets how an element's background images should blend with each other and with the element's background color.\n\n**Syntax**: `<blend-mode>#`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **35** | **30**  | **8**  | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'color',
                      'color-burn',
                      'color-dodge',
                      'darken',
                      'difference',
                      'exclusion',
                      'hard-light',
                      'hue',
                      'inherit',
                      'initial',
                      'lighten',
                      'luminosity',
                      'multiply',
                      'normal',
                      'overlay',
                      'revert',
                      'saturation',
                      'screen',
                      'soft-light',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              backgroundClip: {
                description:
                  "The **`background-clip`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `border-box`\n\n| Chrome | Firefox |   Safari    |  Edge  |  IE   |\n| :----: | :-----: | :---------: | :----: | :---: |\n| **1**  |  **4**  | **3** _-x-_ | **12** | **9** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'inherit',
                      'initial',
                      'padding-box',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              backgroundColor: {
                description:
                  'The **`background-color`** CSS property sets the background color of an element.\n\n**Syntax**: `<color>`\n\n**Initial value**: `transparent`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              backgroundImage: {
                description:
                  'The **`background-image`** CSS property sets one or more background images on an element.\n\n**Syntax**: `<bg-image>#`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              backgroundOrigin: {
                description:
                  "The **`background-origin`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `padding-box`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **4**  | **3**  | **12** | **9** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'inherit',
                      'initial',
                      'padding-box',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              backgroundPosition: {
                description:
                  'The **`background-position`** CSS property sets the initial position for each background image. The position is relative to the position layer set by `background-origin`.\n\n**Syntax**: `<bg-position>#`\n\n**Initial value**: `0% 0%`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              backgroundPositionX: {
                description:
                  'The **`background-position-x`** CSS property sets the initial horizontal position for each background image. The position is relative to the position layer set by `background-origin`.\n\n**Syntax**: `[ center | [ [ left | right | x-start | x-end ]? <length-percentage>? ]! ]#`\n\n**Initial value**: `left`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  | **49**  | **1**  | **12** | **6** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'unset',
                      'x-end',
                      'x-start',
                    ],
                  },
                ],
              },
              backgroundPositionY: {
                description:
                  'The **`background-position-y`** CSS property sets the initial vertical position for each background image. The position is relative to the position layer set by `background-origin`.\n\n**Syntax**: `[ center | [ [ top | bottom | y-start | y-end ]? <length-percentage>? ]! ]#`\n\n**Initial value**: `top`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  | **49**  | **1**  | **12** | **6** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'revert',
                      'top',
                      'unset',
                      'y-end',
                      'y-start',
                    ],
                  },
                ],
              },
              backgroundRepeat: {
                description:
                  'The **`background-repeat`** CSS property sets how background images are repeated. A background image can be repeated along the horizontal and vertical axes, or not repeated at all.\n\n**Syntax**: `<repeat-style>#`\n\n**Initial value**: `repeat`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'no-repeat',
                      'repeat',
                      'repeat-x',
                      'repeat-y',
                      'revert',
                      'round',
                      'space',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              backgroundSize: {
                description:
                  "The **`background-size`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto auto`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **3**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'contain',
                      'cover',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              blockOverflow: {
                description:
                  '**Syntax**: `clip | ellipsis | <string>`\n\n**Initial value**: `clip`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'clip',
                      'ellipsis',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              blockSize: {
                description:
                  "The **`block-size`** CSS property defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the `width` or the `height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'width'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderBlockColor: {
                description:
                  "The **`border-block-color`** CSS property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color` and `border-bottom-color`, or `border-right-color` and `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>{1,2}`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderBlockEndColor: {
                description:
                  "The **`border-block-end-color`** CSS property defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderBlockEndStyle: {
                description:
                  "The **`border-block-end-style`** CSS property defines the style of the logical block-end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              borderBlockEndWidth: {
                description:
                  "The **`border-block-end-width`** CSS property defines the width of the logical block-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              borderBlockStartColor: {
                description:
                  "The **`border-block-start-color`** CSS property defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderBlockStartStyle: {
                description:
                  "The **`border-block-start-style`** CSS property defines the style of the logical block start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              borderBlockStartWidth: {
                description:
                  "The **`border-block-start-width`** CSS property defines the width of the logical block-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              borderBlockStyle: {
                description:
                  "The **`border-block-style`** CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style` and `border-bottom-style`, or `border-left-style` and `border-right-style` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              borderBlockWidth: {
                description:
                  "The **`border-block-width`** CSS property defines the width of the logical block borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width` and `border-bottom-width`, or `border-left-width`, and `border-right-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              borderBottomColor: {
                description:
                  "The **`border-bottom-color`** CSS property sets the color of an element's bottom border. It can also be set with the shorthand CSS properties `border-color` or `border-bottom`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderBottomLeftRadius: {
                description:
                  'The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **4**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderBottomRightRadius: {
                description:
                  'The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **4**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderBottomStyle: {
                description:
                  "The **`border-bottom-style`** CSS property sets the line style of an element's bottom `border`.\n\n**Syntax**: `<line-style>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              borderBottomWidth: {
                description:
                  'The **`border-bottom-width`** CSS property sets the width of the bottom border of an element.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              borderCollapse: {
                description:
                  'The **`border-collapse`** CSS property sets whether cells inside a `<table>` have shared or separate borders.\n\n**Syntax**: `collapse | separate`\n\n**Initial value**: `separate`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **1**  | **1.2** | **12** | **5** |',
                enum: [
                  '-moz-initial',
                  'collapse',
                  'inherit',
                  'initial',
                  'revert',
                  'separate',
                  'unset',
                ],
                type: 'string',
              },
              borderEndEndRadius: {
                description:
                  "The **`border-end-end-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **89** | **66**  |   No   |  No  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderEndStartRadius: {
                description:
                  "The **`border-end-start-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **89** | **66**  |   No   |  No  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderImageOutset: {
                description:
                  "The **`border-image-outset`** CSS property sets the distance by which an element's border image is set out from its border box.\n\n**Syntax**: `[ <length> | <number> ]{1,4}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **15** | **15**  | **6**  | **12** | **11** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderImageRepeat: {
                description:
                  "The **`border-image-repeat`** CSS property defines how the edge regions of a source image are adjusted to fit the dimensions of an element's border image.\n\n**Syntax**: `[ stretch | repeat | round | space ]{1,2}`\n\n**Initial value**: `stretch`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **15** | **15**  | **6**  | **12** | **11** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'repeat',
                      'revert',
                      'round',
                      'space',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderImageSlice: {
                description:
                  "The **`border-image-slice`** CSS property divides the image specified by `border-image-source` into regions. These regions form the components of an element's border image.\n\n**Syntax**: `<number-percentage>{1,4} && fill?`\n\n**Initial value**: `100%`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **15** | **15**  | **6**  | **12** | **11** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderImageSource: {
                description:
                  "The **`border-image-source`** CSS property sets the source image used to create an element's border image.\n\n**Syntax**: `none | <image>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **15** | **15**  | **6**  | **12** | **11** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderImageWidth: {
                description:
                  "The **`border-image-width`** CSS property sets the width of an element's border image.\n\n**Syntax**: `[ <length-percentage> | <number> | auto ]{1,4}`\n\n**Initial value**: `1`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **15** | **13**  | **6**  | **12** | **11** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderInlineColor: {
                description:
                  "The **`border-inline-color`** CSS property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color` and `border-bottom-color`, or `border-right-color` and `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>{1,2}`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderInlineEndColor: {
                description:
                  "The **`border-inline-end-color`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`\n\n| Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n| :----: | :-------------------------: | :------: | :----: | :-: |\n| **69** |           **41**            | **12.1** | **79** | No  |\n|        | 3 _(-moz-border-end-color)_ |          |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderInlineEndStyle: {
                description:
                  "The **`border-inline-end-style`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n| :----: | :-------------------------: | :------: | :----: | :-: |\n| **69** |           **41**            | **12.1** | **79** | No  |\n|        | 3 _(-moz-border-end-style)_ |          |        |     |",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              borderInlineEndWidth: {
                description:
                  "The **`border-inline-end-width`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n| :----: | :-------------------------: | :------: | :----: | :-: |\n| **69** |           **41**            | **12.1** | **79** | No  |\n|        | 3 _(-moz-border-end-width)_ |          |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              borderInlineStartColor: {
                description:
                  "The **`border-inline-start-color`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`\n\n| Chrome |            Firefox            |  Safari  |  Edge  | IE  |\n| :----: | :---------------------------: | :------: | :----: | :-: |\n| **69** |            **41**             | **12.1** | **79** | No  |\n|        | 3 _(-moz-border-start-color)_ |          |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderInlineStartStyle: {
                description:
                  "The **`border-inline-start-style`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome |            Firefox            |  Safari  |  Edge  | IE  |\n| :----: | :---------------------------: | :------: | :----: | :-: |\n| **69** |            **41**             | **12.1** | **79** | No  |\n|        | 3 _(-moz-border-start-style)_ |          |        |     |",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              borderInlineStartWidth: {
                description:
                  "The **`border-inline-start-width`** CSS property defines the width of the logical inline-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              borderInlineStyle: {
                description:
                  "The **`border-inline-style`** CSS property defines the style of the logical inline borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style` and `border-bottom-style`, or `border-left-style` and `border-right-style` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              borderInlineWidth: {
                description:
                  "The **`border-inline-width`** CSS property defines the width of the logical inline borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width` and `border-bottom-width`, or `border-left-width`, and `border-right-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              borderLeftColor: {
                description:
                  "The **`border-left-color`** CSS property sets the color of an element's left border. It can also be set with the shorthand CSS properties `border-color` or `border-left`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderLeftStyle: {
                description:
                  "The **`border-left-style`** CSS property sets the line style of an element's left `border`.\n\n**Syntax**: `<line-style>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              borderLeftWidth: {
                description:
                  'The **`border-left-width`** CSS property sets the width of the left border of an element.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              borderRightColor: {
                description:
                  "The **`border-right-color`** CSS property sets the color of an element's right border. It can also be set with the shorthand CSS properties `border-color` or `border-right`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderRightStyle: {
                description:
                  "The **`border-right-style`** CSS property sets the line style of an element's right `border`.\n\n**Syntax**: `<line-style>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              borderRightWidth: {
                description:
                  'The **`border-right-width`** CSS property sets the width of the right border of an element.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              borderSpacing: {
                description:
                  'The **`border-spacing`** CSS property sets the distance between the borders of adjacent `<table>` cells. This property applies only when `border-collapse` is `separate`.\n\n**Syntax**: `<length> <length>?`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **8** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderStartEndRadius: {
                description:
                  "The **`border-start-end-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **89** | **66**  |   No   |  No  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderStartStartRadius: {
                description:
                  "The **`border-start-start-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **89** | **66**  |   No   |  No  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderTopColor: {
                description:
                  "The **`border-top-color`** CSS property sets the color of an element's top border. It can also be set with the shorthand CSS properties `border-color` or `border-top`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderTopLeftRadius: {
                description:
                  'The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **4**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderTopRightRadius: {
                description:
                  'The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **4**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderTopStyle: {
                description:
                  "The **`border-top-style`** CSS property sets the line style of an element's top `border`.\n\n**Syntax**: `<line-style>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              borderTopWidth: {
                description:
                  'The **`border-top-width`** CSS property sets the width of the top border of an element.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              bottom: {
                description:
                  'The **`bottom`** CSS property participates in setting the vertical position of a positioned element. It has no effect on non-positioned elements.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **5** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              boxDecorationBreak: {
                description:
                  "The **`box-decoration-break`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.\n\n**Syntax**: `slice | clone`\n\n**Initial value**: `slice`\n\n|    Chrome    | Firefox |    Safari     |     Edge     | IE  |\n| :----------: | :-----: | :-----------: | :----------: | :-: |\n| **22** _-x-_ | **32**  | **6.1** _-x-_ | **79** _-x-_ | No  |",
                enum: [
                  '-moz-initial',
                  'clone',
                  'inherit',
                  'initial',
                  'revert',
                  'slice',
                  'unset',
                ],
                type: 'string',
              },
              boxShadow: {
                description:
                  "The **`box-shadow`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n\n**Syntax**: `none | <shadow>#`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n| **10**  |  **4**  | **5.1** | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              boxSizing: {
                description:
                  'The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n\n**Syntax**: `content-box | border-box`\n\n**Initial value**: `content-box`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n| **10**  | **29**  | **5.1** | **12** | **8** |\n| 1 _-x-_ | 1 _-x-_ | 3 _-x-_ |        |       |',
                enum: [
                  '-moz-initial',
                  'border-box',
                  'content-box',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              breakAfter: {
                description:
                  'The **`break-after`** CSS property sets how page, column, or region breaks should behave after a generated box. If there is no generated box, the property is ignored.\n\n**Syntax**: `auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region`\n\n**Initial value**: `auto`\n\n---\n\n_Supported in Multi-column Layout_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  |   No   | **12** | **10** |\n\n---\n\n_Supported in Paged Media_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  | **10** | **12** | **10** |\n\n---',
                enum: [
                  '-moz-initial',
                  'all',
                  'always',
                  'auto',
                  'avoid',
                  'avoid-column',
                  'avoid-page',
                  'avoid-region',
                  'column',
                  'inherit',
                  'initial',
                  'left',
                  'page',
                  'recto',
                  'region',
                  'revert',
                  'right',
                  'unset',
                  'verso',
                ],
                type: 'string',
              },
              breakBefore: {
                description:
                  'The **`break-before`** CSS property sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored.\n\n**Syntax**: `auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region`\n\n**Initial value**: `auto`\n\n---\n\n_Supported in Multi-column Layout_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  |   No   | **12** | **10** |\n\n---\n\n_Supported in Paged Media_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  | **10** | **12** | **10** |\n\n---',
                enum: [
                  '-moz-initial',
                  'all',
                  'always',
                  'auto',
                  'avoid',
                  'avoid-column',
                  'avoid-page',
                  'avoid-region',
                  'column',
                  'inherit',
                  'initial',
                  'left',
                  'page',
                  'recto',
                  'region',
                  'revert',
                  'right',
                  'unset',
                  'verso',
                ],
                type: 'string',
              },
              breakInside: {
                description:
                  'The **`break-inside`** CSS property sets how page, column, or region breaks should behave inside a generated box. If there is no generated box, the property is ignored.\n\n**Syntax**: `auto | avoid | avoid-page | avoid-column | avoid-region`\n\n**Initial value**: `auto`\n\n---\n\n_Supported in Multi-column Layout_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  | **10** | **12** | **10** |\n\n---\n\n_Supported in Paged Media_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **50** | **65**  | **10** | **12** | **10** |\n\n---',
                enum: [
                  '-moz-initial',
                  'auto',
                  'avoid',
                  'avoid-column',
                  'avoid-page',
                  'avoid-region',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              captionSide: {
                description:
                  "The **`caption-side`** CSS property puts the content of a table's `<caption>` on the specified side. The values are relative to the `writing-mode` of the table.\n\n**Syntax**: `top | bottom | block-start | block-end | inline-start | inline-end`\n\n**Initial value**: `top`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **8** |",
                enum: [
                  '-moz-initial',
                  'block-end',
                  'block-start',
                  'bottom',
                  'inherit',
                  'initial',
                  'inline-end',
                  'inline-start',
                  'revert',
                  'top',
                  'unset',
                ],
                type: 'string',
              },
              caretColor: {
                description:
                  'The **`caret-color`** CSS property sets the color of the **insertion caret**, the visible marker where the next character typed will be inserted. This is sometimes referred to as the **text input cursor**. The caret appears in elements such as `<input>` or those with the `contenteditable` attribute. The caret is typically a thin vertical line that flashes to help make it more noticeable. By default, it is black, but its color can be altered with this property.\n\n**Syntax**: `auto | <color>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **53**  | **11.1** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'auto',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              clear: {
                description:
                  'The **`clear`** CSS property sets whether an element must be moved below (cleared) floating elements that precede it. The `clear` property applies to floating and non-floating elements.\n\n**Syntax**: `none | left | right | both | inline-start | inline-end`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                enum: [
                  '-moz-initial',
                  'both',
                  'inherit',
                  'initial',
                  'inline-end',
                  'inline-start',
                  'left',
                  'none',
                  'revert',
                  'right',
                  'unset',
                ],
                type: 'string',
              },
              clipPath: {
                description:
                  'The `**clip-path**` CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.\n\n**Syntax**: `<clip-source> | [ <basic-shape> || <geometry-box> ] | none`\n\n**Initial value**: `none`\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **55**  | **3.5** |  **9.1**  | **12** | **10** |\n| 23 _-x-_ |         | 6.1 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'fill-box',
                      'inherit',
                      'initial',
                      'margin-box',
                      'none',
                      'padding-box',
                      'revert',
                      'stroke-box',
                      'unset',
                      'view-box',
                    ],
                    type: 'string',
                  },
                ],
              },
              color: {
                description:
                  "The **`color`** CSS property sets the foreground color value of an element's text and text decorations, and sets the `<currentcolor>` value. `currentcolor` may be used as an indirect value on _other_ properties and is the default for other color properties, such as `border-color`.\n\n**Syntax**: `<color>`\n\n**Initial value**: Varies from one browser to another\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              colorAdjust: {
                description:
                  "The **`color-adjust`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device.\n\n**Syntax**: `economy | exact`\n\n**Initial value**: `economy`\n\n|                Chrome                 | Firefox |                Safari                |                 Edge                  | IE  |\n| :-----------------------------------: | :-----: | :----------------------------------: | :-----------------------------------: | :-: |\n| **49** _(-webkit-print-color-adjust)_ | **48**  | **6** _(-webkit-print-color-adjust)_ | **79** _(-webkit-print-color-adjust)_ | No  |",
                enum: [
                  '-moz-initial',
                  'economy',
                  'exact',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              columnCount: {
                description:
                  "The **`column-count`** CSS property breaks an element's content into the specified number of columns.\n\n**Syntax**: `<integer> | auto`\n\n**Initial value**: `auto`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              columnFill: {
                description:
                  "The **`column-fill`** CSS property controls how an element's contents are balanced when broken into columns.\n\n**Syntax**: `auto | balance | balance-all`\n\n**Initial value**: `balance`\n\n| Chrome | Firefox | Safari  |  Edge  |   IE   |\n| :----: | :-----: | :-----: | :----: | :----: |\n| **50** | **52**  |  **9**  | **12** | **10** |\n|        |         | 8 _-x-_ |        |        |",
                enum: [
                  '-moz-initial',
                  'auto',
                  'balance',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              columnGap: {
                description:
                  "The **`column-gap`** CSS property sets the size of the gap (gutter) between an element's columns.\n\n**Syntax**: `normal | <length-percentage>`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **84** | **63**  |   No   | **84** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n|         Chrome         |        Firefox         |          Safari          |  Edge  | IE  |\n| :--------------------: | :--------------------: | :----------------------: | :----: | :-: |\n|         **66**         |         **61**         |         **12.1**         | **16** | No  |\n| 57 _(grid-column-gap)_ | 52 _(grid-column-gap)_ | 10.1 _(grid-column-gap)_ |        |     |\n\n---\n\n_Supported in Multi-column Layout_\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  | **10**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |\n\n---",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              columnRuleColor: {
                description:
                  'The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              columnRuleStyle: {
                description:
                  "The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-style'>`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'dashed',
                      'dotted',
                      'double',
                      'groove',
                      'hidden',
                      'inherit',
                      'initial',
                      'inset',
                      'none',
                      'outset',
                      'revert',
                      'ridge',
                      'solid',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              columnRuleWidth: {
                description:
                  "The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-width'>`\n\n**Initial value**: `medium`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              columnSpan: {
                description:
                  'The **`column-span`** CSS property makes it possible for an element to span across all columns when its value is set to `all`.\n\n**Syntax**: `none | all`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :-----: | :-----: | :-------: | :----: | :----: |\n| **50**  | **71**  |   **9**   | **12** | **10** |\n| 6 _-x-_ |         | 5.1 _-x-_ |        |        |',
                enum: [
                  '-moz-initial',
                  'all',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              columnWidth: {
                description:
                  "The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.\n\n**Syntax**: `<length> | auto`\n\n**Initial value**: `auto`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **50**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              contain: {
                description:
                  'The **`contain`** CSS property allows an author to indicate that an element and its contents are, as much as possible, _independent_ of the rest of the document tree. This allows the browser to recalculate layout, style, paint, size, or any combination of them for a limited area of the DOM and not the entire page, leading to obvious performance benefits.\n\n**Syntax**: `none | strict | content | [ size || layout || style || paint ]`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **52** | **69**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'content',
                      'inherit',
                      'initial',
                      'layout',
                      'none',
                      'paint',
                      'revert',
                      'size',
                      'strict',
                      'style',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              content: {
                description:
                  'The **`content`** CSS property replaces an element with a generated value. Objects inserted using the `content` property are **anonymous replaced elements**_._\n\n**Syntax**: `normal | none | [ <content-replacement> | <content-list> ] [/ <string> ]?`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **8** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'close-quote',
                      'contents',
                      'inherit',
                      'initial',
                      'no-close-quote',
                      'no-open-quote',
                      'none',
                      'normal',
                      'open-quote',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              contentVisibility: {
                description:
                  "The **`content-visibility`** CSS property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. Basically it enables the user agent to skip an element's rendering work, including layout and painting, until it is needed, makes the initial page load much faster.\n\n**Syntax**: `visible | auto | hidden`\n\n**Initial value**: `visible`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **85** |   No    |   No   | **85** | No  |",
                enum: [
                  '-moz-initial',
                  'auto',
                  'hidden',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                  'visible',
                ],
                type: 'string',
              },
              counterIncrement: {
                description:
                  'The **`counter-increment`** CSS property increases or decreases the value of a CSS counter by a given value.\n\n**Syntax**: `[ <custom-ident> <integer>? ]+ | none`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **2**  |  **1**  | **3**  | **12** | **8** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              counterReset: {
                description:
                  'The **`counter-reset`** CSS property resets a CSS counter to a given value.\n\n**Syntax**: `[ <custom-ident> <integer>? ]+ | none`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **2**  |  **1**  | **3**  | **12** | **8** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              counterSet: {
                description:
                  "The **`counter-set`** CSS property sets a CSS counter to a given value. It manipulates the value of existing counters, and will only create new counters if there isn't already a counter of the given name on the element.\n\n**Syntax**: `[ <custom-ident> <integer>? ]+ | none`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **85** | **68**  |   No   | **85** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              cursor: {
                description:
                  'The **`cursor`** CSS property sets the type of mouse cursor, if any, to show when the mouse pointer is over an element.\n\n**Syntax**: `[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **1**  | **1.2** | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-grab',
                      '-moz-initial',
                      '-webkit-grab',
                      'alias',
                      'all-scroll',
                      'auto',
                      'cell',
                      'col-resize',
                      'context-menu',
                      'copy',
                      'crosshair',
                      'default',
                      'e-resize',
                      'ew-resize',
                      'grab',
                      'grabbing',
                      'help',
                      'inherit',
                      'initial',
                      'move',
                      'n-resize',
                      'ne-resize',
                      'nesw-resize',
                      'no-drop',
                      'none',
                      'not-allowed',
                      'ns-resize',
                      'nw-resize',
                      'nwse-resize',
                      'pointer',
                      'progress',
                      'revert',
                      'row-resize',
                      's-resize',
                      'se-resize',
                      'sw-resize',
                      'text',
                      'unset',
                      'vertical-text',
                      'w-resize',
                      'wait',
                      'zoom-in',
                      'zoom-out',
                    ],
                    type: 'string',
                  },
                ],
              },
              direction: {
                description:
                  'The **`direction`** CSS property sets the direction of text, table columns, and horizontal overflow. Use `rtl` for languages written from right to left (like Hebrew or Arabic), and `ltr` for those written from left to right (like English and most other languages).\n\n**Syntax**: `ltr | rtl`\n\n**Initial value**: `ltr`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **2**  |  **1**  | **1**  | **12** | **5.5** |',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'ltr',
                  'revert',
                  'rtl',
                  'unset',
                ],
                type: 'string',
              },
              display: {
                description:
                  'The **`display`** CSS property sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.\n\n**Syntax**: `[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>`\n\n**Initial value**: `inline`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-ms-flexbox',
                      '-ms-grid',
                      '-ms-inline-flexbox',
                      '-ms-inline-grid',
                      '-webkit-flex',
                      '-webkit-inline-flex',
                      'block',
                      'contents',
                      'flex',
                      'flow',
                      'flow-root',
                      'grid',
                      'inherit',
                      'initial',
                      'inline',
                      'inline-block',
                      'inline-flex',
                      'inline-grid',
                      'inline-list-item',
                      'inline-table',
                      'list-item',
                      'none',
                      'revert',
                      'ruby',
                      'ruby-base',
                      'ruby-base-container',
                      'ruby-text',
                      'ruby-text-container',
                      'run-in',
                      'table',
                      'table-caption',
                      'table-cell',
                      'table-column',
                      'table-column-group',
                      'table-footer-group',
                      'table-header-group',
                      'table-row',
                      'table-row-group',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              emptyCells: {
                description:
                  'The **`empty-cells`** CSS property sets whether borders and backgrounds appear around `<table>` cells that have no visible content.\n\n**Syntax**: `show | hide`\n\n**Initial value**: `show`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **1**  | **1.2** | **12** | **8** |',
                enum: [
                  '-moz-initial',
                  'hide',
                  'inherit',
                  'initial',
                  'revert',
                  'show',
                  'unset',
                ],
                type: 'string',
              },
              filter: {
                description:
                  'The **`filter`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.\n\n**Syntax**: `none | <filter-function-list>`\n\n**Initial value**: `none`\n\n|  Chrome  | Firefox | Safari  |  Edge  | IE  |\n| :------: | :-----: | :-----: | :----: | :-: |\n|  **53**  | **35**  | **9.1** | **12** | No  |\n| 18 _-x-_ |         | 6 _-x-_ |        |     |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              flexBasis: {
                description:
                  "The **`flex-basis`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with `box-sizing`.\n\n**Syntax**: `content | <'width'>`\n\n**Initial value**: `auto`\n\n|  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :------: | :-----: | :-----: | :----: | :----: |\n|  **29**  | **22**  |  **9**  | **12** | **11** |\n| 22 _-x-_ |         | 7 _-x-_ |        |        |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      '-webkit-auto',
                      0,
                      'auto',
                      'content',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              flexDirection: {
                description:
                  'The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n\n**Syntax**: `row | row-reverse | column | column-reverse`\n\n**Initial value**: `row`\n\n|  Chrome  | Firefox | Safari  |  Edge  |    IE    |\n| :------: | :-----: | :-----: | :----: | :------: |\n|  **29**  | **20**  |  **9**  | **12** |  **11**  |\n| 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |',
                enum: [
                  '-moz-initial',
                  'column',
                  'column-reverse',
                  'inherit',
                  'initial',
                  'revert',
                  'row',
                  'row-reverse',
                  'unset',
                ],
                type: 'string',
              },
              flexGrow: {
                description:
                  'The **`flex-grow`** CSS property sets the flex grow factor of a flex item main size.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`\n\n|  Chrome  | Firefox |  Safari   |  Edge  |            IE            |\n| :------: | :-----: | :-------: | :----: | :----------------------: |\n|  **29**  | **20**  |   **9**   | **12** |          **11**          |\n| 22 _-x-_ |         | 6.1 _-x-_ |        | 10 _(-ms-flex-positive)_ |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              flexShrink: {
                description:
                  'The **`flex-shrink`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to `flex-shrink`.\n\n**Syntax**: `<number>`\n\n**Initial value**: `1`\n\n|  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :------: | :-----: | :-----: | :----: | :----: |\n|  **29**  | **20**  |  **9**  | **12** | **10** |\n| 22 _-x-_ |         | 8 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              flexWrap: {
                description:
                  'The **`flex-wrap`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.\n\n**Syntax**: `nowrap | wrap | wrap-reverse`\n\n**Initial value**: `nowrap`\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **29**  | **28**  |   **9**   | **12** | **11** |\n| 21 _-x-_ |         | 6.1 _-x-_ |        |        |',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'nowrap',
                  'revert',
                  'unset',
                  'wrap',
                  'wrap-reverse',
                ],
                type: 'string',
              },
              float: {
                description:
                  'The **`float`** CSS property places an element on the left or right side of its container, allowing text and inline elements to wrap around it. The element is removed from the normal flow of the page, though still remaining a part of the flow (in contrast to absolute positioning).\n\n**Syntax**: `left | right | none | inline-start | inline-end`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'inline-end',
                  'inline-start',
                  'left',
                  'none',
                  'revert',
                  'right',
                  'unset',
                ],
                type: 'string',
              },
              fontFamily: {
                description:
                  'The **`font-family`** CSS property specifies a prioritized list of one or more font family names and/or generic family names for the selected element.\n\n**Syntax**: `[ <family-name> | <generic-family> ]#`\n\n**Initial value**: depends on user agent\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'cursive',
                      'fantasy',
                      'inherit',
                      'initial',
                      'monospace',
                      'revert',
                      'sans-serif',
                      'serif',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontFeatureSettings: {
                description:
                  'The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n\n**Syntax**: `normal | <feature-tag-value>#`\n\n**Initial value**: `normal`\n\n|  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n| :------: | :------: | :-----: | :----: | :----: |\n|  **48**  |  **34**  | **9.1** | **15** | **10** |\n| 16 _-x-_ | 15 _-x-_ |         |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontKerning: {
                description:
                  'The **`font-kerning`** CSS property sets the use of the kerning information stored in a font.\n\n**Syntax**: `auto | normal | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **33** | **32**  |  **9**  | **79** | No  |\n|        |         | 6 _-x-_ |        |     |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'none',
                  'normal',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              fontLanguageOverride: {
                description:
                  'The **`font-language-override`** CSS property controls the use of language-specific glyphs in a typeface.\n\n**Syntax**: `normal | <string>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **34**  |   No   |  No  | No  |\n|        | 4 _-x-_ |        |      |     |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontOpticalSizing: {
                description:
                  'The **`font-optical-sizing`** CSS property sets whether text rendering is optimized for viewing at different sizes.\n\n**Syntax**: `auto | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **79** | **62**  | **11** | **17** | No  |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              fontSize: {
                description:
                  'The **`font-size`** CSS property sets the size of the font. Changing the font size also updates the sizes of the font size-relative `<length>` units, such as `em`, `ex`, and so forth.\n\n**Syntax**: `<absolute-size> | <relative-size> | <length-percentage>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'large',
                      'larger',
                      'medium',
                      'revert',
                      'small',
                      'smaller',
                      'unset',
                      'x-large',
                      'x-small',
                      'xx-large',
                      'xx-small',
                      'xxx-large',
                    ],
                  },
                ],
              },
              fontSizeAdjust: {
                description:
                  'The **`font-size-adjust`** CSS property sets the size of lower-case letters relative to the current font size (which defines the size of upper-case letters).\n\n**Syntax**: `none | <number>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|  n/a   |  **1**  |   No   | n/a  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontSmooth: {
                description:
                  'The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n\n**Syntax**: `auto | never | always | <absolute-size> | <length>`\n\n**Initial value**: `auto`\n\n|              Chrome              |              Firefox               |              Safari              |               Edge                | IE  |\n| :------------------------------: | :--------------------------------: | :------------------------------: | :-------------------------------: | :-: |\n| **5** _(-webkit-font-smoothing)_ | **25** _(-moz-osx-font-smoothing)_ | **4** _(-webkit-font-smoothing)_ | **79** _(-webkit-font-smoothing)_ | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'always',
                      'auto',
                      'inherit',
                      'initial',
                      'large',
                      'medium',
                      'never',
                      'revert',
                      'small',
                      'unset',
                      'x-large',
                      'x-small',
                      'xx-large',
                      'xx-small',
                      'xxx-large',
                    ],
                  },
                ],
              },
              fontStretch: {
                description:
                  'The **`font-stretch`** CSS property selects a normal, condensed, or expanded face from a font.\n\n**Syntax**: `<font-stretch-absolute>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **60** |  **9**  | **11** | **12** | **9** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'condensed',
                      'expanded',
                      'extra-condensed',
                      'extra-expanded',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'semi-condensed',
                      'semi-expanded',
                      'ultra-condensed',
                      'ultra-expanded',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontStyle: {
                description:
                  'The **`font-style`** CSS property sets whether a font should be styled with a normal, italic, or oblique face from its `font-family`.\n\n**Syntax**: `normal | italic | oblique <angle>?`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'italic',
                      'normal',
                      'oblique',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontSynthesis: {
                description:
                  'The **`font-synthesis`** CSS property controls which missing typefaces, bold or italic, may be synthesized by the browser.\n\n**Syntax**: `none | [ weight || style ]`\n\n**Initial value**: `weight style`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **34**  | **9**  |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'style',
                      'unset',
                      'weight',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontVariant: {
                description:
                  'The **`font-variant`** CSS shorthand property allows you to set all the font variants for a font.\n\n**Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'all-petite-caps',
                      'all-small-caps',
                      'common-ligatures',
                      'contextual',
                      'diagonal-fractions',
                      'discretionary-ligatures',
                      'full-width',
                      'historical-forms',
                      'historical-ligatures',
                      'inherit',
                      'initial',
                      'jis04',
                      'jis78',
                      'jis83',
                      'jis90',
                      'lining-nums',
                      'no-common-ligatures',
                      'no-contextual',
                      'no-discretionary-ligatures',
                      'no-historical-ligatures',
                      'none',
                      'normal',
                      'oldstyle-nums',
                      'ordinal',
                      'petite-caps',
                      'proportional-nums',
                      'proportional-width',
                      'revert',
                      'ruby',
                      'simplified',
                      'slashed-zero',
                      'small-caps',
                      'stacked-fractions',
                      'tabular-nums',
                      'titling-caps',
                      'traditional',
                      'unicase',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontVariantCaps: {
                description:
                  'The **`font-variant-caps`** CSS property controls the use of alternate glyphs for capital letters.\n\n**Syntax**: `normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **52** | **34**  |   No   | **79** | No  |',
                enum: [
                  '-moz-initial',
                  'all-petite-caps',
                  'all-small-caps',
                  'inherit',
                  'initial',
                  'normal',
                  'petite-caps',
                  'revert',
                  'small-caps',
                  'titling-caps',
                  'unicase',
                  'unset',
                ],
                type: 'string',
              },
              fontVariantEastAsian: {
                description:
                  'The **`font-variant-east-asian`** CSS property controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese.\n\n**Syntax**: `normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **63** | **34**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'full-width',
                      'inherit',
                      'initial',
                      'jis04',
                      'jis78',
                      'jis83',
                      'jis90',
                      'normal',
                      'proportional-width',
                      'revert',
                      'ruby',
                      'simplified',
                      'traditional',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontVariantLigatures: {
                description:
                  'The **`font-variant-ligatures`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.\n\n**Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]`\n\n**Initial value**: `normal`\n\n|  Chrome  | Firefox | Safari  |  Edge  | IE  |\n| :------: | :-----: | :-----: | :----: | :-: |\n|  **34**  | **34**  | **9.1** | **79** | No  |\n| 31 _-x-_ |         | 7 _-x-_ |        |     |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'common-ligatures',
                      'contextual',
                      'discretionary-ligatures',
                      'historical-ligatures',
                      'inherit',
                      'initial',
                      'no-common-ligatures',
                      'no-contextual',
                      'no-discretionary-ligatures',
                      'no-historical-ligatures',
                      'none',
                      'normal',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontVariantNumeric: {
                description:
                  'The **`font-variant-numeric`** CSS property controls the usage of alternate glyphs for numbers, fractions, and ordinal markers.\n\n**Syntax**: `normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **52** | **34**  | **9.1** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'diagonal-fractions',
                      'inherit',
                      'initial',
                      'lining-nums',
                      'normal',
                      'oldstyle-nums',
                      'ordinal',
                      'proportional-nums',
                      'revert',
                      'slashed-zero',
                      'stacked-fractions',
                      'tabular-nums',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontVariantPosition: {
                description:
                  'The **`font-variant-position`** CSS property controls the use of alternate, smaller glyphs that are positioned as superscript or subscript.\n\n**Syntax**: `normal | sub | super`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **34**  |   No   |  No  | No  |',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'normal',
                  'revert',
                  'sub',
                  'super',
                  'unset',
                ],
                type: 'string',
              },
              fontVariationSettings: {
                description:
                  'The **`font-variation-settings`** CSS property provides low-level control over variable font characteristics, by specifying the four letter axis names of the characteristics you want to vary, along with their values.\n\n**Syntax**: `normal | [ <string> <number> ]#`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **62** | **62**  | **11** | **17** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontWeight: {
                description:
                  'The **`font-weight`** CSS property sets the weight (or boldness) of the font. The weights available depend on the `font-family` that is currently set.\n\n**Syntax**: `<font-weight-absolute> | bolder | lighter`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **2**  |  **1**  | **1**  | **12** | **3** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'bold',
                      'bolder',
                      'inherit',
                      'initial',
                      'lighter',
                      'normal',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              forcedColorAdjust: {
                description:
                  'The **`forced-color-adjust`** CSS property allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS.\n\n**Syntax**: `auto | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |                Edge                 |                 IE                  |\n| :----: | :-----: | :----: | :---------------------------------: | :---------------------------------: |\n|  n/a   |   No    |   No   | **79** _(-ms-high-contrast-adjust)_ | **10** _(-ms-high-contrast-adjust)_ |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              gridAutoColumns: {
                description:
                  'The **`grid-auto-columns`** CSS property specifies the size of an implicitly-created grid column track or pattern of tracks.\n\n**Syntax**: `<track-size>+`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |          Edge           |             IE              |\n| :----: | :-----: | :------: | :---------------------: | :-------------------------: |\n| **57** | **70**  | **10.1** |         **16**          | **10** _(-ms-grid-columns)_ |\n|        |         |          | 12 _(-ms-grid-columns)_ |                             |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              gridAutoFlow: {
                description:
                  'The **`grid-auto-flow`** CSS property controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.\n\n**Syntax**: `[ row | column ] || dense`\n\n**Initial value**: `row`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'column',
                      'dense',
                      'inherit',
                      'initial',
                      'revert',
                      'row',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gridAutoRows: {
                description:
                  'The **`grid-auto-rows`** CSS property specifies the size of an implicitly-created grid row track or pattern of tracks.\n\n**Syntax**: `<track-size>+`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |         Edge         |            IE            |\n| :----: | :-----: | :------: | :------------------: | :----------------------: |\n| **57** | **70**  | **10.1** |        **16**        | **10** _(-ms-grid-rows)_ |\n|        |         |          | 12 _(-ms-grid-rows)_ |                          |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              gridColumnEnd: {
                description:
                  'The **`grid-column-end`** CSS property specifies a grid item’s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.\n\n**Syntax**: `<grid-line>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gridColumnStart: {
                description:
                  'The **`grid-column-start`** CSS property specifies a grid item’s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.\n\n**Syntax**: `<grid-line>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gridRowEnd: {
                description:
                  'The **`grid-row-end`** CSS property specifies a grid item’s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.\n\n**Syntax**: `<grid-line>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gridRowStart: {
                description:
                  'The **`grid-row-start`** CSS property specifies a grid item’s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.\n\n**Syntax**: `<grid-line>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gridTemplateAreas: {
                description:
                  'The **`grid-template-areas`** CSS property specifies named grid areas, establishing the cells in the grid and assigning them names.\n\n**Syntax**: `none | <string>+`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gridTemplateColumns: {
                description:
                  'The **`grid-template-columns`** CSS property defines the line names and track sizing functions of the grid columns.\n\n**Syntax**: `none | <track-list> | <auto-track-list> | subgrid <line-name-list>?`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  |             IE              |\n| :----: | :-----: | :------: | :----: | :-------------------------: |\n| **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-columns)_ |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'subgrid',
                      'unset',
                    ],
                  },
                ],
              },
              gridTemplateRows: {
                description:
                  'The **`grid-template-rows`** CSS property defines the line names and track sizing functions of the grid rows.\n\n**Syntax**: `none | <track-list> | <auto-track-list> | subgrid <line-name-list>?`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  |            IE            |\n| :----: | :-----: | :------: | :----: | :----------------------: |\n| **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-rows)_ |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'subgrid',
                      'unset',
                    ],
                  },
                ],
              },
              hangingPunctuation: {
                description:
                  'The **`hanging-punctuation`** CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box.\n\n**Syntax**: `none | [ first || [ force-end | allow-end ] || last ]`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   |   No    | **10** |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'allow-end',
                      'first',
                      'force-end',
                      'inherit',
                      'initial',
                      'last',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              height: {
                description:
                  'The **`height`** CSS property specifies the height of an element. By default, the property defines the height of the content area. If `box-sizing` is set to `border-box`, however, it instead determines the height of the border area.\n\n**Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              hyphens: {
                description:
                  'The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n\n**Syntax**: `none | manual | auto`\n\n**Initial value**: `manual`\n\n|  Chrome  | Firefox |    Safari     |     Edge     |      IE      |\n| :------: | :-----: | :-----------: | :----------: | :----------: |\n|  **55**  | **43**  | **5.1** _-x-_ | **12** _-x-_ | **10** _-x-_ |\n| 13 _-x-_ | 6 _-x-_ |               |              |              |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'manual',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              imageOrientation: {
                description:
                  'The **`image-orientation`** CSS property specifies a layout-independent correction to the orientation of an image. It should _not_ be used for any other orientation adjustments; instead, the `transform` property should be used with the `rotate` `<transform-function>`.\n\n**Syntax**: `from-image | <angle> | [ <angle>? flip ]`\n\n**Initial value**: `from-image`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **81** | **26**  | **13.1** | **81** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'flip',
                      'from-image',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              imageRendering: {
                description:
                  'The **`image-rendering`** CSS property sets an image scaling algorithm. The property applies to an element itself, to any images set in its other properties, and to its descendants.\n\n**Syntax**: `auto | crisp-edges | pixelated`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **13** | **3.6** | **6**  | **79** | No  |',
                enum: [
                  '-moz-crisp-edges',
                  '-moz-initial',
                  '-webkit-optimize-contrast',
                  'auto',
                  'crisp-edges',
                  'inherit',
                  'initial',
                  'pixelated',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              imageResolution: {
                description:
                  '**Syntax**: `[ from-image || <resolution> ] && snap?`\n\n**Initial value**: `1dppx`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'from-image',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              initialLetter: {
                description:
                  'The `initial-letter` CSS property sets styling for dropped, raised, and sunken initial letters.\n\n**Syntax**: `normal | [ <number> <integer>? ]`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   |   No    | **9**  |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              inlineSize: {
                description:
                  "The **`inline-size`** CSS property defines the horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the `width` or the `height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'width'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              inset: {
                description:
                  "The **`inset`** CSS property is a shorthand that corresponds to the `top`, `right`, `bottom`, and/or `left` properties. It has the same multi-value syntax of the `margin` shorthand.\n\n**Syntax**: `<'top'>{1,4}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              insetBlock: {
                description:
                  "The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>{1,2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              insetBlockEnd: {
                description:
                  "The **`inset-block-end`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              insetBlockStart: {
                description:
                  "The **`inset-block-start`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              insetInline: {
                description:
                  "The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>{1,2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              insetInlineEnd: {
                description:
                  "The **`inset-inline-end`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              insetInlineStart: {
                description:
                  "The **`inset-inline-start`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **63**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              isolation: {
                description:
                  'The **`isolation`** CSS property determines whether an element must create a new stacking context.\n\n**Syntax**: `auto | isolate`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **41** | **36**  | **8**  | **79** | No  |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'isolate',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              justifyContent: {
                description:
                  'The CSS **`justify-content`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.\n\n**Syntax**: `normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **52**  | **20**  |   **9**   | **12** | **11** |\n| 21 _-x-_ |         | 6.1 _-x-_ |        |        |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |\n\n---',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'left',
                      'normal',
                      'revert',
                      'right',
                      'space-around',
                      'space-between',
                      'space-evenly',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              justifyItems: {
                description:
                  'The CSS **`justify-items`** property defines the default `justify-self` for all items of the box, giving them all a default way of justifying each box along the appropriate axis.\n\n**Syntax**: `normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]`\n\n**Initial value**: `legacy`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **52** | **20**  | **9**  | **12** | **11** |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **45**  | **10.1** | **16** | No  |\n\n---',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'left',
                      'legacy',
                      'normal',
                      'revert',
                      'right',
                      'self-end',
                      'self-start',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              justifySelf: {
                description:
                  'The CSS **`justify-self`** property sets the way a box is justified inside its alignment container along the appropriate axis.\n\n**Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]`\n\n**Initial value**: `auto`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **45**  | **10.1** | **16** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox |  Safari  |  Edge  |      IE      |\n| :----: | :-----: | :------: | :----: | :----------: |\n| **57** | **45**  | **10.1** | **16** | **10** _-x-_ |\n\n---',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'left',
                      'normal',
                      'revert',
                      'right',
                      'self-end',
                      'self-start',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              justifyTracks: {
                description:
                  'The **`justify-tracks`** CSS property sets the alignment in the masonry axis for grid containers that have masonry in their inline axis.\n\n**Syntax**: `[ normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ] ]#`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   |   n/a   |   No   |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'left',
                      'normal',
                      'revert',
                      'right',
                      'space-around',
                      'space-between',
                      'space-evenly',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              left: {
                description:
                  'The **`left`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              letterSpacing: {
                description:
                  'The **`letter-spacing`** CSS property sets the horizontal spacing behavior between text characters. This value is added to the natural spacing between characters while rendering the text. Positive values of `letter-spacing` causes characters to spread farther apart, while negative values of `letter-spacing` bring characters closer together.\n\n**Syntax**: `normal | <length>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              lineBreak: {
                description:
                  'The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n\n**Syntax**: `auto | loose | normal | strict | anywhere`\n\n**Initial value**: `auto`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE    |\n| :-----: | :-----: | :-----: | :----: | :-----: |\n| **58**  | **69**  | **11**  | **14** | **5.5** |\n| 1 _-x-_ |         | 3 _-x-_ |        |         |',
                enum: [
                  '-moz-initial',
                  'anywhere',
                  'auto',
                  'inherit',
                  'initial',
                  'loose',
                  'normal',
                  'revert',
                  'strict',
                  'unset',
                ],
                type: 'string',
              },
              lineHeight: {
                description:
                  "The **`line-height`** CSS property sets the height of a line box. It's commonly used to set the distance between lines of text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced inline elements, it specifies the height that is used to calculate line box height.\n\n**Syntax**: `normal | <number> | <length> | <percentage>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              lineHeightStep: {
                description:
                  'The **`line-height-step`** CSS property sets the step unit for line box heights. When the property is set, line box heights are rounded up to the closest multiple of the unit.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|  n/a   |   No    |   No   | n/a  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              listStyleImage: {
                description:
                  'The **`list-style-image`** CSS property sets an image to be used as the list item marker.\n\n**Syntax**: `<url> | none`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              listStylePosition: {
                description:
                  'The **`list-style-position`** CSS property sets the position of the `::marker` relative to a list item.\n\n**Syntax**: `inside | outside`\n\n**Initial value**: `outside`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'inside',
                  'outside',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              listStyleType: {
                description:
                  'The **`list-style-type`** CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element.\n\n**Syntax**: `<counter-style> | <string> | none`\n\n**Initial value**: `disc`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              marginBlock: {
                description:
                  "The **`margin-block`** CSS shorthand property defines the logical block start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'margin-left'>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              marginBlockEnd: {
                description:
                  "The **`margin-block-end`** CSS property defines the logical block end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              marginBlockStart: {
                description:
                  "The **`margin-block-start`** CSS property defines the logical block start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              marginBottom: {
                description:
                  'The **`margin-bottom`** CSS property sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              marginInline: {
                description:
                  "The **`margin-inline`** CSS shorthand property is a shorthand property that defines both the logical inline start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'margin-left'>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              marginInlineEnd: {
                description:
                  "The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`\n\n|          Chrome          |        Firefox        |          Safari          |  Edge  | IE  |\n| :----------------------: | :-------------------: | :----------------------: | :----: | :-: |\n|          **69**          |        **41**         |         **12.1**         | **79** | No  |\n| 2 _(-webkit-margin-end)_ | 3 _(-moz-margin-end)_ | 3 _(-webkit-margin-end)_ |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              marginInlineStart: {
                description:
                  "The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`\n\n|           Chrome           |         Firefox         |           Safari           |  Edge  | IE  |\n| :------------------------: | :---------------------: | :------------------------: | :----: | :-: |\n|           **69**           |         **41**          |          **12.1**          | **79** | No  |\n| 2 _(-webkit-margin-start)_ | 3 _(-moz-margin-start)_ | 3 _(-webkit-margin-start)_ |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              marginLeft: {
                description:
                  'The **`margin-left`** CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              marginRight: {
                description:
                  'The **`margin-right`** CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              marginTop: {
                description:
                  'The **`margin-top`** CSS property sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              maskBorderMode: {
                description:
                  'The **`mask-border-mode`** CSS property specifies the blending mode used in a mask border.\n\n**Syntax**: `luminance | alpha`\n\n**Initial value**: `alpha`',
                enum: [
                  '-moz-initial',
                  'alpha',
                  'inherit',
                  'initial',
                  'luminance',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              maskBorderOutset: {
                description:
                  "The **`mask-border-outset`** CSS property specifies the distance by which an element's mask border is set out from its border box.\n\n**Syntax**: `[ <length> | <number> ]{1,4}`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              maskBorderRepeat: {
                description:
                  "The **`mask-border-repeat`** CSS property sets how the edge regions of a source image are adjusted to fit the dimensions of an element's mask border.\n\n**Syntax**: `[ stretch | repeat | round | space ]{1,2}`\n\n**Initial value**: `stretch`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'repeat',
                      'revert',
                      'round',
                      'space',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              maskBorderSlice: {
                description:
                  "The **`mask-border-slice`** CSS property divides the image set by `mask-border-source` into regions. These regions are used to form the components of an element's mask border.\n\n**Syntax**: `<number-percentage>{1,4} fill?`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              maskBorderSource: {
                description:
                  "The **`mask-border-source`** CSS property sets the source image used to create an element's mask border.\n\n**Syntax**: `none | <image>`\n\n**Initial value**: `none`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              maskBorderWidth: {
                description:
                  "The **`mask-border-width`** CSS property sets the width of an element's mask border.\n\n**Syntax**: `[ <length-percentage> | <number> | auto ]{1,4}`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              maskClip: {
                description:
                  'The **`mask-clip`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.\n\n**Syntax**: `[ <geometry-box> | no-clip ]#`\n\n**Initial value**: `border-box`\n\n|   Chrome    | Firefox |   Safari    |     Edge     | IE  |\n| :---------: | :-----: | :---------: | :----------: | :-: |\n| **1** _-x-_ | **53**  | **4** _-x-_ | **79** _-x-_ | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'fill-box',
                      'inherit',
                      'initial',
                      'margin-box',
                      'no-clip',
                      'padding-box',
                      'revert',
                      'stroke-box',
                      'unset',
                      'view-box',
                    ],
                    type: 'string',
                  },
                ],
              },
              maskComposite: {
                description:
                  'The **`mask-composite`** CSS property represents a compositing operation used on the current mask layer with the mask layers below it.\n\n**Syntax**: `<compositing-operator>#`\n\n**Initial value**: `add`\n\n| Chrome | Firefox | Safari | Edge  | IE  |\n| :----: | :-----: | :----: | :---: | :-: |\n|   No   | **53**  |   No   | 18-79 | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'add',
                      'exclude',
                      'inherit',
                      'initial',
                      'intersect',
                      'revert',
                      'subtract',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              maskImage: {
                description:
                  'The **`mask-image`** CSS property sets the image that is used as mask layer for an element.\n\n**Syntax**: `<mask-reference>#`\n\n**Initial value**: `none`\n\n|   Chrome    | Firefox |   Safari    |  Edge  | IE  |\n| :---------: | :-----: | :---------: | :----: | :-: |\n| **1** _-x-_ | **53**  | **4** _-x-_ | **16** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              maskMode: {
                description:
                  'The **`mask-mode`** CSS property sets whether the mask reference defined by `mask-image` is treated as a luminance or alpha mask.\n\n**Syntax**: `<masking-mode>#`\n\n**Initial value**: `match-source`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **53**  |   No   |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'alpha',
                      'inherit',
                      'initial',
                      'luminance',
                      'match-source',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              maskOrigin: {
                description:
                  'The **`mask-origin`** CSS property sets the origin of a mask.\n\n**Syntax**: `<geometry-box>#`\n\n**Initial value**: `border-box`\n\n|   Chrome    | Firefox |   Safari    |     Edge     | IE  |\n| :---------: | :-----: | :---------: | :----------: | :-: |\n| **1** _-x-_ | **53**  | **4** _-x-_ | **79** _-x-_ | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'inherit',
                      'initial',
                      'margin-box',
                      'padding-box',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              maskPosition: {
                description:
                  'The **`mask-position`** CSS property sets the initial position, relative to the mask position layer set by `mask-origin`, for each defined mask image.\n\n**Syntax**: `<position>#`\n\n**Initial value**: `center`\n\n|   Chrome    | Firefox |    Safari     |  Edge  | IE  |\n| :---------: | :-----: | :-----------: | :----: | :-: |\n| **1** _-x-_ | **53**  | **3.2** _-x-_ | **18** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              maskRepeat: {
                description:
                  'The **`mask-repeat`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.\n\n**Syntax**: `<repeat-style>#`\n\n**Initial value**: `no-repeat`\n\n|   Chrome    | Firefox |    Safari     |  Edge  | IE  |\n| :---------: | :-----: | :-----------: | :----: | :-: |\n| **1** _-x-_ | **53**  | **3.2** _-x-_ | **18** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'no-repeat',
                      'repeat',
                      'repeat-x',
                      'repeat-y',
                      'revert',
                      'round',
                      'space',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              maskSize: {
                description:
                  'The **`mask-size`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto`\n\n|   Chrome    | Firefox |   Safari    |  Edge  | IE  |\n| :---------: | :-----: | :---------: | :----: | :-: |\n| **4** _-x-_ | **53**  | **4** _-x-_ | **18** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'contain',
                      'cover',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              maskType: {
                description:
                  'The **`mask-type`** CSS property sets whether an SVG `<mask>` element is used as a _luminance_ or an _alpha_ mask. It applies to the `<mask>` element itself.\n\n**Syntax**: `luminance | alpha`\n\n**Initial value**: `luminance`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **24** | **35**  | **6.1** | **79** | No  |',
                enum: [
                  '-moz-initial',
                  'alpha',
                  'inherit',
                  'initial',
                  'luminance',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              mathStyle: {
                description:
                  'The `math-style` property indicates whether MathML equations should render with normal or compact height.\n\n**Syntax**: `normal | compact`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|  n/a   |   n/a   |   No   |  No  | No  |',
                enum: [
                  '-moz-initial',
                  'compact',
                  'inherit',
                  'initial',
                  'normal',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              maxBlockSize: {
                description:
                  "The `**max-block-size**` CSS property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by `writing-mode`. That is, if the writing direction is horizontal, then `max-block-size` is equivalent to `max-height`; if the writing direction is vertical, `max-block-size` is the same as `max-width`.\n\n**Syntax**: `<'max-width'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      0,
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              maxHeight: {
                description:
                  'The **`max-height`** CSS property sets the maximum height of an element. It prevents the used value of the `height` property from becoming larger than the value specified for `max-height`.\n\n**Syntax**: `none | <length-percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **18** |  **1**  | **1.3** | **12** | **7** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      '-webkit-max-content',
                      '-webkit-min-content',
                      0,
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              maxInlineSize: {
                description:
                  "The **`max-inline-size`** CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the `max-width` or the `max-height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'max-width'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |   Safari   |  Edge  | IE  |\n| :----: | :-----: | :--------: | :----: | :-: |\n| **57** | **41**  |  **12.1**  | **79** | No  |\n|        |         | 10.1 _-x-_ |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      0,
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              maxLines: {
                description:
                  '**Syntax**: `none | <integer>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              maxWidth: {
                description:
                  'The **`max-width`** CSS property sets the maximum width of an element. It prevents the used value of the `width` property from becoming larger than the value specified by `max-width`.\n\n**Syntax**: `none | <length-percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **7** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      '-webkit-max-content',
                      '-webkit-min-content',
                      0,
                      'inherit',
                      'initial',
                      'intrinsic',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              minBlockSize: {
                description:
                  "The **`min-block-size`** CSS property defines the minimum horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the `min-width` or the `min-height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'min-width'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              minHeight: {
                description:
                  'The **`min-height`** CSS property sets the minimum height of an element. It prevents the used value of the `height` property from becoming smaller than the value specified for `min-height`.\n\n**Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **3**  | **1.3** | **12** | **7** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      '-webkit-max-content',
                      '-webkit-min-content',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              minInlineSize: {
                description:
                  "The **`min-inline-size`** CSS property defines the horizontal or vertical minimal size of an element's block, depending on its writing mode. It corresponds to either the `min-width` or the `min-height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'min-width'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              minWidth: {
                description:
                  'The **`min-width`** CSS property sets the minimum width of an element. It prevents the used value of the `width` property from becoming smaller than the value specified for `min-width`.\n\n**Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **7** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      '-webkit-max-content',
                      '-webkit-min-content',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'intrinsic',
                      'max-content',
                      'min-content',
                      'min-intrinsic',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              mixBlendMode: {
                description:
                  "The **`mix-blend-mode`** CSS property sets how an element's content should blend with the content of the element's parent and the element's background.\n\n**Syntax**: `<blend-mode>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **41** | **32**  | **8**  | **79** | No  |",
                enum: [
                  '-moz-initial',
                  'color',
                  'color-burn',
                  'color-dodge',
                  'darken',
                  'difference',
                  'exclusion',
                  'hard-light',
                  'hue',
                  'inherit',
                  'initial',
                  'lighten',
                  'luminosity',
                  'multiply',
                  'normal',
                  'overlay',
                  'revert',
                  'saturation',
                  'screen',
                  'soft-light',
                  'unset',
                ],
                type: 'string',
              },
              motionDistance: {
                description:
                  'The **`offset-distance`** CSS property specifies a position along an `offset-path` for an element to be placed.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`\n\n|         Chrome         | Firefox | Safari |  Edge  | IE  |\n| :--------------------: | :-----: | :----: | :----: | :-: |\n|         **55**         | **72**  |   No   | **79** | No  |\n| 46 _(motion-distance)_ |         |        |        |     |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              motionPath: {
                description:
                  "The **`offset-path`** CSS property specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system.\n\n**Syntax**: `none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]`\n\n**Initial value**: `none`\n\n|       Chrome       | Firefox | Safari |  Edge  | IE  |\n| :----------------: | :-----: | :----: | :----: | :-: |\n|       **55**       | **72**  |   No   | **79** | No  |\n| 46 _(motion-path)_ |         |        |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'fill-box',
                      'inherit',
                      'initial',
                      'margin-box',
                      'none',
                      'padding-box',
                      'revert',
                      'stroke-box',
                      'unset',
                      'view-box',
                    ],
                    type: 'string',
                  },
                ],
              },
              motionRotation: {
                description:
                  'The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n\n**Syntax**: `[ auto | reverse ] || <angle>`\n\n**Initial value**: `auto`\n\n|         Chrome         | Firefox | Safari |  Edge  | IE  |\n| :--------------------: | :-----: | :----: | :----: | :-: |\n|         **56**         | **72**  |   No   | **79** | No  |\n| 46 _(motion-rotation)_ |         |        |        |     |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'reverse',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              objectFit: {
                description:
                  'The **`object-fit`** CSS property sets how the content of a replaced element, such as an `<img>` or `<video>`, should be resized to fit its container.\n\n**Syntax**: `fill | contain | cover | none | scale-down`\n\n**Initial value**: `fill`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **31** | **36**  | **10** | **16** | No  |',
                enum: [
                  '-moz-initial',
                  'contain',
                  'cover',
                  'fill',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'scale-down',
                  'unset',
                ],
                type: 'string',
              },
              objectPosition: {
                description:
                  "The **`object-position`** CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background.\n\n**Syntax**: `<position>`\n\n**Initial value**: `50% 50%`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **31** | **36**  | **10** | **16** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              offsetAnchor: {
                description:
                  '**Syntax**: `auto | <position>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **79** | **72**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              offsetDistance: {
                description:
                  'The **`offset-distance`** CSS property specifies a position along an `offset-path` for an element to be placed.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`\n\n|         Chrome         | Firefox | Safari |  Edge  | IE  |\n| :--------------------: | :-----: | :----: | :----: | :-: |\n|         **55**         | **72**  |   No   | **79** | No  |\n| 46 _(motion-distance)_ |         |        |        |     |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              offsetPath: {
                description:
                  "The **`offset-path`** CSS property specifies a motion path for an element to follow and defines the element's positioning within the parent container or SVG coordinate system.\n\n**Syntax**: `none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]`\n\n**Initial value**: `none`\n\n|       Chrome       | Firefox | Safari |  Edge  | IE  |\n| :----------------: | :-----: | :----: | :----: | :-: |\n|       **55**       | **72**  |   No   | **79** | No  |\n| 46 _(motion-path)_ |         |        |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'fill-box',
                      'inherit',
                      'initial',
                      'margin-box',
                      'none',
                      'padding-box',
                      'revert',
                      'stroke-box',
                      'unset',
                      'view-box',
                    ],
                    type: 'string',
                  },
                ],
              },
              offsetRotate: {
                description:
                  'The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n\n**Syntax**: `[ auto | reverse ] || <angle>`\n\n**Initial value**: `auto`\n\n|         Chrome         | Firefox | Safari |  Edge  | IE  |\n| :--------------------: | :-----: | :----: | :----: | :-: |\n|         **56**         | **72**  |   No   | **79** | No  |\n| 46 _(motion-rotation)_ |         |        |        |     |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'reverse',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              offsetRotation: {
                description:
                  'The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n\n**Syntax**: `[ auto | reverse ] || <angle>`\n\n**Initial value**: `auto`\n\n|         Chrome         | Firefox | Safari |  Edge  | IE  |\n| :--------------------: | :-----: | :----: | :----: | :-: |\n|         **56**         | **72**  |   No   | **79** | No  |\n| 46 _(motion-rotation)_ |         |        |        |     |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'reverse',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              opacity: {
                description:
                  'The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n\n**Syntax**: `<alpha-value>`\n\n**Initial value**: `1.0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **2**  | **12** | **9** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              order: {
                description:
                  'The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `0`\n\n|  Chrome  | Firefox | Safari  |  Edge  |    IE    |\n| :------: | :-----: | :-----: | :----: | :------: |\n|  **29**  | **20**  |  **9**  | **12** |  **11**  |\n| 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              orphans: {
                description:
                  'The **`orphans`** CSS property sets the minimum number of lines in a block container that must be shown at the _bottom_ of a page, region, or column.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `2`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **25** |   No    | **1.3** | **12** | **8** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              outlineColor: {
                description:
                  "The **`outline-color`** CSS property sets the color of an element's outline.\n\n**Syntax**: `<color> | invert`\n\n**Initial value**: `invert`, for browsers supporting it, `currentColor` for the other\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  | **1.5** | **1.2** | **12** | **8** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'invert',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              outlineOffset: {
                description:
                  'The **`outline-offset`** CSS property sets the amount of space between an outline and the edge or border of an element.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **1**  | **1.5** | **1.2** | **15** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              outlineStyle: {
                description:
                  "The **`outline-style`** CSS property sets the style of an element's outline. An outline is a line that is drawn around an element, outside the `border`.\n\n**Syntax**: `auto | <'border-style'>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  | **1.5** | **1.2** | **12** | **8** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'dashed',
                      'dotted',
                      'double',
                      'groove',
                      'hidden',
                      'inherit',
                      'initial',
                      'inset',
                      'none',
                      'outset',
                      'revert',
                      'ridge',
                      'solid',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              outlineWidth: {
                description:
                  "The CSS **`outline-width`** property sets the thickness of an element's outline. An outline is a line that is drawn around an element, outside the `border`.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  | **1.5** | **1.2** | **12** | **8** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              overflowAnchor: {
                description:
                  '**Syntax**: `auto | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **56** | **66**  |   No   | **79** | No  |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              overflowBlock: {
                description:
                  '**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **69**  |   No   |  No  | No  |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'clip',
                  'hidden',
                  'inherit',
                  'initial',
                  'revert',
                  'scroll',
                  'unset',
                  'visible',
                ],
                type: 'string',
              },
              overflowClipBox: {
                description:
                  'The **`overflow-clip-box`** CSS property specifies relative to which box the clipping happens when there is an overflow. It is short hand for the `overflow-clip-box-inline` and `overflow-clip-box-block` properties.\n\n**Syntax**: `padding-box | content-box`\n\n**Initial value**: `padding-box`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **29**  |   No   |  No  | No  |',
                enum: [
                  '-moz-initial',
                  'content-box',
                  'inherit',
                  'initial',
                  'padding-box',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              overflowInline: {
                description:
                  '**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **69**  |   No   |  No  | No  |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'clip',
                  'hidden',
                  'inherit',
                  'initial',
                  'revert',
                  'scroll',
                  'unset',
                  'visible',
                ],
                type: 'string',
              },
              overflowWrap: {
                description:
                  'The `**overflow-wrap**` CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.\n\n**Syntax**: `normal | break-word | anywhere`\n\n**Initial value**: `normal`\n\n|     Chrome      |      Firefox      |     Safari      |       Edge       |          IE           |\n| :-------------: | :---------------: | :-------------: | :--------------: | :-------------------: |\n|     **23**      |      **49**       |     **6.1**     |      **18**      | **5.5** _(word-wrap)_ |\n| 1 _(word-wrap)_ | 3.5 _(word-wrap)_ | 1 _(word-wrap)_ | 12 _(word-wrap)_ |                       |',
                enum: [
                  '-moz-initial',
                  'anywhere',
                  'break-word',
                  'inherit',
                  'initial',
                  'normal',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              overflowX: {
                description:
                  "The **`overflow-x`** CSS property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content.\n\n**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `visible`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  | **3.5** | **3**  | **12** | **5** |",
                enum: [
                  '-moz-hidden-unscrollable',
                  '-moz-initial',
                  'auto',
                  'clip',
                  'hidden',
                  'inherit',
                  'initial',
                  'revert',
                  'scroll',
                  'unset',
                  'visible',
                ],
                type: 'string',
              },
              overflowY: {
                description:
                  "The **`overflow-y`** CSS property sets what shows when content overflows a block-level element's top and bottom edges. This may be nothing, a scroll bar, or the overflow content.\n\n**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `visible`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  | **3.5** | **3**  | **12** | **5** |",
                enum: [
                  '-moz-hidden-unscrollable',
                  '-moz-initial',
                  'auto',
                  'clip',
                  'hidden',
                  'inherit',
                  'initial',
                  'revert',
                  'scroll',
                  'unset',
                  'visible',
                ],
                type: 'string',
              },
              overscrollBehavior: {
                description:
                  "The **`overscroll-behavior`** CSS property sets what a browser does when reaching the boundary of a scrolling area. It's a shorthand for `overscroll-behavior-x` and `overscroll-behavior-y`.\n\n**Syntax**: `[ contain | none | auto ]{1,2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **63** | **59**  |   No   | **18** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'contain',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              overscrollBehaviorBlock: {
                description:
                  "The **`overscroll-behavior-block`** CSS property sets the browser's behavior when the block direction boundary of a scrolling area is reached.\n\n**Syntax**: `contain | none | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **77** | **73**  |   No   | **79** | No  |",
                enum: [
                  '-moz-initial',
                  'auto',
                  'contain',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              overscrollBehaviorInline: {
                description:
                  "The **`overscroll-behavior-inline`** CSS property sets the browser's behavior when the inline direction boundary of a scrolling area is reached.\n\n**Syntax**: `contain | none | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **77** | **73**  |   No   | **79** | No  |",
                enum: [
                  '-moz-initial',
                  'auto',
                  'contain',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              overscrollBehaviorX: {
                description:
                  "The **`overscroll-behavior-x`** CSS property sets the browser's behavior when the horizontal boundary of a scrolling area is reached.\n\n**Syntax**: `contain | none | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **63** | **59**  |   No   | **18** | No  |",
                enum: [
                  '-moz-initial',
                  'auto',
                  'contain',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              overscrollBehaviorY: {
                description:
                  "The **`overscroll-behavior-y`** CSS property sets the browser's behavior when the vertical boundary of a scrolling area is reached.\n\n**Syntax**: `contain | none | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **63** | **59**  |   No   | **18** | No  |",
                enum: [
                  '-moz-initial',
                  'auto',
                  'contain',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              paddingBlock: {
                description:
                  "The **`padding-block`** CSS shorthand property defines the logical block start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              paddingBlockEnd: {
                description:
                  "The **`padding-block-end`** CSS property defines the logical block end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              paddingBlockStart: {
                description:
                  "The **`padding-block-start`** CSS property defines the logical block start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              paddingBottom: {
                description:
                  'The **`padding-bottom`** CSS property sets the height of the padding area on the bottom of an element.\n\n**Syntax**: `<length> | <percentage>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              paddingInline: {
                description:
                  "The **`padding-inline`** CSS shorthand property defines the logical inline start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              paddingInlineEnd: {
                description:
                  "The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`\n\n|          Chrome           |        Firefox         |          Safari           |  Edge  | IE  |\n| :-----------------------: | :--------------------: | :-----------------------: | :----: | :-: |\n|          **69**           |         **41**         |         **12.1**          | **79** | No  |\n| 2 _(-webkit-padding-end)_ | 3 _(-moz-padding-end)_ | 3 _(-webkit-padding-end)_ |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              paddingInlineStart: {
                description:
                  "The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`\n\n|           Chrome            |         Firefox          |           Safari            |  Edge  | IE  |\n| :-------------------------: | :----------------------: | :-------------------------: | :----: | :-: |\n|           **69**            |          **41**          |          **12.1**           | **79** | No  |\n| 2 _(-webkit-padding-start)_ | 3 _(-moz-padding-start)_ | 3 _(-webkit-padding-start)_ |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              paddingLeft: {
                description:
                  'The **`padding-left`** CSS property sets the width of the padding area to the left of an element.\n\n**Syntax**: `<length> | <percentage>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              paddingRight: {
                description:
                  'The **`padding-right`** CSS property sets the width of the padding area on the right of an element.\n\n**Syntax**: `<length> | <percentage>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              paddingTop: {
                description:
                  'The **`padding-top`** CSS property sets the height of the padding area on the top of an element.\n\n**Syntax**: `<length> | <percentage>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              pageBreakAfter: {
                description:
                  'The **`page-break-after`** CSS property adjusts page breaks _after_ the current element.\n\n**Syntax**: `auto | always | avoid | left | right | recto | verso`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **1**  | **1.2** | **12** | **4** |',
                enum: [
                  '-moz-initial',
                  'always',
                  'auto',
                  'avoid',
                  'inherit',
                  'initial',
                  'left',
                  'recto',
                  'revert',
                  'right',
                  'unset',
                  'verso',
                ],
                type: 'string',
              },
              pageBreakBefore: {
                description:
                  'The **`page-break-before`** CSS property adjusts page breaks _before_ the current element.\n\n**Syntax**: `auto | always | avoid | left | right | recto | verso`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **1**  | **1.2** | **12** | **4** |',
                enum: [
                  '-moz-initial',
                  'always',
                  'auto',
                  'avoid',
                  'inherit',
                  'initial',
                  'left',
                  'recto',
                  'revert',
                  'right',
                  'unset',
                  'verso',
                ],
                type: 'string',
              },
              pageBreakInside: {
                description:
                  'The **`page-break-inside`** CSS property adjusts page breaks _inside_ the current element.\n\n**Syntax**: `auto | avoid`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  | **19**  | **1.3** | **12** | **8** |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'avoid',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              paintOrder: {
                description:
                  'The **`paint-order`** CSS property lets you control the order in which the fill and stroke (and painting markers) of text content and shapes are drawn.\n\n**Syntax**: `normal | [ fill || stroke || markers ]`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **35** | **60**  | **8**  | **17** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'fill',
                      'inherit',
                      'initial',
                      'markers',
                      'normal',
                      'revert',
                      'stroke',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              perspective: {
                description:
                  'The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n\n**Syntax**: `none | <length>`\n\n**Initial value**: `none`\n\n|  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n| :------: | :------: | :-----: | :----: | :----: |\n|  **36**  |  **16**  |  **9**  | **12** | **10** |\n| 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              perspectiveOrigin: {
                description:
                  'The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n\n**Syntax**: `<position>`\n\n**Initial value**: `50% 50%`\n\n|  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n| :------: | :------: | :-----: | :----: | :----: |\n|  **36**  |  **16**  |  **9**  | **12** | **10** |\n| 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              placeContent: {
                description:
                  "The `**place-content**` CSS shorthand property allows you to align content along both the block and inline directions at once (i.e. the `align-content` and `justify-content` properties) in a relevant layout system such as Grid or Flexbox.\n\n**Syntax**: `<'align-content'> <'justify-content'>?`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **45**  | **9**  | **79** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **53**  | **11** | **79** | No  |\n\n---",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'space-around',
                      'space-between',
                      'space-evenly',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              pointerEvents: {
                description:
                  'The **`pointer-events`** CSS property sets under what circumstances (if any) a particular graphic element can become the target of pointer events.\n\n**Syntax**: `auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n| **1**  | **1.5** | **4**  | **12** | **11** |',
                enum: [
                  '-moz-initial',
                  'all',
                  'auto',
                  'fill',
                  'inherit',
                  'initial',
                  'none',
                  'painted',
                  'revert',
                  'stroke',
                  'unset',
                  'visible',
                  'visibleFill',
                  'visiblePainted',
                  'visibleStroke',
                ],
                type: 'string',
              },
              position: {
                description:
                  'The **`position`** CSS property sets how an element is positioned in a document. The `top`, `right`, `bottom`, and `left` properties determine the final location of positioned elements.\n\n**Syntax**: `static | relative | absolute | sticky | fixed`\n\n**Initial value**: `static`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                enum: [
                  '-moz-initial',
                  '-webkit-sticky',
                  'absolute',
                  'fixed',
                  'inherit',
                  'initial',
                  'relative',
                  'revert',
                  'static',
                  'sticky',
                  'unset',
                ],
                type: 'string',
              },
              quotes: {
                description:
                  'The **`quotes`** CSS property sets how the browser should render quotation marks that are added using the `open-quotes` or `close-quotes` values of the CSS `content` property.\n\n**Syntax**: `none | auto | [ <string> <string> ]+`\n\n**Initial value**: depends on user agent\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **11** | **1.5** | **9**  | **12** | **8** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              resize: {
                description:
                  'The **`resize`** CSS property sets whether an element is resizable, and if so, in which directions.\n\n**Syntax**: `none | both | horizontal | vertical | block | inline`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **1**  |  **4**  | **3**  | **79** | No  |',
                enum: [
                  '-moz-initial',
                  'block',
                  'both',
                  'horizontal',
                  'inherit',
                  'initial',
                  'inline',
                  'none',
                  'revert',
                  'unset',
                  'vertical',
                ],
                type: 'string',
              },
              right: {
                description:
                  'The **`right`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              rotate: {
                description:
                  'The **`rotate`** CSS property allows you to specify rotation transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` property.\n\n**Syntax**: `none | <angle> | [ x | y | z | <number>{3} ] && <angle>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **72**  |   No   |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              rowGap: {
                description:
                  "The **`row-gap`** CSS property sets the size of the gap (gutter) between an element's grid rows.\n\n**Syntax**: `normal | <length-percentage>`\n\n**Initial value**: `normal`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **84** | **63**  |   No   | **84** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n|       Chrome        |       Firefox       |        Safari         |  Edge  | IE  |\n| :-----------------: | :-----------------: | :-------------------: | :----: | :-: |\n|       **66**        |       **61**        |       **12.1**        | **16** | No  |\n| 57 _(grid-row-gap)_ | 52 _(grid-row-gap)_ | 10.1 _(grid-row-gap)_ |        |     |\n\n---",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              rubyAlign: {
                description:
                  'The `**ruby-align**` CSS property defines the distribution of the different ruby elements over the base.\n\n**Syntax**: `start | center | space-between | space-around`\n\n**Initial value**: `space-around`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **38**  |   No   |  No  | No  |',
                enum: [
                  '-moz-initial',
                  'center',
                  'inherit',
                  'initial',
                  'revert',
                  'space-around',
                  'space-between',
                  'start',
                  'unset',
                ],
                type: 'string',
              },
              rubyMerge: {
                description:
                  '**Syntax**: `separate | collapse | auto`\n\n**Initial value**: `separate`',
                enum: [
                  '-moz-initial',
                  'auto',
                  'collapse',
                  'inherit',
                  'initial',
                  'revert',
                  'separate',
                  'unset',
                ],
                type: 'string',
              },
              rubyPosition: {
                description:
                  'The `**ruby-position**` CSS property defines the position of a ruby element relatives to its base element. It can be position over the element (`over`), under it (`under`), or between the characters, on their right side (`inter-character`).\n\n**Syntax**: `over | under | inter-character`\n\n**Initial value**: `over`\n\n| Chrome  | Firefox |    Safari     | Edge  | IE  |\n| :-----: | :-----: | :-----------: | :---: | :-: |\n| **84**  | **38**  | **6.1** _-x-_ | 12-79 | No  |\n| 1 _-x-_ |         |               |       |     |',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'over',
                  'revert',
                  'under',
                  'unset',
                ],
                type: 'string',
              },
              scale: {
                description:
                  'The **`scale`** CSS property allows you to specify scale transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` value.\n\n**Syntax**: `none | <number>{1,3}`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **72**  |   No   |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              scrollBehavior: {
                description:
                  'The **`scroll-behavior`** CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs.\n\n**Syntax**: `auto | smooth`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **61** | **36**  |  n/a   | **79** | No  |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'revert',
                  'smooth',
                  'unset',
                ],
                type: 'string',
              },
              scrollMargin: {
                description:
                  'The **`scroll-margin`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the `margin` property does for margins of an element.\n\n**Syntax**: `<length>{1,4}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |            Safari             |  Edge  | IE  |\n| :----: | :-----: | :---------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin)_ | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollMarginBlock: {
                description:
                  'The `scroll-margin-block` shorthand property sets the scroll margins of an element in the block dimension.\n\n**Syntax**: `<length>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollMarginBlockEnd: {
                description:
                  'The `scroll-margin-block-end` property defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollMarginBlockStart: {
                description:
                  'The `scroll-margin-block-start` property defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollMarginBottom: {
                description:
                  'The `scroll-margin-bottom` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |                Safari                |  Edge  | IE  |\n| :----: | :-----: | :----------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-bottom)_ | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollMarginInline: {
                description:
                  'The `scroll-margin-inline` shorthand property sets the scroll margins of an element in the inline dimension.\n\n**Syntax**: `<length>{1,2}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **68**  |   No   |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollMarginInlineEnd: {
                description:
                  'The `scroll-margin-inline-end` property defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollMarginInlineStart: {
                description:
                  'The `scroll-margin-inline-start` property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollMarginLeft: {
                description:
                  'The `scroll-margin-left` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |               Safari               |  Edge  | IE  |\n| :----: | :-----: | :--------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-left)_ | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollMarginRight: {
                description:
                  'The `scroll-margin-right` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |               Safari                |  Edge  | IE  |\n| :----: | :-----: | :---------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-right)_ | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollMarginTop: {
                description:
                  'The `scroll-margin-top` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |              Safari               |  Edge  | IE  |\n| :----: | :-----: | :-------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-top)_ | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollPadding: {
                description:
                  'The **`scroll-padding`** shorthand property sets scroll padding on all sides of an element at once, much like the `padding` property does for padding on an element.\n\n**Syntax**: `[ auto | <length-percentage> ]{1,4}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollPaddingBlock: {
                description:
                  'The `scroll-padding-block` shorthand property sets the scroll padding of an element in the block dimension.\n\n**Syntax**: `[ auto | <length-percentage> ]{1,2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollPaddingBlockEnd: {
                description:
                  'The `scroll-padding-block-end` property defines offsets for the end edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollPaddingBlockStart: {
                description:
                  'The `scroll-padding-block-start` property defines offsets for the start edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollPaddingBottom: {
                description:
                  'The `scroll-padding-bottom` property defines offsets for the bottom of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollPaddingInline: {
                description:
                  'The `scroll-padding-inline` shorthand property sets the scroll padding of an element in the inline dimension.\n\n**Syntax**: `[ auto | <length-percentage> ]{1,2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollPaddingInlineEnd: {
                description:
                  'The `scroll-padding-inline-end` property defines offsets for the end edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollPaddingInlineStart: {
                description:
                  'The `scroll-padding-inline-start` property defines offsets for the start edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollPaddingLeft: {
                description:
                  'The `scroll-padding-left` property defines offsets for the left of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollPaddingRight: {
                description:
                  'The `scroll-padding-right` property defines offsets for the right of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollPaddingTop: {
                description:
                  'The **`scroll-padding-top`** property defines offsets for the top of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targetted element and the edges of the scrollport.\n\n**Syntax**: `auto | <length-percentage>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollSnapAlign: {
                description:
                  'The `scroll-snap-align` property specifies the box’s snap position as an alignment of its snap area (as the alignment subject) within its snap container’s snapport (as the alignment container). The two values specify the snapping alignment in the block axis and inline axis, respectively. If only one value is specified, the second value defaults to the same value.\n\n**Syntax**: `[ none | start | end | center ]{1,2}`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **69** | **68**  | **11** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'center',
                      'end',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              scrollSnapMargin: {
                description:
                  'The **`scroll-margin`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the `margin` property does for margins of an element.\n\n**Syntax**: `<length>{1,4}`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |            Safari             |  Edge  | IE  |\n| :----: | :-----: | :---------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin)_ | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollSnapMarginBottom: {
                description:
                  'The `scroll-margin-bottom` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |                Safari                |  Edge  | IE  |\n| :----: | :-----: | :----------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-bottom)_ | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollSnapMarginLeft: {
                description:
                  'The `scroll-margin-left` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |               Safari               |  Edge  | IE  |\n| :----: | :-----: | :--------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-left)_ | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollSnapMarginRight: {
                description:
                  'The `scroll-margin-right` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |               Safari                |  Edge  | IE  |\n| :----: | :-----: | :---------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-right)_ | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollSnapMarginTop: {
                description:
                  'The `scroll-margin-top` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |              Safari               |  Edge  | IE  |\n| :----: | :-----: | :-------------------------------: | :----: | :-: |\n| **69** | **68**  | **11** _(scroll-snap-margin-top)_ | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollSnapStop: {
                description:
                  'The **`scroll-snap-stop`** CSS property defines whether the scroll container is allowed to "pass over" possible snap positions.\n\n**Syntax**: `normal | always`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **75** |   No    |   No   | **79** | No  |',
                enum: [
                  '-moz-initial',
                  'always',
                  'inherit',
                  'initial',
                  'normal',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              scrollSnapType: {
                description:
                  'The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n\n**Syntax**: `none | [ x | y | block | inline | both ] [ mandatory | proximity ]?`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari  |     Edge     |      IE      |\n| :----: | :-----: | :-----: | :----------: | :----------: |\n| **69** |  39-68  | **11**  | **12** _-x-_ | **10** _-x-_ |\n|        |         | 9 _-x-_ |              |              |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'block',
                      'both',
                      'inherit',
                      'initial',
                      'inline',
                      'none',
                      'revert',
                      'unset',
                      'x',
                      'y',
                    ],
                    type: 'string',
                  },
                ],
              },
              scrollbarColor: {
                description:
                  'The **`scrollbar-color`** CSS property sets the color of the scrollbar track and thumb.\n\n**Syntax**: `auto | dark | light | <color>{2}`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **64**  |   No   |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'auto',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'dark',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'light',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              scrollbarGutter: {
                description:
                  "The **`scrollbar-gutter`** CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed.\n\n**Syntax**: `auto | [ stable | always ] && both? && force?`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|  n/a   |   No    |   No   |  No  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'always',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'stable',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              scrollbarWidth: {
                description:
                  'The **`scrollbar-width`** property allows the author to set the maximum thickness of an element’s scrollbars when they are shown.\n\n**Syntax**: `auto | thin | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **64**  |   No   |  No  | No  |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'thin',
                  'unset',
                ],
                type: 'string',
              },
              shapeImageThreshold: {
                description:
                  'The **`shape-image-threshold`** CSS property sets the alpha channel threshold used to extract the shape using an image as the value for `shape-outside`.\n\n**Syntax**: `<alpha-value>`\n\n**Initial value**: `0.0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **37** | **62**  | **10.1** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              shapeMargin: {
                description:
                  'The **`shape-margin`** CSS property sets a margin for a CSS shape created using `shape-outside`.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **37** | **62**  | **10.1** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              shapeOutside: {
                description:
                  'The **`shape-outside`** CSS property defines a shape—which may be non-rectangular—around which adjacent inline content should wrap. By default, inline content wraps around its margin box; `shape-outside` provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than simple boxes.\n\n**Syntax**: `none | <shape-box> || <basic-shape> | <image>`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **37** | **62**  | **10.1** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'inherit',
                      'initial',
                      'margin-box',
                      'none',
                      'padding-box',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              tabSize: {
                description:
                  'The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n\n**Syntax**: `<integer> | <length>`\n\n**Initial value**: `8`\n\n| Chrome |   Firefox   | Safari  |  Edge  | IE  |\n| :----: | :---------: | :-----: | :----: | :-: |\n| **21** | **4** _-x-_ | **6.1** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              tableLayout: {
                description:
                  'The **`table-layout`** CSS property sets the algorithm used to lay out `<table>` cells, rows, and columns.\n\n**Syntax**: `auto | fixed`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **14** |  **1**  | **1**  | **12** | **5** |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'fixed',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              textAlign: {
                description:
                  'The **`text-align`** CSS property sets the horizontal alignment of a block element or table-cell box. This means it works like `vertical-align` but in the horizontal direction.\n\n**Syntax**: `start | end | left | right | center | justify | match-parent`\n\n**Initial value**: `start`, or a nameless value that acts as `left` if _direction_ is `ltr`, `right` if _direction_ is `rtl` if `start` is not supported by the browser.\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
                enum: [
                  '-moz-initial',
                  'center',
                  'end',
                  'inherit',
                  'initial',
                  'justify',
                  'left',
                  'match-parent',
                  'revert',
                  'right',
                  'start',
                  'unset',
                ],
                type: 'string',
              },
              textAlignLast: {
                description:
                  'The **`text-align-last`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.\n\n**Syntax**: `auto | start | end | left | right | center | justify`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **47** | **49**  |   No   | **12** | **5.5** |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'center',
                  'end',
                  'inherit',
                  'initial',
                  'justify',
                  'left',
                  'revert',
                  'right',
                  'start',
                  'unset',
                ],
                type: 'string',
              },
              textCombineUpright: {
                description:
                  'The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n\n**Syntax**: `none | all | [ digits <integer>? ]`\n\n**Initial value**: `none`\n\n|           Chrome           | Firefox |              Safari              |                Edge                |                   IE                   |\n| :------------------------: | :-----: | :------------------------------: | :--------------------------------: | :------------------------------------: |\n|           **48**           | **48**  | **5.1** _(-webkit-text-combine)_ |               15-79                | **11** _(-ms-text-combine-horizontal)_ |\n| 9 _(-webkit-text-combine)_ |         |                                  | 12 _(-ms-text-combine-horizontal)_ |                                        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-ms-text-combine-horizontal',
                      'all',
                      'digits',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              textDecorationColor: {
                description:
                  'The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **36**  | **12.1** | **79** | No  |\n|        |         | 8 _-x-_  |        |     |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              textDecorationLine: {
                description:
                  'The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n\n**Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n\n**Initial value**: `none`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **36**  | **12.1** | **79** | No  |\n|        |         | 8 _-x-_  |        |     |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'blink',
                      'grammar-error',
                      'inherit',
                      'initial',
                      'line-through',
                      'none',
                      'overline',
                      'revert',
                      'spelling-error',
                      'underline',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              textDecorationSkip: {
                description:
                  'The **`text-decoration-skip`** CSS property sets what parts of an element’s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.\n\n**Syntax**: `none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]`\n\n**Initial value**: `objects`\n\n| Chrome | Firefox |  Safari  | Edge | IE  |\n| :----: | :-----: | :------: | :--: | :-: |\n| 57-64  |   No    | **12.1** |  No  | No  |\n|        |         | 8 _-x-_  |      |     |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'box-decoration',
                      'edges',
                      'inherit',
                      'initial',
                      'leading-spaces',
                      'none',
                      'objects',
                      'revert',
                      'spaces',
                      'trailing-spaces',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              textDecorationSkipInk: {
                description:
                  'The **`text-decoration-skip-ink`** CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.\n\n**Syntax**: `auto | all | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **64** | **70**  |   No   | **79** | No  |',
                enum: [
                  '-moz-initial',
                  'all',
                  'auto',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              textDecorationStyle: {
                description:
                  'The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n\n**Syntax**: `solid | double | dotted | dashed | wavy`\n\n**Initial value**: `solid`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **36**  | **12.1** | **79** | No  |\n|        |         | 8 _-x-_  |        |     |',
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'inherit',
                  'initial',
                  'revert',
                  'solid',
                  'unset',
                  'wavy',
                ],
                type: 'string',
              },
              textDecorationThickness: {
                description:
                  'The **`text-decoration-thickness`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.\n\n**Syntax**: `auto | from-font | <length> | <percentage> `\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **87** | **70**  | **12.1** | **87** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'from-font',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              textDecorationWidth: {
                description:
                  'The **`text-decoration-thickness`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.\n\n**Syntax**: `auto | from-font | <length> | <percentage> `\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **87** | **70**  | **12.1** | **87** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'from-font',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              textEmphasisColor: {
                description:
                  'The **`text-emphasis-color`** CSS property sets the color of emphasis marks. This value can also be set using the `text-emphasis` shorthand.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`\n\n|    Chrome    | Firefox | Safari  |     Edge     | IE  |\n| :----------: | :-----: | :-----: | :----------: | :-: |\n| **25** _-x-_ | **46**  | **6.1** | **79** _-x-_ | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              textEmphasisPosition: {
                description:
                  "The **`text-emphasis-position`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased.\n\n**Syntax**: `[ over | under ] && [ right | left ]`\n\n**Initial value**: `over right`\n\n|    Chrome    | Firefox | Safari  |     Edge     | IE  |\n| :----------: | :-----: | :-----: | :----------: | :-: |\n| **25** _-x-_ | **46**  | **6.1** | **79** _-x-_ | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              textEmphasisStyle: {
                description:
                  'The **`text-emphasis-style`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the `text-emphasis` shorthand.\n\n**Syntax**: `none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>`\n\n**Initial value**: `none`\n\n|    Chrome    | Firefox | Safari  |     Edge     | IE  |\n| :----------: | :-----: | :-----: | :----------: | :-: |\n| **25** _-x-_ | **46**  | **6.1** | **79** _-x-_ | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'circle',
                      'dot',
                      'double-circle',
                      'filled',
                      'inherit',
                      'initial',
                      'none',
                      'open',
                      'revert',
                      'sesame',
                      'triangle',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              textIndent: {
                description:
                  'The **`text-indent`** CSS property sets the length of empty space (indentation) that is put before lines of text in a block.\n\n**Syntax**: `<length-percentage> && hanging? && each-line?`\n\n**Initial value**: `0`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              textJustify: {
                description:
                  'The **`text-justify`** CSS property sets what type of justification should be applied to text when `text-align``: justify;` is set on an element.\n\n**Syntax**: `auto | inter-character | inter-word | none`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |   IE   |\n| :----: | :-----: | :----: | :----: | :----: |\n|  n/a   | **55**  |   No   | **12** | **11** |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'inter-character',
                  'inter-word',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              textOrientation: {
                description:
                  'The **`text-orientation`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when `writing-mode` is not `horizontal-tb`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.\n\n**Syntax**: `mixed | upright | sideways`\n\n**Initial value**: `mixed`\n\n|  Chrome  | Firefox |  Safari   |  Edge  | IE  |\n| :------: | :-----: | :-------: | :----: | :-: |\n|  **48**  | **41**  |  **14**   | **79** | No  |\n| 11 _-x-_ |         | 5.1 _-x-_ |        |     |',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'mixed',
                  'revert',
                  'sideways',
                  'unset',
                  'upright',
                ],
                type: 'string',
              },
              textOverflow: {
                description:
                  "The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('`…`'), or display a custom string.\n\n**Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n\n**Initial value**: `clip`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  |  **7**  | **1.3** | **12** | **6** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'clip',
                      'ellipsis',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              textRendering: {
                description:
                  'The **`text-rendering`** CSS property provides information to the rendering engine about what to optimize for when rendering text.\n\n**Syntax**: `auto | optimizeSpeed | optimizeLegibility | geometricPrecision`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **4**  |  **1**  | **5**  | **79** | No  |',
                enum: [
                  '-moz-initial',
                  'auto',
                  'geometricPrecision',
                  'inherit',
                  'initial',
                  'optimizeLegibility',
                  'optimizeSpeed',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              textShadow: {
                description:
                  'The **`text-shadow`** CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and any of its `decorations`. Each shadow is described by some combination of X and Y offsets from the element, blur radius, and color.\n\n**Syntax**: `none | <shadow-t>#`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari  |  Edge  |   IE   |\n| :----: | :-----: | :-----: | :----: | :----: |\n| **2**  | **3.5** | **1.1** | **12** | **10** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              textSizeAdjust: {
                description:
                  'The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n\n**Syntax**: `none | auto | <percentage>`\n\n**Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **54** |   No    |   No   | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              textTransform: {
                description:
                  "The **`text-transform`** CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized. It also can help improve legibility for ruby.\n\n**Syntax**: `none | capitalize | uppercase | lowercase | full-width | full-size-kana`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                enum: [
                  '-moz-initial',
                  'capitalize',
                  'full-size-kana',
                  'full-width',
                  'inherit',
                  'initial',
                  'lowercase',
                  'none',
                  'revert',
                  'unset',
                  'uppercase',
                ],
                type: 'string',
              },
              textUnderlineOffset: {
                description:
                  'The **`text-underline-offset`** CSS property sets the offset distance of an underline text decoration line (applied using `text-decoration`) from its original position.\n\n**Syntax**: `auto | <length> | <percentage> `\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **87** | **70**  | **12.1** | **87** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              textUnderlinePosition: {
                description:
                  "The **`text-underline-position`** CSS property specifies the position of the underline which is set using the `text-decoration` property's `underline` value.\n\n**Syntax**: `auto | from-font | [ under || [ left | right ] ]`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox |  Safari  |  Edge  |  IE   |\n| :----: | :-----: | :------: | :----: | :---: |\n| **33** | **74**  | **12.1** | **12** | **6** |\n|        |         | 9 _-x-_  |        |       |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'from-font',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'under',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              top: {
                description:
                  'The **`top`** CSS property participates in specifying the vertical position of a positioned element. It has no effect on non-positioned elements.\n\n**Syntax**: `<length> | <percentage> | auto`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **5** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              touchAction: {
                description:
                  "The **`touch-action`** CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).\n\n**Syntax**: `auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |    IE    |\n| :----: | :-----: | :----: | :----: | :------: |\n| **36** | **52**  | **13** | **12** |  **11**  |\n|        |         |        |        | 10 _-x-_ |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-ms-manipulation',
                      '-ms-none',
                      '-ms-pinch-zoom',
                      'auto',
                      'inherit',
                      'initial',
                      'manipulation',
                      'none',
                      'pan-down',
                      'pan-left',
                      'pan-right',
                      'pan-up',
                      'pan-x',
                      'pan-y',
                      'pinch-zoom',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              transform: {
                description:
                  'The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n\n**Syntax**: `none | <transform-list>`\n\n**Initial value**: `none`\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE    |\n| :-----: | :-----: | :-------: | :----: | :-----: |\n| **36**  | **16**  |   **9**   | **12** | **10**  |\n| 1 _-x-_ |         | 3.1 _-x-_ |        | 9 _-x-_ |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              transformBox: {
                description:
                  'The **`transform-box`** CSS property defines the layout box to which the `transform` and `transform-origin` properties relate.\n\n**Syntax**: `content-box | border-box | fill-box | stroke-box | view-box`\n\n**Initial value**: `view-box`\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **64** | **55**  | **11** | **79** | No  |',
                enum: [
                  '-moz-initial',
                  'border-box',
                  'content-box',
                  'fill-box',
                  'inherit',
                  'initial',
                  'revert',
                  'stroke-box',
                  'unset',
                  'view-box',
                ],
                type: 'string',
              },
              transformOrigin: {
                description:
                  "The **`transform-origin`** CSS property sets the origin for an element's transformations.\n\n**Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n\n**Initial value**: `50% 50% 0`\n\n| Chrome  |  Firefox  | Safari  |  Edge  |   IE    |\n| :-----: | :-------: | :-----: | :----: | :-----: |\n| **36**  |  **16**   |  **9**  | **12** | **10**  |\n| 1 _-x-_ | 3.5 _-x-_ | 2 _-x-_ |        | 9 _-x-_ |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              transformStyle: {
                description:
                  'The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n\n**Syntax**: `flat | preserve-3d`\n\n**Initial value**: `flat`\n\n|  Chrome  | Firefox  | Safari  |  Edge  | IE  |\n| :------: | :------: | :-----: | :----: | :-: |\n|  **36**  |  **16**  |  **9**  | **12** | No  |\n| 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |     |',
                enum: [
                  '-moz-initial',
                  'flat',
                  'inherit',
                  'initial',
                  'preserve-3d',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              transitionDelay: {
                description:
                  "The **`transition-delay`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **26**  | **16**  |  **9**  | **12** | **10** |\n| 1 _-x-_ | 4 _-x-_ | 4 _-x-_ |        |        |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              transitionDuration: {
                description:
                  'The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :-----: | :-----: | :-------: | :----: | :----: |\n| **26**  | **16**  |   **9**   | **12** | **10** |\n| 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              transitionProperty: {
                description:
                  'The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n\n**Syntax**: `none | <single-transition-property>#`\n\n**Initial value**: all\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :-----: | :-----: | :-------: | :----: | :----: |\n| **26**  | **16**  |   **9**   | **12** | **10** |\n| 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'all',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              transitionTimingFunction: {
                description:
                  'The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :-----: | :-----: | :-------: | :----: | :----: |\n| **26**  | **16**  |   **9**   | **12** | **10** |\n| 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              translate: {
                description:
                  'The **`translate`** CSS property allows you to specify translation transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` value.\n\n**Syntax**: `none | <length-percentage> [ <length-percentage> <length>? ]?`\n\n**Initial value**: `none`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n|   No   | **72**  |   No   |  No  | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              unicodeBidi: {
                description:
                  'The **`unicode-bidi`** CSS property, together with the `direction` property, determines how bidirectional text in a document is handled. For example, if a block of content contains both left-to-right and right-to-left text, the user-agent uses a complex Unicode algorithm to decide how to display the text. The `unicode-bidi` property overrides this algorithm and allows the developer to control the text embedding.\n\n**Syntax**: `normal | embed | isolate | bidi-override | isolate-override | plaintext`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari  |  Edge  |   IE    |\n| :----: | :-----: | :-----: | :----: | :-----: |\n| **2**  |  **1**  | **1.3** | **12** | **5.5** |',
                enum: [
                  '-moz-initial',
                  '-moz-isolate',
                  '-moz-isolate-override',
                  '-moz-plaintext',
                  '-webkit-isolate',
                  'bidi-override',
                  'embed',
                  'inherit',
                  'initial',
                  'isolate',
                  'isolate-override',
                  'normal',
                  'plaintext',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              userSelect: {
                description:
                  "The `**user-select**` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.\n\n**Syntax**: `auto | text | none | contain | all`\n\n**Initial value**: `auto`\n\n| Chrome  | Firefox |   Safari    |     Edge     |      IE      |\n| :-----: | :-----: | :---------: | :----------: | :----------: |\n| **54**  | **69**  | **3** _-x-_ | **12** _-x-_ | **10** _-x-_ |\n| 1 _-x-_ | 1 _-x-_ |             |              |              |",
                enum: [
                  '-moz-initial',
                  '-moz-none',
                  'all',
                  'auto',
                  'contain',
                  'element',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'text',
                  'unset',
                ],
                type: 'string',
              },
              verticalAlign: {
                description:
                  'The **`vertical-align`** CSS property sets vertical alignment of an inline, inline-block or table-cell box.\n\n**Syntax**: `baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>`\n\n**Initial value**: `baseline`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'baseline',
                      'bottom',
                      'inherit',
                      'initial',
                      'middle',
                      'revert',
                      'sub',
                      'super',
                      'text-bottom',
                      'text-top',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              visibility: {
                description:
                  'The **`visibility`** CSS property shows or hides an element without changing the layout of a document. The property can also hide rows or columns in a `<table>`.\n\n**Syntax**: `visible | hidden | collapse`\n\n**Initial value**: `visible`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                enum: [
                  '-moz-initial',
                  'collapse',
                  'hidden',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                  'visible',
                ],
                type: 'string',
              },
              whiteSpace: {
                description:
                  'The **`white-space`** CSS property sets how white space inside an element is handled.\n\n**Syntax**: `normal | pre | nowrap | pre-wrap | pre-line | break-spaces`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |',
                enum: [
                  '-moz-initial',
                  '-moz-pre-wrap',
                  'break-spaces',
                  'inherit',
                  'initial',
                  'normal',
                  'nowrap',
                  'pre',
                  'pre-line',
                  'pre-wrap',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              widows: {
                description:
                  'The **`widows`** CSS property sets the minimum number of lines in a block container that must be shown at the _top_ of a page, region, or column.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `2`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **25** |   No    | **1.3** | **12** | **8** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              width: {
                description:
                  "The **`width`** CSS property sets an element's width. By default, it sets the width of the content area, but if `box-sizing` is set to `border-box`, it sets the width of the border area.\n\n**Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content(<length-percentage>)`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      '-webkit-max-content',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'intrinsic',
                      'max-content',
                      'min-content',
                      'min-intrinsic',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              willChange: {
                description:
                  'The **`will-change`** CSS property hints to browsers how an element is expected to change. Browsers may set up optimizations before an element is actually changed. These kinds of optimizations can increase the responsiveness of a page by doing potentially expensive work before they are actually required.\n\n**Syntax**: `auto | <animateable-feature>#`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **36** | **36**  | **9.1** | **79** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'contents',
                      'inherit',
                      'initial',
                      'revert',
                      'scroll-position',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              wordBreak: {
                description:
                  'The **`word-break`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.\n\n**Syntax**: `normal | break-all | keep-all | break-word`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  | **15**  | **3**  | **12** | **5.5** |',
                enum: [
                  '-moz-initial',
                  'break-all',
                  'break-word',
                  'inherit',
                  'initial',
                  'keep-all',
                  'normal',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              wordSpacing: {
                description:
                  'The **`word-spacing`** CSS property sets the length of space between words and between tags.\n\n**Syntax**: `normal | <length-percentage>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **6** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              wordWrap: {
                description:
                  'The `**overflow-wrap**` CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.\n\n**Syntax**: `normal | break-word`\n\n**Initial value**: `normal`',
                enum: [
                  '-moz-initial',
                  'break-word',
                  'inherit',
                  'initial',
                  'normal',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              writingMode: {
                description:
                  'The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n\n**Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n\n**Initial value**: `horizontal-tb`\n\n| Chrome  | Firefox |  Safari   |  Edge  |  IE   |\n| :-----: | :-----: | :-------: | :----: | :---: |\n| **48**  | **41**  | **10.1**  | **12** | **9** |\n| 8 _-x-_ |         | 5.1 _-x-_ |        |       |',
                enum: [
                  '-moz-initial',
                  'horizontal-tb',
                  'inherit',
                  'initial',
                  'revert',
                  'sideways-lr',
                  'sideways-rl',
                  'unset',
                  'vertical-lr',
                  'vertical-rl',
                ],
                type: 'string',
              },
              zIndex: {
                description:
                  'The **`z-index`** CSS property sets the z-order of a positioned element and its descendants or flex items. Overlapping elements with a larger z-index cover those with a smaller one.\n\n**Syntax**: `auto | <integer>`\n\n**Initial value**: `auto`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              zoom: {
                description:
                  'The non-standard **`zoom`** CSS property can be used to control the magnification level of an element. `transform: scale()` should be used instead of this property, if possible. However, unlike CSS Transforms, `zoom` affects the layout size of the element.\n\n**Syntax**: `normal | reset | <number> | <percentage>`\n\n**Initial value**: `normal`\n\n| Chrome | Firefox | Safari  |  Edge  |   IE    |\n| :----: | :-----: | :-----: | :----: | :-----: |\n| **1**  |   No    | **3.1** | **12** | **5.5** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'normal',
                      'reset',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              all: {
                description:
                  "The `**all**` shorthand CSS property resets all of an element's properties except `unicode-bidi`, `direction`, and CSS Custom Properties. It can set properties to their initial or inherited values, or to the values specified in another stylesheet origin.\n\n**Syntax**: `initial | inherit | unset | revert`\n\n**Initial value**: There is no practical initial value for it.\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **37** | **27**  | **9.1** | **79** | No  |",
                enum: ['-moz-initial', 'inherit', 'initial', 'revert', 'unset'],
                type: 'string',
              },
              animation: {
                description:
                  'The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n\n**Syntax**: `<single-animation>#`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **43**  | **16**  |  **9**  | **12** | **10** |\n| 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'alternate',
                      'alternate-reverse',
                      'backwards',
                      'both',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'forwards',
                      'infinite',
                      'inherit',
                      'initial',
                      'linear',
                      'none',
                      'normal',
                      'paused',
                      'reverse',
                      'revert',
                      'running',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              background: {
                description:
                  'The **`background`** shorthand CSS property sets all background style properties at once, such as color, image, origin and size, or repeat method.\n\n**Syntax**: `[ <bg-layer> , ]* <final-bg-layer>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'border-box',
                      'bottom',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'center',
                      'chartreuse',
                      'chocolate',
                      'content-box',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'fixed',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'left',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'local',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'no-repeat',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'padding-box',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'repeat',
                      'repeat-x',
                      'repeat-y',
                      'revert',
                      'right',
                      'rosybrown',
                      'round',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'scroll',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'space',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'top',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              border: {
                description:
                  "The **`border`** shorthand CSS property sets an element's border. It sets the values of `border-width`, `border-style`, and `border-color`.\n\n**Syntax**: `<line-width> || <line-style> || <color>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              borderBlock: {
                description:
                  "The **`border-block`** CSS property is a shorthand property for setting the individual logical block border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              borderBlockEnd: {
                description:
                  "The **`border-block-end`** CSS property is a shorthand property for setting the individual logical block-end border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              borderBlockStart: {
                description:
                  "The **`border-block-start`** CSS property is a shorthand property for setting the individual logical block-start border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              borderBottom: {
                description:
                  "The **`border-bottom`** shorthand CSS property sets an element's bottom border. It sets the values of `border-bottom-width`, `border-bottom-style` and `border-bottom-color`.\n\n**Syntax**: `<line-width> || <line-style> || <color>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              borderColor: {
                description:
                  "The **`border-color`** shorthand CSS property sets the color of an element's border.\n\n**Syntax**: `<color>{1,4}`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderImage: {
                description:
                  "The **`border-image`** CSS property draws an image around a given element. It replaces the element's regular border.\n\n**Syntax**: `<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>`\n\n| Chrome  |  Firefox  | Safari  |  Edge  |   IE   |\n| :-----: | :-------: | :-----: | :----: | :----: |\n| **16**  |  **15**   |  **6**  | **12** | **11** |\n| 7 _-x-_ | 3.5 _-x-_ | 3 _-x-_ |        |        |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'repeat',
                      'revert',
                      'round',
                      'space',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderInline: {
                description:
                  "The **`border-inline`** CSS property is a shorthand property for setting the individual logical inline border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox | Safari | Edge | IE  |\n| :----: | :-----: | :----: | :--: | :-: |\n| **87** | **66**  |   No   | n/a  | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              borderInlineEnd: {
                description:
                  "The **`border-inline-end`** CSS property is a shorthand property for setting the individual logical inline-end border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              borderInlineStart: {
                description:
                  "The **`border-inline-start`** CSS property is a shorthand property for setting the individual logical inline-start border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-top-width'> || <'border-top-style'> || <color>`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **69** | **41**  | **12.1** | **79** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              borderLeft: {
                description:
                  "The **`border-left`** shorthand CSS property sets all the properties of an element's left border.\n\n**Syntax**: `<line-width> || <line-style> || <color>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              borderRadius: {
                description:
                  "The **`border-radius`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n\n**Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`\n\n| Chrome  | Firefox | Safari  |  Edge  |  IE   |\n| :-----: | :-----: | :-----: | :----: | :---: |\n|  **4**  |  **4**  |  **5**  | **12** | **9** |\n| 1 _-x-_ |         | 3 _-x-_ |        |       |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              borderRight: {
                description:
                  "The **`border-right`** shorthand CSS property sets all the properties of an element's right border.\n\n**Syntax**: `<line-width> || <line-style> || <color>`\n\n| Chrome | Firefox | Safari |  Edge  |   IE    |\n| :----: | :-----: | :----: | :----: | :-----: |\n| **1**  |  **1**  | **1**  | **12** | **5.5** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              borderStyle: {
                description:
                  "The **`border-style`** shorthand CSS property sets the line style for all four sides of an element's border.\n\n**Syntax**: `<line-style>{1,4}`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'dashed',
                      'dotted',
                      'double',
                      'groove',
                      'hidden',
                      'inherit',
                      'initial',
                      'inset',
                      'none',
                      'outset',
                      'revert',
                      'ridge',
                      'solid',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              borderTop: {
                description:
                  "The **`border-top`** shorthand CSS property sets all the properties of an element's top border.\n\n**Syntax**: `<line-width> || <line-style> || <color>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              borderWidth: {
                description:
                  "The **`border-width`** shorthand CSS property sets the width of an element's border.\n\n**Syntax**: `<line-width>{1,4}`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              columnRule: {
                description:
                  "The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>`\n\n| Chrome  | Firefox | Safari  |  Edge  |   IE   |\n| :-----: | :-----: | :-----: | :----: | :----: |\n| **50**  | **52**  |  **9**  | **12** | **10** |\n| 1 _-x-_ |         | 3 _-x-_ |        |        |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              columns: {
                description:
                  "The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.\n\n**Syntax**: `<'column-width'> || <'column-count'>`\n\n| Chrome | Firefox | Safari  |  Edge  |   IE   |\n| :----: | :-----: | :-----: | :----: | :----: |\n| **50** | **52**  |  **9**  | **12** | **10** |\n|        |         | 3 _-x-_ |        |        |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              flex: {
                description:
                  "The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n\n**Syntax**: `none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]`\n\n|  Chrome  | Firefox |  Safari   |  Edge  |    IE    |\n| :------: | :-----: | :-------: | :----: | :------: |\n|  **29**  | **20**  |   **9**   | **12** |  **11**  |\n| 21 _-x-_ |         | 6.1 _-x-_ |        | 10 _-x-_ |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'content',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              flexFlow: {
                description:
                  "The **`flex-flow`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.\n\n**Syntax**: `<'flex-direction'> || <'flex-wrap'>`\n\n|  Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :------: | :-----: | :-------: | :----: | :----: |\n|  **29**  | **28**  |   **9**   | **12** | **11** |\n| 21 _-x-_ |         | 6.1 _-x-_ |        |        |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'column',
                      'column-reverse',
                      'inherit',
                      'initial',
                      'nowrap',
                      'revert',
                      'row',
                      'row-reverse',
                      'unset',
                      'wrap',
                      'wrap-reverse',
                    ],
                    type: 'string',
                  },
                ],
              },
              font: {
                description:
                  "The **`font`** CSS shorthand property sets all the different properties of an element's font. Alternatively, it sets an element's font to a system font.\n\n**Syntax**: `[ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'caption',
                      'icon',
                      'inherit',
                      'initial',
                      'menu',
                      'message-box',
                      'revert',
                      'small-caption',
                      'status-bar',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gap: {
                description:
                  "The **`gap`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for `row-gap` and `column-gap`.\n\n**Syntax**: `<'row-gap'> <'column-gap'>?`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **84** | **63**  |   No   | **84** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n|     Chrome      |     Firefox     |      Safari       |  Edge  | IE  |\n| :-------------: | :-------------: | :---------------: | :----: | :-: |\n|     **66**      |     **61**      |      **12**       | **16** | No  |\n| 57 _(grid-gap)_ | 52 _(grid-gap)_ | 10.1 _(grid-gap)_ |        |     |\n\n---\n\n_Supported in Multi-column Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **66** | **61**  |   No   | **16** | No  |\n\n---",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              grid: {
                description:
                  "The **`grid`** CSS property is a shorthand property that sets all of the explicit and implicit grid properties in a single declaration.\n\n**Syntax**: `<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gridArea: {
                description:
                  'The **`grid-area`** CSS shorthand property specifies a grid item’s size and location within a grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.\n\n**Syntax**: `<grid-line> [ / <grid-line> ]{0,3}`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gridColumn: {
                description:
                  "The **`grid-column`** CSS shorthand property specifies a grid item's size and location within a grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.\n\n**Syntax**: `<grid-line> [ / <grid-line> ]?`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gridRow: {
                description:
                  'The **`grid-row`** CSS shorthand property specifies a grid item’s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.\n\n**Syntax**: `<grid-line> [ / <grid-line> ]?`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gridTemplate: {
                description:
                  "The **`grid-template`** CSS property is a shorthand property for defining grid columns, rows, and areas.\n\n**Syntax**: `none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?`\n\n| Chrome | Firefox |  Safari  |  Edge  | IE  |\n| :----: | :-----: | :------: | :----: | :-: |\n| **57** | **52**  | **10.1** | **16** | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              lineClamp: {
                description:
                  '**Syntax**: `none | <integer>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              listStyle: {
                description:
                  "The **`list-style`** CSS shorthand property allows you set all the list style properties at once.\n\n**Syntax**: `<'list-style-type'> || <'list-style-position'> || <'list-style-image'>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'inside',
                      'none',
                      'outside',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              margin: {
                description:
                  'The **`margin`** CSS property sets the margin area on all four sides of an element. It is a shorthand for `margin-top`, `margin-right`, `margin-bottom`, and `margin-left`.\n\n**Syntax**: `[ <length> | <percentage> | auto ]{1,4}`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              mask: {
                description:
                  'The **`mask`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.\n\n**Syntax**: `<mask-layer>#`\n\n| Chrome | Firefox | Safari  |  Edge  | IE  |\n| :----: | :-----: | :-----: | :----: | :-: |\n| **1**  |  **2**  | **3.2** | **12** | No  |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'add',
                      'alpha',
                      'border-box',
                      'bottom',
                      'center',
                      'content-box',
                      'exclude',
                      'fill-box',
                      'inherit',
                      'initial',
                      'intersect',
                      'left',
                      'luminance',
                      'margin-box',
                      'match-source',
                      'no-clip',
                      'no-repeat',
                      'none',
                      'padding-box',
                      'repeat',
                      'repeat-x',
                      'repeat-y',
                      'revert',
                      'right',
                      'round',
                      'space',
                      'stroke-box',
                      'subtract',
                      'top',
                      'unset',
                      'view-box',
                    ],
                  },
                ],
              },
              maskBorder: {
                description:
                  "The **`mask-border`** CSS shorthand property lets you create a mask along the edge of an element's border.\n\n**Syntax**: `<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'alpha',
                      'inherit',
                      'initial',
                      'luminance',
                      'none',
                      'repeat',
                      'revert',
                      'round',
                      'space',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              motion: {
                description:
                  "The **`offset`** CSS shorthand property sets all the properties required for animating an element along a defined path.\n\n**Syntax**: `[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?`\n\n|    Chrome     | Firefox | Safari |  Edge  | IE  |\n| :-----------: | :-----: | :----: | :----: | :-: |\n|    **55**     | **72**  |   No   | **79** | No  |\n| 46 _(motion)_ |         |        |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'border-box',
                      'bottom',
                      'center',
                      'content-box',
                      'fill-box',
                      'inherit',
                      'initial',
                      'left',
                      'margin-box',
                      'none',
                      'padding-box',
                      'revert',
                      'right',
                      'stroke-box',
                      'top',
                      'unset',
                      'view-box',
                    ],
                  },
                ],
              },
              offset: {
                description:
                  "The **`offset`** CSS shorthand property sets all the properties required for animating an element along a defined path.\n\n**Syntax**: `[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?`\n\n|    Chrome     | Firefox | Safari |  Edge  | IE  |\n| :-----------: | :-----: | :----: | :----: | :-: |\n|    **55**     | **72**  |   No   | **79** | No  |\n| 46 _(motion)_ |         |        |        |     |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'border-box',
                      'bottom',
                      'center',
                      'content-box',
                      'fill-box',
                      'inherit',
                      'initial',
                      'left',
                      'margin-box',
                      'none',
                      'padding-box',
                      'revert',
                      'right',
                      'stroke-box',
                      'top',
                      'unset',
                      'view-box',
                    ],
                  },
                ],
              },
              outline: {
                description:
                  "The **`outline`** CSS shorthand property set all the outline properties in a single declaration.\n\n**Syntax**: `[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]`\n\n| Chrome | Firefox | Safari  |  Edge  |  IE   |\n| :----: | :-----: | :-----: | :----: | :---: |\n| **1**  | **1.5** | **1.2** | **12** | **8** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'auto',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'invert',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              overflow: {
                description:
                  "The **`overflow`** CSS shorthand property sets the desired behavior for an element's overflow — i.e. when an element's content is too big to fit in its block formatting context — in both directions.\n\n**Syntax**: `[ visible | hidden | clip | scroll | auto ]{1,2}`\n\n**Initial value**: `visible`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-hidden-unscrollable',
                      '-moz-initial',
                      'auto',
                      'clip',
                      'hidden',
                      'inherit',
                      'initial',
                      'revert',
                      'scroll',
                      'unset',
                      'visible',
                    ],
                    type: 'string',
                  },
                ],
              },
              padding: {
                description:
                  'The **`padding`** CSS shorthand property sets the padding area on all four sides of an element at once.\n\n**Syntax**: `[ <length> | <percentage> ]{1,4}`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **4** |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              placeItems: {
                description:
                  "The CSS **`place-items`** shorthand property allows you to align items along both the block and inline directions at once (i.e. the `align-items` and `justify-items` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not set, the first value is also used for it.\n\n**Syntax**: `<'align-items'> <'justify-items'>?`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **45**  | **11** | **79** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **45**  | **11** | **79** | No  |\n\n---",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'self-end',
                      'self-start',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              placeSelf: {
                description:
                  "The **`place-self`** CSS shorthand property allows you to align an individual item in both the block and inline directions at once (i.e. the `align-self` and `justify-self` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not present, the first value is also used for it.\n\n**Syntax**: `<'align-self'> <'justify-self'>?`\n\n---\n\n_Supported in Flex Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **45**  | **11** | **79** | No  |\n\n---\n\n_Supported in Grid Layout_\n\n| Chrome | Firefox | Safari |  Edge  | IE  |\n| :----: | :-----: | :----: | :----: | :-: |\n| **59** | **45**  | **11** | **79** | No  |\n\n---",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'self-end',
                      'self-start',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              textDecoration: {
                description:
                  "The **`text-decoration`** shorthand CSS property sets the appearance of decorative lines on text. It is a shorthand for `text-decoration-line`, `text-decoration-color`, `text-decoration-style`, and the newer `text-decoration-thickness` property.\n\n**Syntax**: `<'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'> || <'text-decoration-thickness'>`\n\n| Chrome | Firefox | Safari |  Edge  |  IE   |\n| :----: | :-----: | :----: | :----: | :---: |\n| **1**  |  **1**  | **1**  | **12** | **3** |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'auto',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blink',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'from-font',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'grammar-error',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'line-through',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'overline',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'spelling-error',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'underline',
                      'unset',
                      'violet',
                      'wavy',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              textEmphasis: {
                description:
                  "The **`text-emphasis`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for `text-emphasis-style` and `text-emphasis-color`.\n\n**Syntax**: `<'text-emphasis-style'> || <'text-emphasis-color'>`\n\n|    Chrome    | Firefox | Safari  |     Edge     | IE  |\n| :----------: | :-----: | :-----: | :----------: | :-: |\n| **25** _-x-_ | **46**  | **6.1** | **79** _-x-_ | No  |",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'circle',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dot',
                      'double-circle',
                      'filled',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'open',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sesame',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'triangle',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              transition: {
                description:
                  'The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n\n**Syntax**: `<single-transition>#`\n\n| Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n| :-----: | :-----: | :-------: | :----: | :----: |\n| **26**  | **16**  |   **9**   | **12** | **10** |\n| 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'all',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'none',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozAnimationDelay: {
                description:
                  'The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozAnimationDirection: {
                description:
                  'The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n\n**Syntax**: `<single-animation-direction>#`\n\n**Initial value**: `normal`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'alternate',
                      'alternate-reverse',
                      'inherit',
                      'initial',
                      'normal',
                      'reverse',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozAnimationDuration: {
                description:
                  'The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozAnimationFillMode: {
                description:
                  'The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n\n**Syntax**: `<single-animation-fill-mode>#`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'backwards',
                      'both',
                      'forwards',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozAnimationIterationCount: {
                description:
                  'The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n\n**Syntax**: `<single-animation-iteration-count>#`\n\n**Initial value**: `1`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'infinite',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozAnimationName: {
                description:
                  'The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n\n**Syntax**: `[ none | <keyframes-name> ]#`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozAnimationPlayState: {
                description:
                  'The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n\n**Syntax**: `<single-animation-play-state>#`\n\n**Initial value**: `running`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'paused',
                      'revert',
                      'running',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozAnimationTimingFunction: {
                description:
                  'The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozAppearance: {
                description:
                  "The `**appearance**` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n\n**Syntax**: `none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized`\n\n**Initial value**: `none` (but this value is overridden in the user agent CSS)",
                enum: [
                  '-moz-initial',
                  '-moz-mac-unified-toolbar',
                  '-moz-win-borderless-glass',
                  '-moz-win-browsertabbar-toolbox',
                  '-moz-win-communications-toolbox',
                  '-moz-win-communicationstext',
                  '-moz-win-exclude-glass',
                  '-moz-win-glass',
                  '-moz-win-media-toolbox',
                  '-moz-win-mediatext',
                  '-moz-window-button-box',
                  '-moz-window-button-box-maximized',
                  '-moz-window-button-close',
                  '-moz-window-button-maximize',
                  '-moz-window-button-minimize',
                  '-moz-window-button-restore',
                  '-moz-window-frame-bottom',
                  '-moz-window-frame-left',
                  '-moz-window-frame-right',
                  '-moz-window-titlebar',
                  '-moz-window-titlebar-maximized',
                  'button',
                  'button-arrow-down',
                  'button-arrow-next',
                  'button-arrow-previous',
                  'button-arrow-up',
                  'button-bevel',
                  'button-focus',
                  'caret',
                  'checkbox',
                  'checkbox-container',
                  'checkbox-label',
                  'checkmenuitem',
                  'dualbutton',
                  'groupbox',
                  'inherit',
                  'initial',
                  'listbox',
                  'listitem',
                  'menuarrow',
                  'menubar',
                  'menucheckbox',
                  'menuimage',
                  'menuitem',
                  'menuitemtext',
                  'menulist',
                  'menulist-button',
                  'menulist-text',
                  'menulist-textfield',
                  'menupopup',
                  'menuradio',
                  'menuseparator',
                  'meterbar',
                  'meterchunk',
                  'none',
                  'progressbar',
                  'progressbar-vertical',
                  'progresschunk',
                  'progresschunk-vertical',
                  'radio',
                  'radio-container',
                  'radio-label',
                  'radiomenuitem',
                  'range',
                  'range-thumb',
                  'resizer',
                  'resizerpanel',
                  'revert',
                  'scale-horizontal',
                  'scale-vertical',
                  'scalethumb-horizontal',
                  'scalethumb-vertical',
                  'scalethumbend',
                  'scalethumbstart',
                  'scalethumbtick',
                  'scrollbarbutton-down',
                  'scrollbarbutton-left',
                  'scrollbarbutton-right',
                  'scrollbarbutton-up',
                  'scrollbarthumb-horizontal',
                  'scrollbarthumb-vertical',
                  'scrollbartrack-horizontal',
                  'scrollbartrack-vertical',
                  'searchfield',
                  'separator',
                  'sheet',
                  'spinner',
                  'spinner-downbutton',
                  'spinner-textfield',
                  'spinner-upbutton',
                  'splitter',
                  'statusbar',
                  'statusbarpanel',
                  'tab',
                  'tab-scroll-arrow-back',
                  'tab-scroll-arrow-forward',
                  'tabpanel',
                  'tabpanels',
                  'textfield',
                  'textfield-multiline',
                  'toolbar',
                  'toolbarbutton',
                  'toolbarbutton-dropdown',
                  'toolbargripper',
                  'toolbox',
                  'tooltip',
                  'treeheader',
                  'treeheadercell',
                  'treeheadersortarrow',
                  'treeitem',
                  'treeline',
                  'treetwisty',
                  'treetwistyopen',
                  'treeview',
                  'unset',
                ],
                type: 'string',
              },
              MozBackfaceVisibility: {
                description:
                  'The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n\n**Syntax**: `visible | hidden`\n\n**Initial value**: `visible`',
                enum: [
                  '-moz-initial',
                  'hidden',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                  'visible',
                ],
                type: 'string',
              },
              MozBorderBottomColors: {
                description:
                  'In Mozilla applications like Firefox, the **`-moz-border-bottom-colors`** CSS property sets a list of colors for the bottom border.\n\n**Syntax**: `<color>+ | none`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBorderEndColor: {
                description:
                  "The **`border-inline-end-color`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBorderEndStyle: {
                description:
                  "The **`border-inline-end-style`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              MozBorderEndWidth: {
                description:
                  "The **`border-inline-end-width`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-width'>`\n\n**Initial value**: `medium`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              MozBorderLeftColors: {
                description:
                  'In Mozilla applications like Firefox, the **`-moz-border-left-colors`** CSS property sets a list of colors for the left border.\n\n**Syntax**: `<color>+ | none`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBorderRightColors: {
                description:
                  'In Mozilla applications like Firefox, the **`-moz-border-right-colors`** CSS property sets a list of colors for the right border.\n\n**Syntax**: `<color>+ | none`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBorderStartColor: {
                description:
                  "The **`border-inline-start-color`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-color'>`\n\n**Initial value**: `currentcolor`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBorderStartStyle: {
                description:
                  "The **`border-inline-start-style`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'border-top-style'>`\n\n**Initial value**: `none`",
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'groove',
                  'hidden',
                  'inherit',
                  'initial',
                  'inset',
                  'none',
                  'outset',
                  'revert',
                  'ridge',
                  'solid',
                  'unset',
                ],
                type: 'string',
              },
              MozBorderTopColors: {
                description:
                  'In Mozilla applications like Firefox, the **`-moz-border-top-colors`** CSS property sets a list of colors for the top border.\n\n**Syntax**: `<color>+ | none`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBoxSizing: {
                description:
                  'The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n\n**Syntax**: `content-box | border-box`\n\n**Initial value**: `content-box`',
                enum: [
                  '-moz-initial',
                  'border-box',
                  'content-box',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              MozColumnCount: {
                description:
                  "The **`column-count`** CSS property breaks an element's content into the specified number of columns.\n\n**Syntax**: `<integer> | auto`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozColumnFill: {
                description:
                  "The **`column-fill`** CSS property controls how an element's contents are balanced when broken into columns.\n\n**Syntax**: `auto | balance | balance-all`\n\n**Initial value**: `balance`",
                enum: [
                  '-moz-initial',
                  'auto',
                  'balance',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              MozColumnGap: {
                description:
                  "The **`column-gap`** CSS property sets the size of the gap (gutter) between an element's columns.\n\n**Syntax**: `normal | <length-percentage>`\n\n**Initial value**: `normal`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozColumnRuleColor: {
                description:
                  'The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozColumnRuleStyle: {
                description:
                  "The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-style'>`\n\n**Initial value**: `none`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'dashed',
                      'dotted',
                      'double',
                      'groove',
                      'hidden',
                      'inherit',
                      'initial',
                      'inset',
                      'none',
                      'outset',
                      'revert',
                      'ridge',
                      'solid',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozColumnRuleWidth: {
                description:
                  "The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-width'>`\n\n**Initial value**: `medium`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              MozColumnWidth: {
                description:
                  "The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.\n\n**Syntax**: `<length> | auto`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozContextProperties: {
                description:
                  'The `**-moz-context-properties**` property can be used within privileged contexts in Firefox to share the values of specified properties of the element with a child SVG image.\n\n**Syntax**: `none | [ fill | fill-opacity | stroke | stroke-opacity ]#`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'fill',
                      'fill-opacity',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'stroke',
                      'stroke-opacity',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozFontFeatureSettings: {
                description:
                  'The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n\n**Syntax**: `normal | <feature-tag-value>#`\n\n**Initial value**: `normal`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozFontLanguageOverride: {
                description:
                  'The **`font-language-override`** CSS property controls the use of language-specific glyphs in a typeface.\n\n**Syntax**: `normal | <string>`\n\n**Initial value**: `normal`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozHyphens: {
                description:
                  'The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n\n**Syntax**: `none | manual | auto`\n\n**Initial value**: `manual`',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'manual',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              MozImageRegion: {
                description:
                  'For certain XUL elements and pseudo-elements that use an image from the `list-style-image` property, this property specifies a region of the image that is used in place of the whole image. This allows elements to use different pieces of the same image to improve performance.\n\n**Syntax**: `<shape> | auto`\n\n**Initial value**: `auto`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozMarginEnd: {
                description:
                  "The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozMarginStart: {
                description:
                  "The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozOrient: {
                description:
                  "The **`-moz-orient`** CSS property specifies the orientation of the element to which it's applied.\n\n**Syntax**: `inline | block | horizontal | vertical`\n\n**Initial value**: `inline`",
                enum: [
                  '-moz-initial',
                  'block',
                  'horizontal',
                  'inherit',
                  'initial',
                  'inline',
                  'revert',
                  'unset',
                  'vertical',
                ],
                type: 'string',
              },
              MozOsxFontSmoothing: {
                description:
                  'The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n\n**Syntax**: `auto | never | always | <absolute-size> | <length>`\n\n**Initial value**: `auto`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'always',
                      'auto',
                      'inherit',
                      'initial',
                      'large',
                      'medium',
                      'never',
                      'revert',
                      'small',
                      'unset',
                      'x-large',
                      'x-small',
                      'xx-large',
                      'xx-small',
                      'xxx-large',
                    ],
                  },
                ],
              },
              MozPaddingEnd: {
                description:
                  "The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozPaddingStart: {
                description:
                  "The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozPerspective: {
                description:
                  'The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n\n**Syntax**: `none | <length>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozPerspectiveOrigin: {
                description:
                  'The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n\n**Syntax**: `<position>`\n\n**Initial value**: `50% 50%`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              MozStackSizing: {
                description:
                  '**`-moz-stack-sizing`** is an extended CSS property. Normally, a `<xul:stack>` will change its size so that all of its child elements are completely visible. For example, moving a child of the stack far to the right will widen the stack so the child remains visible.\n\n**Syntax**: `ignore | stretch-to-fit`\n\n**Initial value**: `stretch-to-fit`',
                enum: [
                  '-moz-initial',
                  'ignore',
                  'inherit',
                  'initial',
                  'revert',
                  'stretch-to-fit',
                  'unset',
                ],
                type: 'string',
              },
              MozTabSize: {
                description:
                  'The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n\n**Syntax**: `<integer> | <length>`\n\n**Initial value**: `8`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozTextBlink: {
                description:
                  'The **`-moz-text-blink`** non-standard Mozilla CSS extension specifies the blink mode.\n\n**Syntax**: `none | blink`\n\n**Initial value**: `none`',
                enum: [
                  '-moz-initial',
                  'blink',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              MozTextSizeAdjust: {
                description:
                  'The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n\n**Syntax**: `none | auto | <percentage>`\n\n**Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozTransformOrigin: {
                description:
                  "The **`transform-origin`** CSS property sets the origin for an element's transformations.\n\n**Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n\n**Initial value**: `50% 50% 0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              MozTransformStyle: {
                description:
                  'The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n\n**Syntax**: `flat | preserve-3d`\n\n**Initial value**: `flat`',
                enum: [
                  '-moz-initial',
                  'flat',
                  'inherit',
                  'initial',
                  'preserve-3d',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              MozTransitionDelay: {
                description:
                  "The **`transition-delay`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozTransitionDuration: {
                description:
                  'The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozTransitionProperty: {
                description:
                  'The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n\n**Syntax**: `none | <single-transition-property>#`\n\n**Initial value**: all',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'all',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozTransitionTimingFunction: {
                description:
                  'The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozUserFocus: {
                description:
                  'The **`-moz-user-focus`** CSS property is used to indicate whether an element can have the focus.\n\n**Syntax**: `ignore | normal | select-after | select-before | select-menu | select-same | select-all | none`\n\n**Initial value**: `none`',
                enum: [
                  '-moz-initial',
                  'ignore',
                  'inherit',
                  'initial',
                  'none',
                  'normal',
                  'revert',
                  'select-after',
                  'select-all',
                  'select-before',
                  'select-menu',
                  'select-same',
                  'unset',
                ],
                type: 'string',
              },
              MozUserModify: {
                description:
                  'The **`user-modify`** property has no effect in Firefox. It was originally planned to determine whether or not the content of an element can be edited by a user.\n\n**Syntax**: `read-only | read-write | write-only`\n\n**Initial value**: `read-only`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'read-only',
                  'read-write',
                  'revert',
                  'unset',
                  'write-only',
                ],
                type: 'string',
              },
              MozUserSelect: {
                description:
                  "The `**user-select**` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.\n\n**Syntax**: `auto | text | none | contain | all`\n\n**Initial value**: `auto`",
                enum: [
                  '-moz-initial',
                  '-moz-none',
                  'all',
                  'auto',
                  'contain',
                  'element',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'text',
                  'unset',
                ],
                type: 'string',
              },
              MozWindowDragging: {
                description:
                  'The **`-moz-window-dragging`** CSS property specifies whether a window is draggable or not. It only works in Chrome code, and only on Mac OS X.\n\n**Syntax**: `drag | no-drag`\n\n**Initial value**: `drag`',
                enum: [
                  '-moz-initial',
                  'drag',
                  'inherit',
                  'initial',
                  'no-drag',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              MozWindowShadow: {
                description:
                  'The **`-moz-window-shadow`** CSS property specifies whether a window will have a shadow. It only works on Mac OS X.\n\n**Syntax**: `default | menu | tooltip | sheet | none`\n\n**Initial value**: `default`',
                enum: [
                  '-moz-initial',
                  'default',
                  'inherit',
                  'initial',
                  'menu',
                  'none',
                  'revert',
                  'sheet',
                  'tooltip',
                  'unset',
                ],
                type: 'string',
              },
              msAccelerator: {
                description:
                  'The **`-ms-accelerator`** CSS property is a Microsoft extension that sets or retrieves a string indicating whether the object represents a keyboard shortcut.\n\n**Syntax**: `false | true`\n\n**Initial value**: `false`',
                enum: [
                  '-moz-initial',
                  'false',
                  'inherit',
                  'initial',
                  'revert',
                  'true',
                  'unset',
                ],
                type: 'string',
              },
              msAlignSelf: {
                description:
                  "The **`align-self`** CSS property overrides a grid or flex item's `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n\n**Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'self-end',
                      'self-start',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msBlockProgression: {
                description:
                  'The **`-ms-block-progression`** CSS property is a Microsoft extension that specifies the block progression and layout orientation.\n\n**Syntax**: `tb | rl | bt | lr`\n\n**Initial value**: `tb`',
                enum: [
                  '-moz-initial',
                  'bt',
                  'inherit',
                  'initial',
                  'lr',
                  'revert',
                  'rl',
                  'tb',
                  'unset',
                ],
                type: 'string',
              },
              msContentZoomChaining: {
                description:
                  'The **`-ms-content-zoom-chaining`** CSS property is a Microsoft extension specifying the zoom behavior that occurs when a user hits the zoom limit during page manipulation.\n\n**Syntax**: `none | chained`\n\n**Initial value**: `none`',
                enum: [
                  '-moz-initial',
                  'chained',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msContentZoomLimitMax: {
                description:
                  "The **`-ms-content-zoom-limit-max`** CSS property is a Microsoft extension that specifies the selected elements' maximum zoom factor.\n\n**Syntax**: `<percentage>`\n\n**Initial value**: `400%`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msContentZoomLimitMin: {
                description:
                  'The **`-ms-content-zoom-limit-min`** CSS property is a Microsoft extension that specifies the minimum zoom factor.\n\n**Syntax**: `<percentage>`\n\n**Initial value**: `100%`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msContentZoomSnapPoints: {
                description:
                  'The **`-ms-content-zoom-snap-points`** CSS property is a Microsoft extension that specifies where zoom snap-points are located.\n\n**Syntax**: `snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )`\n\n**Initial value**: `snapInterval(0%, 100%)`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msContentZoomSnapType: {
                description:
                  'The **`-ms-content-zoom-snap-type`** CSS property is a Microsoft extension that specifies how zooming is affected by defined snap-points.\n\n**Syntax**: `none | proximity | mandatory`\n\n**Initial value**: `none`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'mandatory',
                  'none',
                  'proximity',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msContentZooming: {
                description:
                  'The **`-ms-content-zooming`** CSS property is a Microsoft extension that specifies whether zooming is enabled.\n\n**Syntax**: `none | zoom`\n\n**Initial value**: zoom for the top level element, none for all other elements',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                  'zoom',
                ],
                type: 'string',
              },
              msFilter: {
                description:
                  'The `-ms-filter` CSS property is a Microsoft extension that sets or retrieves the filter or collection of filters applied to an object.\n\n**Syntax**: `<string>`\n\n**Initial value**: "" (the empty string)',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msFlexDirection: {
                description:
                  'The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n\n**Syntax**: `row | row-reverse | column | column-reverse`\n\n**Initial value**: `row`',
                enum: [
                  '-moz-initial',
                  'column',
                  'column-reverse',
                  'inherit',
                  'initial',
                  'revert',
                  'row',
                  'row-reverse',
                  'unset',
                ],
                type: 'string',
              },
              msFlexPositive: {
                description:
                  'The **`flex-grow`** CSS property sets the flex grow factor of a flex item main size.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msFlowFrom: {
                description:
                  'The **`-ms-flow-from`** CSS property is a Microsoft extension that gets or sets a value identifying a region container in the document that accepts the content flow from the data source.\n\n**Syntax**: `[ none | <custom-ident> ]#`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msFlowInto: {
                description:
                  "The **`-ms-flow-into`** CSS property is a Microsoft extension that gets or sets a value identifying an iframe container in the document that serves as the region's data source.\n\n**Syntax**: `[ none | <custom-ident> ]#`\n\n**Initial value**: `none`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msGridColumns: {
                description:
                  'The **`grid-template-columns`** CSS property defines the line names and track sizing functions of the grid columns.\n\n**Syntax**: `none | <track-list> | <auto-track-list>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              msGridRows: {
                description:
                  'The **`grid-template-rows`** CSS property defines the line names and track sizing functions of the grid rows.\n\n**Syntax**: `none | <track-list> | <auto-track-list>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              msHighContrastAdjust: {
                description:
                  'The **`-ms-high-contrast-adjust`** CSS property is a Microsoft extension that gets or sets a value indicating whether to override any CSS properties that would have been set in high contrast mode.\n\n**Syntax**: `auto | none`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msHyphenateLimitChars: {
                description:
                  'The **`-ms-hyphenate-limit-chars`** CSS property is a Microsoft extension that specifies one to three values indicating the minimum number of characters in a hyphenated word. If the word does not meet the required minimum number of characters in the word, before the hyphen, or after the hyphen, then the word is not hyphenated.\n\n**Syntax**: `auto | <integer>{1,3}`\n\n**Initial value**: `auto`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msHyphenateLimitLines: {
                description:
                  'The **`-ms-hyphenate-limit-lines`** CSS property is a Microsoft extension specifying the maximum number of consecutive lines in an element that may be ended with a hyphenated word.\n\n**Syntax**: `no-limit | <integer>`\n\n**Initial value**: `no-limit`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'no-limit',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msHyphenateLimitZone: {
                description:
                  'The `**-ms-hyphenate-limit-zone**` CSS property is a Microsoft extension specifying the width of the hyphenation zone.\n\n**Syntax**: `<percentage> | <length>`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              msHyphens: {
                description:
                  'The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n\n**Syntax**: `none | manual | auto`\n\n**Initial value**: `manual`',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'manual',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msImeAlign: {
                description:
                  'The **`-ms-ime-align`** CSS property is a Microsoft extension aligning the Input Method Editor (IME) candidate window box relative to the element on which the IME composition is active. The extension is implemented in Microsoft Edge and Internet Explorer 11.\n\n**Syntax**: `auto | after`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'after',
                  'auto',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msJustifySelf: {
                description:
                  'The CSS **`justify-self`** property sets the way a box is justified inside its alignment container along the appropriate axis.\n\n**Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]`\n\n**Initial value**: `auto`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'left',
                      'normal',
                      'revert',
                      'right',
                      'self-end',
                      'self-start',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msLineBreak: {
                description:
                  'The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n\n**Syntax**: `auto | loose | normal | strict | anywhere`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'anywhere',
                  'auto',
                  'inherit',
                  'initial',
                  'loose',
                  'normal',
                  'revert',
                  'strict',
                  'unset',
                ],
                type: 'string',
              },
              msOrder: {
                description:
                  'The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msOverflowStyle: {
                description:
                  'The **`-ms-overflow-style`** CSS property is a Microsoft extension controlling the behavior of scrollbars when the content of an element overflows.\n\n**Syntax**: `auto | none | scrollbar | -ms-autohiding-scrollbar`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  '-ms-autohiding-scrollbar',
                  'auto',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'scrollbar',
                  'unset',
                ],
                type: 'string',
              },
              msOverflowX: {
                description:
                  "The **`overflow-x`** CSS property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content.\n\n**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `visible`",
                enum: [
                  '-moz-hidden-unscrollable',
                  '-moz-initial',
                  'auto',
                  'clip',
                  'hidden',
                  'inherit',
                  'initial',
                  'revert',
                  'scroll',
                  'unset',
                  'visible',
                ],
                type: 'string',
              },
              msOverflowY: {
                description:
                  "The **`overflow-y`** CSS property sets what shows when content overflows a block-level element's top and bottom edges. This may be nothing, a scroll bar, or the overflow content.\n\n**Syntax**: `visible | hidden | clip | scroll | auto`\n\n**Initial value**: `visible`",
                enum: [
                  '-moz-hidden-unscrollable',
                  '-moz-initial',
                  'auto',
                  'clip',
                  'hidden',
                  'inherit',
                  'initial',
                  'revert',
                  'scroll',
                  'unset',
                  'visible',
                ],
                type: 'string',
              },
              msScrollChaining: {
                description:
                  'The `**-ms-scroll-chaining**` CSS property is a Microsoft extension that specifies the scrolling behavior that occurs when a user hits the scroll limit during a manipulation.\n\n**Syntax**: `chained | none`\n\n**Initial value**: `chained`',
                enum: [
                  '-moz-initial',
                  'chained',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msScrollLimitXMax: {
                description:
                  'The `**-ms-scroll-limit-x-max**` CSS property is a Microsoft extension that specifies the maximum value for the `Element.scrollLeft` property.\n\n**Syntax**: `auto | <length>`\n\n**Initial value**: `auto`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              msScrollLimitXMin: {
                description:
                  'The **`-ms-scroll-limit-x-min`** CSS property is a Microsoft extension that specifies the minimum value for the `Element.scrollLeft` property.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              msScrollLimitYMax: {
                description:
                  'The **`-ms-scroll-limit-y-max`** CSS property is a Microsoft extension that specifies the maximum value for the `Element.scrollTop` property.\n\n**Syntax**: `auto | <length>`\n\n**Initial value**: `auto`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              msScrollLimitYMin: {
                description:
                  'The **`-ms-scroll-limit-y-min`** CSS property is a Microsoft extension that specifies the minimum value for the `Element.scrollTop` property.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              msScrollRails: {
                description:
                  'The **`-ms-scroll-rails`** CSS property is a Microsoft extension that specifies whether scrolling locks to the primary axis of motion.\n\n**Syntax**: `none | railed`\n\n**Initial value**: `railed`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'none',
                  'railed',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msScrollSnapPointsX: {
                description:
                  'The **`-ms-scroll-snap-points-x`** CSS property is a Microsoft extension that specifies where snap-points will be located along the x-axis.\n\n**Syntax**: `snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )`\n\n**Initial value**: `snapInterval(0px, 100%)`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msScrollSnapPointsY: {
                description:
                  'The **`-ms-scroll-snap-points-y`** CSS property is a Microsoft extension that specifies where snap-points will be located along the y-axis.\n\n**Syntax**: `snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )`\n\n**Initial value**: `snapInterval(0px, 100%)`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msScrollSnapType: {
                description:
                  'The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n\n**Syntax**: `none | proximity | mandatory`\n\n**Initial value**: `none`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'mandatory',
                  'none',
                  'proximity',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msScrollTranslation: {
                description:
                  'The **`-ms-scroll-translation`** CSS property is a Microsoft extension that specifies whether vertical-to-horizontal scroll wheel translation occurs on the specified element.\n\n**Syntax**: `none | vertical-to-horizontal`\n\n**Initial value**: `none`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                  'vertical-to-horizontal',
                ],
                type: 'string',
              },
              msScrollbar3dlightColor: {
                description:
                  'The **`-ms-scrollbar-3dlight-color`** CSS property is a Microsoft extension specifying the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\n\n**Syntax**: `<color>`\n\n**Initial value**: depends on user agent',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              msScrollbarArrowColor: {
                description:
                  'The **`-ms-scrollbar-arrow-color`** CSS property is a Microsoft extension that specifies the color of the arrow elements of a scroll arrow.\n\n**Syntax**: `<color>`\n\n**Initial value**: `ButtonText`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              msScrollbarBaseColor: {
                description:
                  'The `**-ms-scrollbar-base-color**` CSS property is a Microsoft extension that specifies the base color of the main elements of a scroll bar.\n\n**Syntax**: `<color>`\n\n**Initial value**: depends on user agent',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              msScrollbarDarkshadowColor: {
                description:
                  "The **`-ms-scrollbar-darkshadow-color`** CSS property is a Microsoft extension that specifies the color of a scroll bar's gutter.\n\n**Syntax**: `<color>`\n\n**Initial value**: `ThreeDDarkShadow`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              msScrollbarFaceColor: {
                description:
                  'The `**-ms-scrollbar-face-color**` CSS property is a Microsoft extension that specifies the color of the scroll box and scroll arrows of a scroll bar.\n\n**Syntax**: `<color>`\n\n**Initial value**: `ThreeDFace`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              msScrollbarHighlightColor: {
                description:
                  'The `**-ms-scrollbar-highlight-color**` CSS property is a Microsoft extension that specifies the color of the slider tray, the top and left edges of the scroll box, and the scroll arrows of a scroll bar.\n\n**Syntax**: `<color>`\n\n**Initial value**: `ThreeDHighlight`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              msScrollbarShadowColor: {
                description:
                  'The **`-ms-scrollbar-shadow-color`** CSS property is a Microsoft extension that specifies the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.\n\n**Syntax**: `<color>`\n\n**Initial value**: `ThreeDDarkShadow`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              msTextAutospace: {
                description:
                  'The **`-ms-text-autospace`** CSS property is a Microsoft extension that specifies the autospacing and narrow space width adjustment of text.\n\n**Syntax**: `none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space`\n\n**Initial value**: `none`',
                enum: [
                  '-moz-initial',
                  'ideograph-alpha',
                  'ideograph-numeric',
                  'ideograph-parenthesis',
                  'ideograph-space',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msTextCombineHorizontal: {
                description:
                  'The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n\n**Syntax**: `none | all | [ digits <integer>? ]`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-ms-text-combine-horizontal',
                      'all',
                      'digits',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msTextOverflow: {
                description:
                  "The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('`…`'), or display a custom string.\n\n**Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n\n**Initial value**: `clip`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'clip',
                      'ellipsis',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msTouchAction: {
                description:
                  "The **`touch-action`** CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).\n\n**Syntax**: `auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-ms-manipulation',
                      '-ms-none',
                      '-ms-pinch-zoom',
                      'auto',
                      'inherit',
                      'initial',
                      'manipulation',
                      'none',
                      'pan-down',
                      'pan-left',
                      'pan-right',
                      'pan-up',
                      'pan-x',
                      'pan-y',
                      'pinch-zoom',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msTouchSelect: {
                description:
                  'The **`-ms-touch-select`** CSS property is a Microsoft extension that toggles the gripper visual elements that enable touch text selection.\n\n**Syntax**: `grippers | none`\n\n**Initial value**: `grippers`',
                enum: [
                  '-moz-initial',
                  'grippers',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msTransform: {
                description:
                  'The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n\n**Syntax**: `none | <transform-list>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msTransformOrigin: {
                description:
                  "The **`transform-origin`** CSS property sets the origin for an element's transformations.\n\n**Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n\n**Initial value**: `50% 50% 0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              msTransitionDelay: {
                description:
                  "The **`transition-delay`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msTransitionDuration: {
                description:
                  'The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msTransitionProperty: {
                description:
                  'The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n\n**Syntax**: `none | <single-transition-property>#`\n\n**Initial value**: all',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'all',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msTransitionTimingFunction: {
                description:
                  'The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msUserSelect: {
                description:
                  "The `**user-select**` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.\n\n**Syntax**: `none | element | text`\n\n**Initial value**: `text`",
                enum: [
                  '-moz-initial',
                  'element',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'text',
                  'unset',
                ],
                type: 'string',
              },
              msWordBreak: {
                description:
                  'The **`word-break`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.\n\n**Syntax**: `normal | break-all | keep-all | break-word`\n\n**Initial value**: `normal`',
                enum: [
                  '-moz-initial',
                  'break-all',
                  'break-word',
                  'inherit',
                  'initial',
                  'keep-all',
                  'normal',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msWrapFlow: {
                description:
                  'The **`-ms-wrap-flow`** CSS property is a Microsoft extension that specifies how exclusions impact inline content within block-level elements.\n\n**Syntax**: `auto | both | start | end | maximum | clear`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'auto',
                  'both',
                  'clear',
                  'end',
                  'inherit',
                  'initial',
                  'maximum',
                  'revert',
                  'start',
                  'unset',
                ],
                type: 'string',
              },
              msWrapMargin: {
                description:
                  'The **`-ms-wrap-margin`** CSS property is a Microsoft extension that specifies a margin that offsets the inner wrap shape from other shapes.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              msWrapThrough: {
                description:
                  'The **`-ms-wrap-through`** CSS property is a Microsoft extension that specifies how content should wrap around an exclusion element.\n\n**Syntax**: `wrap | none`\n\n**Initial value**: `wrap`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                  'wrap',
                ],
                type: 'string',
              },
              msWritingMode: {
                description:
                  'The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n\n**Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n\n**Initial value**: `horizontal-tb`',
                enum: [
                  '-moz-initial',
                  'horizontal-tb',
                  'inherit',
                  'initial',
                  'revert',
                  'sideways-lr',
                  'sideways-rl',
                  'unset',
                  'vertical-lr',
                  'vertical-rl',
                ],
                type: 'string',
              },
              OObjectFit: {
                description:
                  'The **`object-fit`** CSS property sets how the content of a replaced element, such as an `<img>` or `<video>`, should be resized to fit its container.\n\n**Syntax**: `fill | contain | cover | none | scale-down`\n\n**Initial value**: `fill`',
                enum: [
                  '-moz-initial',
                  'contain',
                  'cover',
                  'fill',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'scale-down',
                  'unset',
                ],
                type: 'string',
              },
              OObjectPosition: {
                description:
                  "The **`object-position`** CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background.\n\n**Syntax**: `<position>`\n\n**Initial value**: `50% 50%`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              OTabSize: {
                description:
                  'The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n\n**Syntax**: `<integer> | <length>`\n\n**Initial value**: `8`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              OTextOverflow: {
                description:
                  "The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis ('`…`'), or display a custom string.\n\n**Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n\n**Initial value**: `clip`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'clip',
                      'ellipsis',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OTransformOrigin: {
                description:
                  "The **`transform-origin`** CSS property sets the origin for an element's transformations.\n\n**Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n\n**Initial value**: `50% 50% 0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitAlignContent: {
                description:
                  "The CSS **`align-content`** property sets the distribution of space between and around content items along a flexbox's cross-axis or a grid's block axis.\n\n**Syntax**: `normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>`\n\n**Initial value**: `normal`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'space-around',
                      'space-between',
                      'space-evenly',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAlignItems: {
                description:
                  'The CSS **`align-items`** property sets the `align-self` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.\n\n**Syntax**: `normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]`\n\n**Initial value**: `normal`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'self-end',
                      'self-start',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAlignSelf: {
                description:
                  "The **`align-self`** CSS property overrides a grid or flex item's `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n\n**Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'baseline',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'self-end',
                      'self-start',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAnimationDelay: {
                description:
                  'The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAnimationDirection: {
                description:
                  'The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n\n**Syntax**: `<single-animation-direction>#`\n\n**Initial value**: `normal`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'alternate',
                      'alternate-reverse',
                      'inherit',
                      'initial',
                      'normal',
                      'reverse',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAnimationDuration: {
                description:
                  'The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAnimationFillMode: {
                description:
                  'The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n\n**Syntax**: `<single-animation-fill-mode>#`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'backwards',
                      'both',
                      'forwards',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAnimationIterationCount: {
                description:
                  'The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n\n**Syntax**: `<single-animation-iteration-count>#`\n\n**Initial value**: `1`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'infinite',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAnimationName: {
                description:
                  'The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n\n**Syntax**: `[ none | <keyframes-name> ]#`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAnimationPlayState: {
                description:
                  'The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n\n**Syntax**: `<single-animation-play-state>#`\n\n**Initial value**: `running`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'paused',
                      'revert',
                      'running',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAnimationTimingFunction: {
                description:
                  'The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAppearance: {
                description:
                  "The `**appearance**` CSS property is used to display an element using platform-native styling, based on the operating system's theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n\n**Syntax**: `none | button | button-bevel | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button`\n\n**Initial value**: `none` (but this value is overridden in the user agent CSS)",
                enum: [
                  '-apple-pay-button',
                  '-moz-initial',
                  'button',
                  'button-bevel',
                  'caret',
                  'checkbox',
                  'default-button',
                  'inherit',
                  'initial',
                  'inner-spin-button',
                  'listbox',
                  'listitem',
                  'media-controls-background',
                  'media-controls-fullscreen-background',
                  'media-current-time-display',
                  'media-enter-fullscreen-button',
                  'media-exit-fullscreen-button',
                  'media-fullscreen-button',
                  'media-mute-button',
                  'media-overlay-play-button',
                  'media-play-button',
                  'media-seek-back-button',
                  'media-seek-forward-button',
                  'media-slider',
                  'media-sliderthumb',
                  'media-time-remaining-display',
                  'media-toggle-closed-captions-button',
                  'media-volume-slider',
                  'media-volume-slider-container',
                  'media-volume-sliderthumb',
                  'menulist',
                  'menulist-button',
                  'menulist-text',
                  'menulist-textfield',
                  'meter',
                  'none',
                  'progress-bar',
                  'progress-bar-value',
                  'push-button',
                  'radio',
                  'revert',
                  'searchfield',
                  'searchfield-cancel-button',
                  'searchfield-decoration',
                  'searchfield-results-button',
                  'searchfield-results-decoration',
                  'slider-horizontal',
                  'slider-vertical',
                  'sliderthumb-horizontal',
                  'sliderthumb-vertical',
                  'square-button',
                  'textarea',
                  'textfield',
                  'unset',
                ],
                type: 'string',
              },
              WebkitBackdropFilter: {
                description:
                  'The **`backdrop-filter`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.\n\n**Syntax**: `none | <filter-function-list>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBackfaceVisibility: {
                description:
                  'The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n\n**Syntax**: `visible | hidden`\n\n**Initial value**: `visible`',
                enum: [
                  '-moz-initial',
                  'hidden',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                  'visible',
                ],
                type: 'string',
              },
              WebkitBackgroundClip: {
                description:
                  "The **`background-clip`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `border-box`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'inherit',
                      'initial',
                      'padding-box',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBackgroundOrigin: {
                description:
                  "The **`background-origin`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `padding-box`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'inherit',
                      'initial',
                      'padding-box',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBackgroundSize: {
                description:
                  "The **`background-size`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'contain',
                      'cover',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitBorderBeforeColor: {
                description:
                  '**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBorderBeforeStyle: {
                description:
                  "**Syntax**: `<'border-style'>`\n\n**Initial value**: `none`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'dashed',
                      'dotted',
                      'double',
                      'groove',
                      'hidden',
                      'inherit',
                      'initial',
                      'inset',
                      'none',
                      'outset',
                      'revert',
                      'ridge',
                      'solid',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBorderBeforeWidth: {
                description:
                  "**Syntax**: `<'border-width'>`\n\n**Initial value**: `medium`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitBorderBottomLeftRadius: {
                description:
                  'The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitBorderBottomRightRadius: {
                description:
                  'The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitBorderImageSlice: {
                description:
                  "The **`border-image-slice`** CSS property divides the image specified by `border-image-source` into regions. These regions form the components of an element's border image.\n\n**Syntax**: `<number-percentage>{1,4} && fill?`\n\n**Initial value**: `100%`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBorderTopLeftRadius: {
                description:
                  'The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitBorderTopRightRadius: {
                description:
                  'The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitBoxDecorationBreak: {
                description:
                  "The **`box-decoration-break`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.\n\n**Syntax**: `slice | clone`\n\n**Initial value**: `slice`",
                enum: [
                  '-moz-initial',
                  'clone',
                  'inherit',
                  'initial',
                  'revert',
                  'slice',
                  'unset',
                ],
                type: 'string',
              },
              WebkitBoxReflect: {
                description:
                  'The **`-webkit-box-reflect`** CSS property lets you reflect the content of an element in one specific direction.\n\n**Syntax**: `[ above | below | right | left ]? <length>? <image>?`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'above',
                      'below',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitBoxShadow: {
                description:
                  "The **`box-shadow`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n\n**Syntax**: `none | <shadow>#`\n\n**Initial value**: `none`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBoxSizing: {
                description:
                  'The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n\n**Syntax**: `content-box | border-box`\n\n**Initial value**: `content-box`',
                enum: [
                  '-moz-initial',
                  'border-box',
                  'content-box',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              WebkitClipPath: {
                description:
                  'The `**clip-path**` CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.\n\n**Syntax**: `<clip-source> | [ <basic-shape> || <geometry-box> ] | none`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'fill-box',
                      'inherit',
                      'initial',
                      'margin-box',
                      'none',
                      'padding-box',
                      'revert',
                      'stroke-box',
                      'unset',
                      'view-box',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitColumnCount: {
                description:
                  "The **`column-count`** CSS property breaks an element's content into the specified number of columns.\n\n**Syntax**: `<integer> | auto`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitColumnFill: {
                description:
                  "The **`column-fill`** CSS property controls how an element's contents are balanced when broken into columns.\n\n**Syntax**: `auto | balance | balance-all`\n\n**Initial value**: `balance`",
                enum: [
                  '-moz-initial',
                  'auto',
                  'balance',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              WebkitColumnGap: {
                description:
                  "The **`column-gap`** CSS property sets the size of the gap (gutter) between an element's columns.\n\n**Syntax**: `normal | <length-percentage>`\n\n**Initial value**: `normal`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitColumnRuleColor: {
                description:
                  'The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitColumnRuleStyle: {
                description:
                  "The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-style'>`\n\n**Initial value**: `none`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'dashed',
                      'dotted',
                      'double',
                      'groove',
                      'hidden',
                      'inherit',
                      'initial',
                      'inset',
                      'none',
                      'outset',
                      'revert',
                      'ridge',
                      'solid',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitColumnRuleWidth: {
                description:
                  "The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'border-width'>`\n\n**Initial value**: `medium`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitColumnSpan: {
                description:
                  'The **`column-span`** CSS property makes it possible for an element to span across all columns when its value is set to `all`.\n\n**Syntax**: `none | all`\n\n**Initial value**: `none`',
                enum: [
                  '-moz-initial',
                  'all',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              WebkitColumnWidth: {
                description:
                  "The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width.\n\n**Syntax**: `<length> | auto`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitFilter: {
                description:
                  'The **`filter`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.\n\n**Syntax**: `none | <filter-function-list>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitFlexBasis: {
                description:
                  "The **`flex-basis`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with `box-sizing`.\n\n**Syntax**: `content | <'width'>`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      '-webkit-auto',
                      0,
                      'auto',
                      'content',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitFlexDirection: {
                description:
                  'The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n\n**Syntax**: `row | row-reverse | column | column-reverse`\n\n**Initial value**: `row`',
                enum: [
                  '-moz-initial',
                  'column',
                  'column-reverse',
                  'inherit',
                  'initial',
                  'revert',
                  'row',
                  'row-reverse',
                  'unset',
                ],
                type: 'string',
              },
              WebkitFlexGrow: {
                description:
                  'The **`flex-grow`** CSS property sets the flex grow factor of a flex item main size.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitFlexShrink: {
                description:
                  'The **`flex-shrink`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to `flex-shrink`.\n\n**Syntax**: `<number>`\n\n**Initial value**: `1`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitFlexWrap: {
                description:
                  'The **`flex-wrap`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.\n\n**Syntax**: `nowrap | wrap | wrap-reverse`\n\n**Initial value**: `nowrap`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'nowrap',
                  'revert',
                  'unset',
                  'wrap',
                  'wrap-reverse',
                ],
                type: 'string',
              },
              WebkitFontFeatureSettings: {
                description:
                  'The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n\n**Syntax**: `normal | <feature-tag-value>#`\n\n**Initial value**: `normal`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitFontKerning: {
                description:
                  'The **`font-kerning`** CSS property sets the use of the kerning information stored in a font.\n\n**Syntax**: `auto | normal | none`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'none',
                  'normal',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              WebkitFontSmoothing: {
                description:
                  'The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n\n**Syntax**: `auto | never | always | <absolute-size> | <length>`\n\n**Initial value**: `auto`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'always',
                      'auto',
                      'inherit',
                      'initial',
                      'large',
                      'medium',
                      'never',
                      'revert',
                      'small',
                      'unset',
                      'x-large',
                      'x-small',
                      'xx-large',
                      'xx-small',
                      'xxx-large',
                    ],
                  },
                ],
              },
              WebkitFontVariantLigatures: {
                description:
                  'The **`font-variant-ligatures`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.\n\n**Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]`\n\n**Initial value**: `normal`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'common-ligatures',
                      'contextual',
                      'discretionary-ligatures',
                      'historical-ligatures',
                      'inherit',
                      'initial',
                      'no-common-ligatures',
                      'no-contextual',
                      'no-discretionary-ligatures',
                      'no-historical-ligatures',
                      'none',
                      'normal',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitHyphens: {
                description:
                  'The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n\n**Syntax**: `none | manual | auto`\n\n**Initial value**: `manual`',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'manual',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              WebkitJustifyContent: {
                description:
                  'The CSS **`justify-content`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.\n\n**Syntax**: `normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]`\n\n**Initial value**: `normal`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'center',
                      'end',
                      'flex-end',
                      'flex-start',
                      'inherit',
                      'initial',
                      'left',
                      'normal',
                      'revert',
                      'right',
                      'space-around',
                      'space-between',
                      'space-evenly',
                      'start',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitLineBreak: {
                description:
                  'The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n\n**Syntax**: `auto | loose | normal | strict | anywhere`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'anywhere',
                  'auto',
                  'inherit',
                  'initial',
                  'loose',
                  'normal',
                  'revert',
                  'strict',
                  'unset',
                ],
                type: 'string',
              },
              WebkitLineClamp: {
                description:
                  'The **`-webkit-line-clamp`** CSS property allows limiting of the contents of a block container to the specified number of lines.\n\n**Syntax**: `none | <integer>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitMarginEnd: {
                description:
                  "The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitMarginStart: {
                description:
                  "The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'margin-left'>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitMaskAttachment: {
                description:
                  "If a `-webkit-mask-image` is specified, `-webkit-mask-attachment` determines whether the mask image's position is fixed within the viewport, or scrolls along with its containing block.\n\n**Syntax**: `<attachment>#`\n\n**Initial value**: `scroll`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'fixed',
                      'inherit',
                      'initial',
                      'local',
                      'revert',
                      'scroll',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitMaskClip: {
                description:
                  'The **`mask-clip`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.\n\n**Syntax**: `[ <box> | border | padding | content | text ]#`\n\n**Initial value**: `border`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border',
                      'border-box',
                      'content',
                      'content-box',
                      'inherit',
                      'initial',
                      'padding',
                      'padding-box',
                      'revert',
                      'text',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitMaskComposite: {
                description:
                  'The **`-webkit-mask-composite`** property specifies the manner in which multiple mask images applied to the same element are composited with one another. Mask images are composited in the opposite order that they are declared with the `-webkit-mask-image` property.\n\n**Syntax**: `<composite-style>#`\n\n**Initial value**: `source-over`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'clear',
                      'copy',
                      'destination-atop',
                      'destination-in',
                      'destination-out',
                      'destination-over',
                      'inherit',
                      'initial',
                      'revert',
                      'source-atop',
                      'source-in',
                      'source-out',
                      'source-over',
                      'unset',
                      'xor',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitMaskImage: {
                description:
                  'The **`mask-image`** CSS property sets the image that is used as mask layer for an element.\n\n**Syntax**: `<mask-reference>#`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitMaskOrigin: {
                description:
                  'The **`mask-origin`** CSS property sets the origin of a mask.\n\n**Syntax**: `[ <box> | border | padding | content ]#`\n\n**Initial value**: `padding`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border',
                      'border-box',
                      'content',
                      'content-box',
                      'inherit',
                      'initial',
                      'padding',
                      'padding-box',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitMaskPosition: {
                description:
                  'The **`mask-position`** CSS property sets the initial position, relative to the mask position layer set by `mask-origin`, for each defined mask image.\n\n**Syntax**: `<position>#`\n\n**Initial value**: `0% 0%`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitMaskPositionX: {
                description:
                  'The `-webkit-mask-position-x` CSS property sets the initial horizontal position of a mask image.\n\n**Syntax**: `[ <length-percentage> | left | center | right ]#`\n\n**Initial value**: `0%`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitMaskPositionY: {
                description:
                  'The `-webkit-mask-position-y` CSS property sets the initial vertical position of a mask image.\n\n**Syntax**: `[ <length-percentage> | top | center | bottom ]#`\n\n**Initial value**: `0%`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'revert',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitMaskRepeat: {
                description:
                  'The **`mask-repeat`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.\n\n**Syntax**: `<repeat-style>#`\n\n**Initial value**: `repeat`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'no-repeat',
                      'repeat',
                      'repeat-x',
                      'repeat-y',
                      'revert',
                      'round',
                      'space',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitMaskRepeatX: {
                description:
                  'The `-webkit-mask-repeat-x` property specifies whether and how a mask image is repeated (tiled) horizontally.\n\n**Syntax**: `repeat | no-repeat | space | round`\n\n**Initial value**: `repeat`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'no-repeat',
                  'repeat',
                  'revert',
                  'round',
                  'space',
                  'unset',
                ],
                type: 'string',
              },
              WebkitMaskRepeatY: {
                description:
                  'The `-webkit-mask-repeat-y` property sets whether and how a mask image is repeated (tiled) vertically.\n\n**Syntax**: `repeat | no-repeat | space | round`\n\n**Initial value**: `repeat`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'no-repeat',
                  'repeat',
                  'revert',
                  'round',
                  'space',
                  'unset',
                ],
                type: 'string',
              },
              WebkitMaskSize: {
                description:
                  'The **`mask-size`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto auto`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'contain',
                      'cover',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitMaxInlineSize: {
                description:
                  "The **`max-inline-size`** CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the `max-width` or the `max-height` property, depending on the value of `writing-mode`.\n\n**Syntax**: `<'max-width'>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-moz-max-content',
                      '-moz-min-content',
                      0,
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitOrder: {
                description:
                  'The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitOverflowScrolling: {
                description:
                  'The `-webkit-overflow-scrolling` CSS property controls whether or not touch devices use momentum-based scrolling for a given element.\n\n**Syntax**: `auto | touch`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'revert',
                  'touch',
                  'unset',
                ],
                type: 'string',
              },
              WebkitPaddingEnd: {
                description:
                  "The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitPaddingStart: {
                description:
                  "The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation.\n\n**Syntax**: `<'padding-left'>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitPerspective: {
                description:
                  'The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n\n**Syntax**: `none | <length>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitPerspectiveOrigin: {
                description:
                  'The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n\n**Syntax**: `<position>`\n\n**Initial value**: `50% 50%`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitPrintColorAdjust: {
                description:
                  "The **`color-adjust`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device.\n\n**Syntax**: `economy | exact`\n\n**Initial value**: `economy`",
                enum: [
                  '-moz-initial',
                  'economy',
                  'exact',
                  'inherit',
                  'initial',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              WebkitRubyPosition: {
                description:
                  'The `**ruby-position**` CSS property defines the position of a ruby element relatives to its base element. It can be position over the element (`over`), under it (`under`), or between the characters, on their right side (`inter-character`).\n\n**Syntax**: `over | under | inter-character`\n\n**Initial value**: `over`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'over',
                  'revert',
                  'under',
                  'unset',
                ],
                type: 'string',
              },
              WebkitScrollSnapType: {
                description:
                  'The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n\n**Syntax**: `none | [ x | y | block | inline | both ] [ mandatory | proximity ]?`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'block',
                      'both',
                      'inherit',
                      'initial',
                      'inline',
                      'none',
                      'revert',
                      'unset',
                      'x',
                      'y',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitShapeMargin: {
                description:
                  'The **`shape-margin`** CSS property sets a margin for a CSS shape created using `shape-outside`.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitTapHighlightColor: {
                description:
                  "**`-webkit-tap-highlight-color`** is a non-standard CSS property that sets the color of the highlight that appears over a link while it's being tapped. The highlighting indicates to the user that their tap is being successfully recognized, and indicates which element they're tapping on.\n\n**Syntax**: `<color>`\n\n**Initial value**: `black`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextCombine: {
                description:
                  'The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n\n**Syntax**: `none | all | [ digits <integer>? ]`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-ms-text-combine-horizontal',
                      'all',
                      'digits',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextDecorationColor: {
                description:
                  'The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextDecorationLine: {
                description:
                  'The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n\n**Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'blink',
                      'grammar-error',
                      'inherit',
                      'initial',
                      'line-through',
                      'none',
                      'overline',
                      'revert',
                      'spelling-error',
                      'underline',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextDecorationSkip: {
                description:
                  'The **`text-decoration-skip`** CSS property sets what parts of an element’s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.\n\n**Syntax**: `none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]`\n\n**Initial value**: `objects`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'box-decoration',
                      'edges',
                      'inherit',
                      'initial',
                      'leading-spaces',
                      'none',
                      'objects',
                      'revert',
                      'spaces',
                      'trailing-spaces',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextDecorationStyle: {
                description:
                  'The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n\n**Syntax**: `solid | double | dotted | dashed | wavy`\n\n**Initial value**: `solid`',
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'inherit',
                  'initial',
                  'revert',
                  'solid',
                  'unset',
                  'wavy',
                ],
                type: 'string',
              },
              WebkitTextEmphasisColor: {
                description:
                  'The **`text-emphasis-color`** CSS property sets the color of emphasis marks. This value can also be set using the `text-emphasis` shorthand.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextEmphasisPosition: {
                description:
                  "The **`text-emphasis-position`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn't enough room for emphasis marks, the line height is increased.\n\n**Syntax**: `[ over | under ] && [ right | left ]`\n\n**Initial value**: `over right`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextEmphasisStyle: {
                description:
                  'The **`text-emphasis-style`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the `text-emphasis` shorthand.\n\n**Syntax**: `none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'circle',
                      'dot',
                      'double-circle',
                      'filled',
                      'inherit',
                      'initial',
                      'none',
                      'open',
                      'revert',
                      'sesame',
                      'triangle',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextFillColor: {
                description:
                  'The **`-webkit-text-fill-color`** CSS property specifies the fill color of characters of text. If this property is not set, the value of the `color` property is used.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextOrientation: {
                description:
                  'The **`text-orientation`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when `writing-mode` is not `horizontal-tb`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.\n\n**Syntax**: `mixed | upright | sideways`\n\n**Initial value**: `mixed`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'mixed',
                  'revert',
                  'sideways',
                  'unset',
                  'upright',
                ],
                type: 'string',
              },
              WebkitTextSizeAdjust: {
                description:
                  'The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n\n**Syntax**: `none | auto | <percentage>`\n\n**Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextStrokeColor: {
                description:
                  'The **`-webkit-text-stroke-color`** CSS property specifies the stroke color of characters of text. If this property is not set, the value of the `color` property is used.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextStrokeWidth: {
                description:
                  'The **`-webkit-text-stroke-width`** CSS property specifies the width of the stroke for text.\n\n**Syntax**: `<length>`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitTextUnderlinePosition: {
                description:
                  "The **`text-underline-position`** CSS property specifies the position of the underline which is set using the `text-decoration` property's `underline` value.\n\n**Syntax**: `auto | from-font | [ under || [ left | right ] ]`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'from-font',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'under',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTouchCallout: {
                description:
                  'The `-webkit-touch-callout` CSS property controls the display of the default callout shown when you touch and hold a touch target.\n\n**Syntax**: `default | none`\n\n**Initial value**: `default`',
                enum: [
                  '-moz-initial',
                  'default',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              WebkitTransform: {
                description:
                  'The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n\n**Syntax**: `none | <transform-list>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTransformOrigin: {
                description:
                  "The **`transform-origin`** CSS property sets the origin for an element's transformations.\n\n**Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n\n**Initial value**: `50% 50% 0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitTransformStyle: {
                description:
                  'The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n\n**Syntax**: `flat | preserve-3d`\n\n**Initial value**: `flat`',
                enum: [
                  '-moz-initial',
                  'flat',
                  'inherit',
                  'initial',
                  'preserve-3d',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              WebkitTransitionDelay: {
                description:
                  "The **`transition-delay`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTransitionDuration: {
                description:
                  'The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTransitionProperty: {
                description:
                  'The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n\n**Syntax**: `none | <single-transition-property>#`\n\n**Initial value**: all',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'all',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTransitionTimingFunction: {
                description:
                  'The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitUserModify: {
                description:
                  '**Syntax**: `read-only | read-write | read-write-plaintext-only`\n\n**Initial value**: `read-only`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'read-only',
                  'read-write',
                  'read-write-plaintext-only',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              WebkitUserSelect: {
                description:
                  "The `**user-select**` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.\n\n**Syntax**: `auto | text | none | contain | all`\n\n**Initial value**: `auto`",
                enum: [
                  '-moz-initial',
                  '-moz-none',
                  'all',
                  'auto',
                  'contain',
                  'element',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'text',
                  'unset',
                ],
                type: 'string',
              },
              WebkitWritingMode: {
                description:
                  'The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n\n**Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n\n**Initial value**: `horizontal-tb`',
                enum: [
                  '-moz-initial',
                  'horizontal-tb',
                  'inherit',
                  'initial',
                  'revert',
                  'sideways-lr',
                  'sideways-rl',
                  'unset',
                  'vertical-lr',
                  'vertical-rl',
                ],
                type: 'string',
              },
              MozAnimation: {
                description:
                  'The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n\n**Syntax**: `<single-animation>#`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'alternate',
                      'alternate-reverse',
                      'backwards',
                      'both',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'forwards',
                      'infinite',
                      'inherit',
                      'initial',
                      'linear',
                      'none',
                      'normal',
                      'paused',
                      'reverse',
                      'revert',
                      'running',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBorderImage: {
                description:
                  "The **`border-image`** CSS property draws an image around a given element. It replaces the element's regular border.\n\n**Syntax**: `<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'repeat',
                      'revert',
                      'round',
                      'space',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozColumnRule: {
                description:
                  "The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              MozColumns: {
                description:
                  "The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.\n\n**Syntax**: `<'column-width'> || <'column-count'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozTransition: {
                description:
                  'The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n\n**Syntax**: `<single-transition>#`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'all',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'none',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msContentZoomLimit: {
                description:
                  "The **`-ms-content-zoom-limit`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-content-zoom-limit-min` and `-ms-content-zoom-limit-max` properties.\n\n**Syntax**: `<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msContentZoomSnap: {
                description:
                  "The **`-ms-content-zoom-snap`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-content-zoom-snap-type` and `-ms-content-zoom-snap-points` properties.\n\n**Syntax**: `<'-ms-content-zoom-snap-type'> || <'-ms-content-zoom-snap-points'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'mandatory',
                      'none',
                      'proximity',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msFlex: {
                description:
                  "The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n\n**Syntax**: `none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'content',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              msScrollLimit: {
                description:
                  "The **\\-ms-scroll-limit** CSS property is a Microsoft extension that specifies values for the `-ms-scroll-limit-x-min`, `-ms-scroll-limit-y-min`, `-ms-scroll-limit-x-max`, and `-ms-scroll-limit-y-max` properties.\n\n**Syntax**: `<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msScrollSnapX: {
                description:
                  "The **`-ms-scroll-snap-x`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-scroll-snap-type` and `-ms-scroll-snap-points-x` properties.\n\n**Syntax**: `<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msScrollSnapY: {
                description:
                  "The **`-ms-scroll-snap-x`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-scroll-snap-type` and `-ms-scroll-snap-points-y` properties.\n\n**Syntax**: `<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              msTransition: {
                description:
                  'The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n\n**Syntax**: `<single-transition>#`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'all',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'none',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitAnimation: {
                description:
                  'The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n\n**Syntax**: `<single-animation>#`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'alternate',
                      'alternate-reverse',
                      'backwards',
                      'both',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'forwards',
                      'infinite',
                      'inherit',
                      'initial',
                      'linear',
                      'none',
                      'normal',
                      'paused',
                      'reverse',
                      'revert',
                      'running',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBorderBefore: {
                description:
                  "The **`-webkit-border-before`** CSS property is a shorthand property for setting the individual logical block start border property values in a single place in the style sheet.\n\n**Syntax**: `<'border-width'> || <'border-style'> || <color>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              WebkitBorderImage: {
                description:
                  "The **`border-image`** CSS property draws an image around a given element. It replaces the element's regular border.\n\n**Syntax**: `<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'repeat',
                      'revert',
                      'round',
                      'space',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBorderRadius: {
                description:
                  "The **`border-radius`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n\n**Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitColumnRule: {
                description:
                  "The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n\n**Syntax**: `<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              WebkitColumns: {
                description:
                  "The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths.\n\n**Syntax**: `<'column-width'> || <'column-count'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitFlex: {
                description:
                  "The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n\n**Syntax**: `none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'content',
                      'inherit',
                      'initial',
                      'max-content',
                      'min-content',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitFlexFlow: {
                description:
                  "The **`flex-flow`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.\n\n**Syntax**: `<'flex-direction'> || <'flex-wrap'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'column',
                      'column-reverse',
                      'inherit',
                      'initial',
                      'nowrap',
                      'revert',
                      'row',
                      'row-reverse',
                      'unset',
                      'wrap',
                      'wrap-reverse',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitMask: {
                description:
                  'The **`mask`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.\n\n**Syntax**: `[ <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || [ <box> | border | padding | content | text ] || [ <box> | border | padding | content ] ]#`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'border',
                      'border-box',
                      'bottom',
                      'center',
                      'content',
                      'content-box',
                      'inherit',
                      'initial',
                      'left',
                      'no-repeat',
                      'none',
                      'padding',
                      'padding-box',
                      'repeat',
                      'repeat-x',
                      'repeat-y',
                      'revert',
                      'right',
                      'round',
                      'space',
                      'text',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              WebkitTextEmphasis: {
                description:
                  "The **`text-emphasis`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for `text-emphasis-style` and `text-emphasis-color`.\n\n**Syntax**: `<'text-emphasis-style'> || <'text-emphasis-color'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'circle',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dot',
                      'double-circle',
                      'filled',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'open',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sesame',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'triangle',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitTextStroke: {
                description:
                  'The **`-webkit-text-stroke`** CSS property specifies the width and color of strokes for text characters. This is a shorthand property for the longhand properties `-webkit-text-stroke-width` and `-webkit-text-stroke-color`.\n\n**Syntax**: `<length> || <color>`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              WebkitTransition: {
                description:
                  'The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n\n**Syntax**: `<single-transition>#`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'all',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'none',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              azimuth: {
                description:
                  'In combination with `elevation`, the **`azimuth`** CSS property enables different audio sources to be positioned spatially for aural presentation. This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and multi-speaker setups allow for a fully three-dimensional stage.\n\n**Syntax**: `<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards`\n\n**Initial value**: `center`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'behind',
                      'center',
                      'center-left',
                      'center-right',
                      'far-left',
                      'far-right',
                      'inherit',
                      'initial',
                      'left',
                      'left-side',
                      'leftwards',
                      'revert',
                      'right',
                      'right-side',
                      'rightwards',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              boxAlign: {
                description:
                  'The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | baseline | stretch`\n\n**Initial value**: `stretch`',
                enum: [
                  '-moz-initial',
                  'baseline',
                  'center',
                  'end',
                  'inherit',
                  'initial',
                  'revert',
                  'start',
                  'stretch',
                  'unset',
                ],
                type: 'string',
              },
              boxDirection: {
                description:
                  'The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n\n**Syntax**: `normal | reverse | inherit`\n\n**Initial value**: `normal`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'normal',
                  'reverse',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              boxFlex: {
                description:
                  "The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box's layout.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              boxFlexGroup: {
                description:
                  "The **`box-flex-group`** CSS property assigns the flexbox's child elements to a flex group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              boxLines: {
                description:
                  'The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n\n**Syntax**: `single | multiple`\n\n**Initial value**: `single`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'multiple',
                  'revert',
                  'single',
                  'unset',
                ],
                type: 'string',
              },
              boxOrdinalGroup: {
                description:
                  "The **`box-ordinal-group`** CSS property assigns the flexbox's child elements to an ordinal group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              boxOrient: {
                description:
                  'This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.\n\n**Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n\n**Initial value**: `inline-axis` (`horizontal` in XUL)',
                enum: [
                  '-moz-initial',
                  'block-axis',
                  'horizontal',
                  'inherit',
                  'initial',
                  'inline-axis',
                  'revert',
                  'unset',
                  'vertical',
                ],
                type: 'string',
              },
              boxPack: {
                description:
                  'The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | justify`\n\n**Initial value**: `start`',
                enum: [
                  '-moz-initial',
                  'center',
                  'end',
                  'inherit',
                  'initial',
                  'justify',
                  'revert',
                  'start',
                  'unset',
                ],
                type: 'string',
              },
              clip: {
                description:
                  'The **`clip`** CSS property defines a visible portion of an element. The `clip` property applies only to absolutely positioned elements — that is, elements with `position:absolute` or `position:fixed`.\n\n**Syntax**: `<shape> | auto`\n\n**Initial value**: `auto`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fontVariantAlternates: {
                description:
                  'The **`font-variant-alternates`** CSS property controls the usage of alternate glyphs. These alternate glyphs may be referenced by alternative names defined in `@font-feature-values`.\n\n**Syntax**: `normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]`\n\n**Initial value**: `normal`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'historical-forms',
                      'inherit',
                      'initial',
                      'normal',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              gridColumnGap: {
                description:
                  "The **`column-gap`** CSS property sets the size of the gap (gutter) between an element's columns.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              gridGap: {
                description:
                  "The **`gap`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for `row-gap` and `column-gap`.\n\n**Syntax**: `<'grid-row-gap'> <'grid-column-gap'>?`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              gridRowGap: {
                description:
                  "The **`row-gap`** CSS property sets the size of the gap (gutter) between an element's grid rows.\n\n**Syntax**: `<length-percentage>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              imeMode: {
                description:
                  'The **`ime-mode`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.\n\n**Syntax**: `auto | normal | active | inactive | disabled`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'active',
                  'auto',
                  'disabled',
                  'inactive',
                  'inherit',
                  'initial',
                  'normal',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              offsetBlock: {
                description:
                  "The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>{1,2}`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              offsetBlockEnd: {
                description:
                  "The **`inset-block-end`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              offsetBlockStart: {
                description:
                  "The **`inset-block-start`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              offsetInline: {
                description:
                  "The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>{1,2}`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              offsetInlineEnd: {
                description:
                  "The **`inset-inline-end`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              offsetInlineStart: {
                description:
                  "The **`inset-inline-start`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n\n**Syntax**: `<'top'>`\n\n**Initial value**: `auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              scrollSnapCoordinate: {
                description:
                  "The **`scroll-snap-coordinate`** CSS property defines the x and y coordinate positions within an element that will align with its nearest ancestor scroll container's `scroll-snap-destination` for each respective axis.\n\n**Syntax**: `none | <position>#`\n\n**Initial value**: `none`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'none',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              scrollSnapDestination: {
                description:
                  "The **`scroll-snap-destination`** CSS property defines the position in x and y coordinates within the scroll container's visual viewport which element snap points align with.\n\n**Syntax**: `<position>`\n\n**Initial value**: `0px 0px`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'bottom',
                      'center',
                      'inherit',
                      'initial',
                      'left',
                      'revert',
                      'right',
                      'top',
                      'unset',
                    ],
                  },
                ],
              },
              scrollSnapPointsX: {
                description:
                  'The **`scroll-snap-points-x`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.\n\n**Syntax**: `none | repeat( <length-percentage> )`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              scrollSnapPointsY: {
                description:
                  'The **`scroll-snap-points-y`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.\n\n**Syntax**: `none | repeat( <length-percentage> )`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              scrollSnapTypeX: {
                description:
                  'The **`scroll-snap-type-x`** CSS property defines how strictly snap points are enforced on the horizontal axis of the scroll container in case there is one.\n\n**Syntax**: `none | mandatory | proximity`\n\n**Initial value**: `none`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'mandatory',
                  'none',
                  'proximity',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              scrollSnapTypeY: {
                description:
                  'The **`scroll-snap-type-y`** CSS property defines how strictly snap points are enforced on the vertical axis of the scroll container in case there is one.\n\n**Syntax**: `none | mandatory | proximity`\n\n**Initial value**: `none`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'mandatory',
                  'none',
                  'proximity',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              scrollbarTrackColor: {
                description:
                  'The **`-ms-scrollbar-track-color`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.\n\n**Syntax**: `<color>`\n\n**Initial value**: `Scrollbar`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              textCombineHorizontal: {
                description:
                  'The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n\n**Syntax**: `none | all | [ digits <integer>? ]`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      '-ms-text-combine-horizontal',
                      'all',
                      'digits',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              KhtmlBoxAlign: {
                description:
                  'The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | baseline | stretch`\n\n**Initial value**: `stretch`',
                enum: [
                  '-moz-initial',
                  'baseline',
                  'center',
                  'end',
                  'inherit',
                  'initial',
                  'revert',
                  'start',
                  'stretch',
                  'unset',
                ],
                type: 'string',
              },
              KhtmlBoxDirection: {
                description:
                  'The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n\n**Syntax**: `normal | reverse | inherit`\n\n**Initial value**: `normal`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'normal',
                  'reverse',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              KhtmlBoxFlex: {
                description:
                  "The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box's layout.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              KhtmlBoxFlexGroup: {
                description:
                  "The **`box-flex-group`** CSS property assigns the flexbox's child elements to a flex group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              KhtmlBoxLines: {
                description:
                  'The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n\n**Syntax**: `single | multiple`\n\n**Initial value**: `single`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'multiple',
                  'revert',
                  'single',
                  'unset',
                ],
                type: 'string',
              },
              KhtmlBoxOrdinalGroup: {
                description:
                  "The **`box-ordinal-group`** CSS property assigns the flexbox's child elements to an ordinal group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              KhtmlBoxOrient: {
                description:
                  'This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.\n\n**Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n\n**Initial value**: `inline-axis` (`horizontal` in XUL)',
                enum: [
                  '-moz-initial',
                  'block-axis',
                  'horizontal',
                  'inherit',
                  'initial',
                  'inline-axis',
                  'revert',
                  'unset',
                  'vertical',
                ],
                type: 'string',
              },
              KhtmlBoxPack: {
                description:
                  'The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | justify`\n\n**Initial value**: `start`',
                enum: [
                  '-moz-initial',
                  'center',
                  'end',
                  'inherit',
                  'initial',
                  'justify',
                  'revert',
                  'start',
                  'unset',
                ],
                type: 'string',
              },
              KhtmlLineBreak: {
                description:
                  'The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n\n**Syntax**: `auto | loose | normal | strict | anywhere`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'anywhere',
                  'auto',
                  'inherit',
                  'initial',
                  'loose',
                  'normal',
                  'revert',
                  'strict',
                  'unset',
                ],
                type: 'string',
              },
              KhtmlOpacity: {
                description:
                  'The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n\n**Syntax**: `<alpha-value>`\n\n**Initial value**: `1.0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              KhtmlUserSelect: {
                description:
                  "The `**user-select**` CSS property controls whether the user can select text. This doesn't have any effect on content loaded as chrome, except in textboxes.\n\n**Syntax**: `auto | text | none | contain | all`\n\n**Initial value**: `auto`",
                enum: [
                  '-moz-initial',
                  '-moz-none',
                  'all',
                  'auto',
                  'contain',
                  'element',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'text',
                  'unset',
                ],
                type: 'string',
              },
              MozBackgroundClip: {
                description:
                  "The **`background-clip`** CSS property sets whether an element's background extends underneath its border box, padding box, or content box.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `border-box`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'inherit',
                      'initial',
                      'padding-box',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBackgroundInlinePolicy: {
                description:
                  "The **`box-decoration-break`** CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages.\n\n**Syntax**: `slice | clone`\n\n**Initial value**: `slice`",
                enum: [
                  '-moz-initial',
                  'clone',
                  'inherit',
                  'initial',
                  'revert',
                  'slice',
                  'unset',
                ],
                type: 'string',
              },
              MozBackgroundOrigin: {
                description:
                  "The **`background-origin`** CSS property sets the background's origin: from the border start, inside the border, or inside the padding.\n\n**Syntax**: `<box>#`\n\n**Initial value**: `padding-box`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'border-box',
                      'content-box',
                      'inherit',
                      'initial',
                      'padding-box',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBackgroundSize: {
                description:
                  "The **`background-size`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'contain',
                      'cover',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozBinding: {
                description:
                  'The **`-moz-binding`** CSS property is used by Mozilla-based applications to attach an XBL binding to a DOM element.\n\n**Syntax**: `<url> | none`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBorderRadius: {
                description:
                  "The **`border-radius`** CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n\n**Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozBorderRadiusBottomleft: {
                description:
                  'The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozBorderRadiusBottomright: {
                description:
                  'The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozBorderRadiusTopleft: {
                description:
                  'The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozBorderRadiusTopright: {
                description:
                  'The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n\n**Syntax**: `<length-percentage>{1,2}`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozBoxAlign: {
                description:
                  'The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | baseline | stretch`\n\n**Initial value**: `stretch`',
                enum: [
                  '-moz-initial',
                  'baseline',
                  'center',
                  'end',
                  'inherit',
                  'initial',
                  'revert',
                  'start',
                  'stretch',
                  'unset',
                ],
                type: 'string',
              },
              MozBoxDirection: {
                description:
                  'The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n\n**Syntax**: `normal | reverse | inherit`\n\n**Initial value**: `normal`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'normal',
                  'reverse',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              MozBoxFlex: {
                description:
                  "The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box's layout.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBoxOrdinalGroup: {
                description:
                  "The **`box-ordinal-group`** CSS property assigns the flexbox's child elements to an ordinal group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozBoxOrient: {
                description:
                  'This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.\n\n**Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n\n**Initial value**: `inline-axis` (`horizontal` in XUL)',
                enum: [
                  '-moz-initial',
                  'block-axis',
                  'horizontal',
                  'inherit',
                  'initial',
                  'inline-axis',
                  'revert',
                  'unset',
                  'vertical',
                ],
                type: 'string',
              },
              MozBoxPack: {
                description:
                  'The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | justify`\n\n**Initial value**: `start`',
                enum: [
                  '-moz-initial',
                  'center',
                  'end',
                  'inherit',
                  'initial',
                  'justify',
                  'revert',
                  'start',
                  'unset',
                ],
                type: 'string',
              },
              MozBoxShadow: {
                description:
                  "The **`box-shadow`** CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n\n**Syntax**: `none | <shadow>#`\n\n**Initial value**: `none`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozFloatEdge: {
                description:
                  'The non-standard **`-moz-float-edge`** CSS property specifies whether the height and width properties of the element include the margin, border, or padding thickness.\n\n**Syntax**: `border-box | content-box | margin-box | padding-box`\n\n**Initial value**: `content-box`',
                enum: [
                  '-moz-initial',
                  'border-box',
                  'content-box',
                  'inherit',
                  'initial',
                  'margin-box',
                  'padding-box',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              MozForceBrokenImageIcon: {
                description:
                  'The **`-moz-force-broken-image-icon`** extended CSS property can be used to force the broken image icon to be shown even when a broken image has an `alt` attribute.\n\n**Syntax**: `<integer [0,1]>`\n\n**Initial value**: `0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozOpacity: {
                description:
                  'The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n\n**Syntax**: `<alpha-value>`\n\n**Initial value**: `1.0`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozOutline: {
                description:
                  "The **`outline`** CSS shorthand property set all the outline properties in a single declaration.\n\n**Syntax**: `[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'auto',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'dashed',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'dotted',
                      'double',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'groove',
                      'hidden',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'inset',
                      'invert',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'medium',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'outset',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'ridge',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'solid',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thick',
                      'thin',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                  },
                ],
              },
              MozOutlineColor: {
                description:
                  "The **`outline-color`** CSS property sets the color of an element's outline.\n\n**Syntax**: `<color> | invert`\n\n**Initial value**: `invert`, for browsers supporting it, `currentColor` for the other",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'invert',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozOutlineRadius: {
                description:
                  "In Mozilla applications like Firefox, the **`-moz-outline-radius`** CSS shorthand property can be used to give an element's `outline` rounded corners.\n\n**Syntax**: `<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozOutlineRadiusBottomleft: {
                description:
                  "In Mozilla applications, the **`-moz-outline-radius-bottomleft`** CSS property can be used to round the bottom-left corner of an element's `outline`.\n\n**Syntax**: `<outline-radius>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozOutlineRadiusBottomright: {
                description:
                  "In Mozilla applications, the **`-moz-outline-radius-bottomright`** CSS property can be used to round the bottom-right corner of an element's `outline`.\n\n**Syntax**: `<outline-radius>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozOutlineRadiusTopleft: {
                description:
                  "In Mozilla applications, the **`-moz-outline-radius-topleft`** CSS property can be used to round the top-left corner of an element's `outline`.\n\n**Syntax**: `<outline-radius>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozOutlineRadiusTopright: {
                description:
                  "In Mozilla applications, the **`-moz-outline-radius-topright`** CSS property can be used to round the top-right corner of an element's `outline`.\n\n**Syntax**: `<outline-radius>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              MozOutlineStyle: {
                description:
                  "The **`outline-style`** CSS property sets the style of an element's outline. An outline is a line that is drawn around an element, outside the `border`.\n\n**Syntax**: `auto | <'border-style'>`\n\n**Initial value**: `none`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'dashed',
                      'dotted',
                      'double',
                      'groove',
                      'hidden',
                      'inherit',
                      'initial',
                      'inset',
                      'none',
                      'outset',
                      'revert',
                      'ridge',
                      'solid',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozOutlineWidth: {
                description:
                  "The CSS **`outline-width`** property sets the thickness of an element's outline. An outline is a line that is drawn around an element, outside the `border`.\n\n**Syntax**: `<line-width>`\n\n**Initial value**: `medium`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'medium',
                      'revert',
                      'thick',
                      'thin',
                      'unset',
                    ],
                  },
                ],
              },
              MozTextAlignLast: {
                description:
                  'The **`text-align-last`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.\n\n**Syntax**: `auto | start | end | left | right | center | justify`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'auto',
                  'center',
                  'end',
                  'inherit',
                  'initial',
                  'justify',
                  'left',
                  'revert',
                  'right',
                  'start',
                  'unset',
                ],
                type: 'string',
              },
              MozTextDecorationColor: {
                description:
                  'The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n\n**Syntax**: `<color>`\n\n**Initial value**: `currentcolor`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozTextDecorationLine: {
                description:
                  'The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n\n**Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'blink',
                      'grammar-error',
                      'inherit',
                      'initial',
                      'line-through',
                      'none',
                      'overline',
                      'revert',
                      'spelling-error',
                      'underline',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              MozTextDecorationStyle: {
                description:
                  'The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n\n**Syntax**: `solid | double | dotted | dashed | wavy`\n\n**Initial value**: `solid`',
                enum: [
                  '-moz-initial',
                  'dashed',
                  'dotted',
                  'double',
                  'inherit',
                  'initial',
                  'revert',
                  'solid',
                  'unset',
                  'wavy',
                ],
                type: 'string',
              },
              MozUserInput: {
                description:
                  'In Mozilla applications, **`-moz-user-input`** determines if an element will accept user input.\n\n**Syntax**: `auto | none | enabled | disabled`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'auto',
                  'disabled',
                  'enabled',
                  'inherit',
                  'initial',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msImeMode: {
                description:
                  'The **`ime-mode`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.\n\n**Syntax**: `auto | normal | active | inactive | disabled`\n\n**Initial value**: `auto`',
                enum: [
                  '-moz-initial',
                  'active',
                  'auto',
                  'disabled',
                  'inactive',
                  'inherit',
                  'initial',
                  'normal',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              msScrollbarTrackColor: {
                description:
                  'The **`-ms-scrollbar-track-color`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.\n\n**Syntax**: `<color>`\n\n**Initial value**: `Scrollbar`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              OAnimation: {
                description:
                  'The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n\n**Syntax**: `<single-animation>#`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'alternate',
                      'alternate-reverse',
                      'backwards',
                      'both',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'forwards',
                      'infinite',
                      'inherit',
                      'initial',
                      'linear',
                      'none',
                      'normal',
                      'paused',
                      'reverse',
                      'revert',
                      'running',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OAnimationDelay: {
                description:
                  'The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OAnimationDirection: {
                description:
                  'The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n\n**Syntax**: `<single-animation-direction>#`\n\n**Initial value**: `normal`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'alternate',
                      'alternate-reverse',
                      'inherit',
                      'initial',
                      'normal',
                      'reverse',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OAnimationDuration: {
                description:
                  'The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OAnimationFillMode: {
                description:
                  'The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n\n**Syntax**: `<single-animation-fill-mode>#`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'backwards',
                      'both',
                      'forwards',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OAnimationIterationCount: {
                description:
                  'The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n\n**Syntax**: `<single-animation-iteration-count>#`\n\n**Initial value**: `1`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'infinite',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OAnimationName: {
                description:
                  'The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n\n**Syntax**: `[ none | <keyframes-name> ]#`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OAnimationPlayState: {
                description:
                  'The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n\n**Syntax**: `<single-animation-play-state>#`\n\n**Initial value**: `running`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'paused',
                      'revert',
                      'running',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OAnimationTimingFunction: {
                description:
                  'The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OBackgroundSize: {
                description:
                  "The **`background-size`** CSS property sets the size of the element's background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n\n**Syntax**: `<bg-size>#`\n\n**Initial value**: `auto auto`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'auto',
                      'contain',
                      'cover',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              OBorderImage: {
                description:
                  "The **`border-image`** CSS property draws an image around a given element. It replaces the element's regular border.\n\n**Syntax**: `<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'repeat',
                      'revert',
                      'round',
                      'space',
                      'stretch',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OTransform: {
                description:
                  'The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n\n**Syntax**: `none | <transform-list>`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OTransition: {
                description:
                  'The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n\n**Syntax**: `<single-transition>#`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'all',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'none',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OTransitionDelay: {
                description:
                  "The **`transition-delay`** CSS property specifies the duration to wait before starting a property's transition effect when its value changes.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OTransitionDuration: {
                description:
                  'The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n\n**Syntax**: `<time>#`\n\n**Initial value**: `0s`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OTransitionProperty: {
                description:
                  'The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n\n**Syntax**: `none | <single-transition-property>#`\n\n**Initial value**: all',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'all',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              OTransitionTimingFunction: {
                description:
                  'The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n\n**Syntax**: `<easing-function>#`\n\n**Initial value**: `ease`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ease',
                      'ease-in',
                      'ease-in-out',
                      'ease-out',
                      'inherit',
                      'initial',
                      'linear',
                      'revert',
                      'step-end',
                      'step-start',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBoxAlign: {
                description:
                  'The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | baseline | stretch`\n\n**Initial value**: `stretch`',
                enum: [
                  '-moz-initial',
                  'baseline',
                  'center',
                  'end',
                  'inherit',
                  'initial',
                  'revert',
                  'start',
                  'stretch',
                  'unset',
                ],
                type: 'string',
              },
              WebkitBoxDirection: {
                description:
                  'The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n\n**Syntax**: `normal | reverse | inherit`\n\n**Initial value**: `normal`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'normal',
                  'reverse',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              WebkitBoxFlex: {
                description:
                  "The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box's layout.\n\n**Syntax**: `<number>`\n\n**Initial value**: `0`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBoxFlexGroup: {
                description:
                  "The **`box-flex-group`** CSS property assigns the flexbox's child elements to a flex group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBoxLines: {
                description:
                  'The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n\n**Syntax**: `single | multiple`\n\n**Initial value**: `single`',
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'multiple',
                  'revert',
                  'single',
                  'unset',
                ],
                type: 'string',
              },
              WebkitBoxOrdinalGroup: {
                description:
                  "The **`box-ordinal-group`** CSS property assigns the flexbox's child elements to an ordinal group.\n\n**Syntax**: `<integer>`\n\n**Initial value**: `1`",
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitBoxOrient: {
                description:
                  'This is a property of the original CSS Flexible Box Layout Module draft, and has been replaced by a newer standard. See flexbox for information about the current standard.\n\n**Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n\n**Initial value**: `inline-axis` (`horizontal` in XUL)',
                enum: [
                  '-moz-initial',
                  'block-axis',
                  'horizontal',
                  'inherit',
                  'initial',
                  'inline-axis',
                  'revert',
                  'unset',
                  'vertical',
                ],
                type: 'string',
              },
              WebkitBoxPack: {
                description:
                  'The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n\n**Syntax**: `start | center | end | justify`\n\n**Initial value**: `start`',
                enum: [
                  '-moz-initial',
                  'center',
                  'end',
                  'inherit',
                  'initial',
                  'justify',
                  'revert',
                  'start',
                  'unset',
                ],
                type: 'string',
              },
              WebkitScrollSnapPointsX: {
                description:
                  'The **`scroll-snap-points-x`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.\n\n**Syntax**: `none | repeat( <length-percentage> )`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              WebkitScrollSnapPointsY: {
                description:
                  'The **`scroll-snap-points-y`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.\n\n**Syntax**: `none | repeat( <length-percentage> )`\n\n**Initial value**: `none`',
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              alignmentBaseline: {
                enum: [
                  '-moz-initial',
                  'after-edge',
                  'alphabetic',
                  'auto',
                  'baseline',
                  'before-edge',
                  'central',
                  'hanging',
                  'ideographic',
                  'inherit',
                  'initial',
                  'mathematical',
                  'middle',
                  'revert',
                  'text-after-edge',
                  'text-before-edge',
                  'unset',
                ],
                type: 'string',
              },
              baselineShift: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'baseline',
                      'inherit',
                      'initial',
                      'revert',
                      'sub',
                      'super',
                      'unset',
                    ],
                  },
                ],
              },
              clipRule: {
                enum: [
                  '-moz-initial',
                  'evenodd',
                  'inherit',
                  'initial',
                  'nonzero',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              colorInterpolation: {
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'linearRGB',
                  'revert',
                  'sRGB',
                  'unset',
                ],
                type: 'string',
              },
              colorRendering: {
                enum: [
                  '-moz-initial',
                  'auto',
                  'inherit',
                  'initial',
                  'optimizeQuality',
                  'optimizeSpeed',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              dominantBaseline: {
                enum: [
                  '-moz-initial',
                  'alphabetic',
                  'auto',
                  'central',
                  'hanging',
                  'ideographic',
                  'inherit',
                  'initial',
                  'mathematical',
                  'middle',
                  'no-change',
                  'reset-size',
                  'revert',
                  'text-after-edge',
                  'text-before-edge',
                  'unset',
                  'use-script',
                ],
                type: 'string',
              },
              fill: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'child',
                      'chocolate',
                      'context-fill',
                      'context-stroke',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              fillOpacity: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              fillRule: {
                enum: [
                  '-moz-initial',
                  'evenodd',
                  'inherit',
                  'initial',
                  'nonzero',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              floodColor: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentColor',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              floodOpacity: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              glyphOrientationVertical: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'auto',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              lightingColor: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentColor',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              marker: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              markerEnd: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              markerMid: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              markerStart: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              shapeRendering: {
                enum: [
                  '-moz-initial',
                  'auto',
                  'crispEdges',
                  'geometricPrecision',
                  'inherit',
                  'initial',
                  'optimizeSpeed',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
              stopColor: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'chocolate',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentColor',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              stopOpacity: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              stroke: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'ActiveBorder',
                      'ActiveCaption',
                      'AppWorkspace',
                      'Background',
                      'ButtonFace',
                      'ButtonHighlight',
                      'ButtonShadow',
                      'ButtonText',
                      'CaptionText',
                      'GrayText',
                      'Highlight',
                      'HighlightText',
                      'InactiveBorder',
                      'InactiveCaption',
                      'InactiveCaptionText',
                      'InfoBackground',
                      'InfoText',
                      'Menu',
                      'MenuText',
                      'Scrollbar',
                      'ThreeDDarkShadow',
                      'ThreeDFace',
                      'ThreeDHighlight',
                      'ThreeDLightShadow',
                      'ThreeDShadow',
                      'Window',
                      'WindowFrame',
                      'WindowText',
                      'aliceblue',
                      'antiquewhite',
                      'aqua',
                      'aquamarine',
                      'azure',
                      'beige',
                      'bisque',
                      'black',
                      'blanchedalmond',
                      'blue',
                      'blueviolet',
                      'brown',
                      'burlywood',
                      'cadetblue',
                      'chartreuse',
                      'child',
                      'chocolate',
                      'context-fill',
                      'context-stroke',
                      'coral',
                      'cornflowerblue',
                      'cornsilk',
                      'crimson',
                      'currentcolor',
                      'cyan',
                      'darkblue',
                      'darkcyan',
                      'darkgoldenrod',
                      'darkgray',
                      'darkgreen',
                      'darkgrey',
                      'darkkhaki',
                      'darkmagenta',
                      'darkolivegreen',
                      'darkorange',
                      'darkorchid',
                      'darkred',
                      'darksalmon',
                      'darkseagreen',
                      'darkslateblue',
                      'darkslategray',
                      'darkslategrey',
                      'darkturquoise',
                      'darkviolet',
                      'deeppink',
                      'deepskyblue',
                      'dimgray',
                      'dimgrey',
                      'dodgerblue',
                      'firebrick',
                      'floralwhite',
                      'forestgreen',
                      'fuchsia',
                      'gainsboro',
                      'ghostwhite',
                      'gold',
                      'goldenrod',
                      'gray',
                      'green',
                      'greenyellow',
                      'grey',
                      'honeydew',
                      'hotpink',
                      'indianred',
                      'indigo',
                      'inherit',
                      'initial',
                      'ivory',
                      'khaki',
                      'lavender',
                      'lavenderblush',
                      'lawngreen',
                      'lemonchiffon',
                      'lightblue',
                      'lightcoral',
                      'lightcyan',
                      'lightgoldenrodyellow',
                      'lightgray',
                      'lightgreen',
                      'lightgrey',
                      'lightpink',
                      'lightsalmon',
                      'lightseagreen',
                      'lightskyblue',
                      'lightslategray',
                      'lightslategrey',
                      'lightsteelblue',
                      'lightyellow',
                      'lime',
                      'limegreen',
                      'linen',
                      'magenta',
                      'maroon',
                      'mediumaquamarine',
                      'mediumblue',
                      'mediumorchid',
                      'mediumpurple',
                      'mediumseagreen',
                      'mediumslateblue',
                      'mediumspringgreen',
                      'mediumturquoise',
                      'mediumvioletred',
                      'midnightblue',
                      'mintcream',
                      'mistyrose',
                      'moccasin',
                      'navajowhite',
                      'navy',
                      'none',
                      'oldlace',
                      'olive',
                      'olivedrab',
                      'orange',
                      'orangered',
                      'orchid',
                      'palegoldenrod',
                      'palegreen',
                      'paleturquoise',
                      'palevioletred',
                      'papayawhip',
                      'peachpuff',
                      'peru',
                      'pink',
                      'plum',
                      'powderblue',
                      'purple',
                      'rebeccapurple',
                      'red',
                      'revert',
                      'rosybrown',
                      'royalblue',
                      'saddlebrown',
                      'salmon',
                      'sandybrown',
                      'seagreen',
                      'seashell',
                      'sienna',
                      'silver',
                      'skyblue',
                      'slateblue',
                      'slategray',
                      'slategrey',
                      'snow',
                      'springgreen',
                      'steelblue',
                      'tan',
                      'teal',
                      'thistle',
                      'tomato',
                      'transparent',
                      'turquoise',
                      'unset',
                      'violet',
                      'wheat',
                      'white',
                      'whitesmoke',
                      'yellow',
                      'yellowgreen',
                    ],
                    type: 'string',
                  },
                ],
              },
              strokeDasharray: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'none',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              strokeDashoffset: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              strokeLinecap: {
                enum: [
                  '-moz-initial',
                  'butt',
                  'inherit',
                  'initial',
                  'revert',
                  'round',
                  'square',
                  'unset',
                ],
                type: 'string',
              },
              strokeLinejoin: {
                enum: [
                  '-moz-initial',
                  'bevel',
                  'inherit',
                  'initial',
                  'miter',
                  'revert',
                  'round',
                  'unset',
                ],
                type: 'string',
              },
              strokeMiterlimit: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              strokeOpacity: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'number',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                    type: 'string',
                  },
                ],
              },
              strokeWidth: {
                anyOf: [
                  {
                    allOf: [
                      {
                        type: 'object',
                      },
                      {
                        type: 'string',
                      },
                    ],
                  },
                  {
                    enum: [
                      '-moz-initial',
                      0,
                      'inherit',
                      'initial',
                      'revert',
                      'unset',
                    ],
                  },
                ],
              },
              textAnchor: {
                enum: [
                  '-moz-initial',
                  'end',
                  'inherit',
                  'initial',
                  'middle',
                  'revert',
                  'start',
                  'unset',
                ],
                type: 'string',
              },
              vectorEffect: {
                enum: [
                  '-moz-initial',
                  'inherit',
                  'initial',
                  'non-scaling-stroke',
                  'none',
                  'revert',
                  'unset',
                ],
                type: 'string',
              },
            },
          },
        },
      },
    },
  },
}
