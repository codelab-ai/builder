import { registerAs } from '@nestjs/config'
import { get } from 'env-var'
import { pathToArray } from 'graphql/jsutils/Path'
import path from 'path'
import { DgraphTokens } from './dgraph.tokens'

export interface DgraphConfig {
  endpoint: string
  /**
   * This is the user maintained schema file
   */
  schemaFile: string
  /**
   * This is generated by appending api enums to the `schemaFile` above
   */
  schemaGeneratedFile: string
}

const baseDgraphConfig = {
  // We point to `schema.generated.graphql` not `schema.graphql` because we need to append Nest.js generated enum types
  schemaFile: path.resolve(process.cwd(), 'dgraph/schema.graphql'),
  schemaGeneratedFile: path.resolve(
    process.cwd(),
    'dgraph/schema.generated.graphql',
  ),
}

export const dgraphConfig = registerAs<() => DgraphConfig>(
  DgraphTokens.DgraphConfig.toString(),
  () => ({
    ...baseDgraphConfig,
    endpoint: get('CODELAB_DGRAPH_ENDPOINT').required().asUrlString(),
  }),
)

export const dgraphTestConfig = registerAs(
  DgraphTokens.DgraphConfig.toString(),
  () => ({
    ...baseDgraphConfig,
    endpoint: get('CODELAB_DGRAPH_TEST_ENDPOINT').required().asUrlString(),
  }),
)
