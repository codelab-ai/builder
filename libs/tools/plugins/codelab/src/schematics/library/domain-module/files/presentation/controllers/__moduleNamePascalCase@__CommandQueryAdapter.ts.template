import { Injectable } from '@nestjs/common'
import { CommandBus, QueryBus } from '@nestjs/cqrs'
import { Args, Mutation, Query, Resolver } from '@nestjs/graphql'

import {
  CommandQueryBusPort,
  UseCaseRequestPort,
} from '@codelab/backend'

@Resolver(() => TypeOrm<%= moduleNamePascalCase %>)
@Injectable()
export class <%= moduleNamePascalCase %>CommandQueryAdapter implements CommandQueryBusPort {
  constructor(
    readonly commandBus: CommandBus<UseCaseRequestPort>,
    readonly queryBus: QueryBus<UseCaseRequestPort>,
  ) {}

  /**
    @Query(() => [<%= moduleNamePascalCase %>QueryUseCaseDto])
    async <%= name %>() {
      const results = await this.queryBus.execute(new Get<%= moduleNamePascalCase %>Query())

      return <%= moduleName %>.arrayToPlain(results)
    }
   (*/
