overwrite: true
schema: http://localhost:3333/graphql
# hooks:
#   afterAllFileWrite:
#     - prettier --write
#     # - eslint --fix
generates:
  schema.graphql:
    plugins:
      - schema-ast
    hooks:
      afterAllFileWrite:
        - prettier --write
  # apps/api/graph/src/assets/hasura-schema.graphql:
  #   plugins:
  #     - schema-ast

  # Generate into lib so we can import
  # libs/state/apollo/src/generated/graphql.tsx:
  #   plugins:
  #     - typescript
  #     - typescript-resolvers
  #     - typescript-operations
  #     - typescript-react-apollo
  #     - fragment-matcher
  #     # - typescript-document-nodes
  #     # - typescript-graphql-files-modules
  #     # - graphql-codegen-apollo-next-ssr
  #   config:
  #     reactApolloVersion: 3
  #     withHooks: true
  #     withHOC: false
  #     withComponent: false
  #     exportFragmentSpreadSubTypes: true
  #     documentMode: graphQLTag
  #     namingConvention:
  #       enumValues: keep
  #   documents: apps/api/graph/src/assets/**/*.graphql

  apps/web/src/apollo/types.generated.ts:
    plugins:
      - typescript
      # - typescript-resolvers
      - typescript-operations
      - typed-document-node
      - typescript-document-nodes
      # - typescript-graphql-files-modules
    documents: ./libs/modules/user/src/core/application/useCases/getMe/GetMe.graphql
    hooks:
      afterOneFileWrite:
        - eslint --fix

  apps/web/src/apollo/apollo-page.generated.tsx:
    plugins:
      - graphql-codegen-apollo-next-ssr
    config:
      documentMode: external
      importDocumentNodeExternallyFrom: ./types.generated
      reactApolloVersion: 3
      withHooks: true
      # withHOC: false
      # excludePatterns: 'getComments'
      # excludePatternsOptions: 'i'
      # customDataIdFromObjectName: 'test'
      # customDataIdFromObjectImport: 'abc'
      apolloClientInstanceImport: '@codelab/frontend'
    preset: import-types
    presetConfig:
      typesPath: ./types.generated
    documents: ./libs/modules/user/src/core/application/useCases/getMe/GetMe.graphql
    hooks:
      afterOneFileWrite:
        - eslint --fix
# libs/state/apollo/src/__generated__/graphql-files-modules.d.ts:
#   plugins:
#     - typescript-graphql-files-modules
#   config:
#     namingConvention: keep
# libs/state/apollo/src/__generated__/graphql-documents-nodes.ts:
#   plugins:
#     - typescript
#     - typescript-document-nodes
#     # - typescript-graphql-files-modules
#     # - fragment-matcher
