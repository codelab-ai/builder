#
# `--env-file`, a flag for docker-compose, is used for variable substitution
#
# `env_file` is used to find env to inject into container at runtime
#
version: '3.8'
services:
  web:
    container_name: web
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    expose:
      - ${WEB_PORT}
    entrypoint: ['yarn', 'pm2-runtime', 'dist/apps/web/pm2.json']
    image: codelabai/codelab:${DOCKER_TAG_VERSION}
    env_file:
      - ../.env
    environment:
      - NODE_ENV=production
      - CODELAB_ENV=production
      - NEXT_PUBLIC_API_ORIGIN
      - NEXT_PUBLIC_API_PATHNAME

  api-graph:
    container_name: api-graph
    ports:
      - ${API_PORT_GRAPH}:${API_PORT_GRAPH}
    expose:
      - ${API_PORT_GRAPH}
    entrypoint: ['yarn', 'pm2-runtime', 'dist/apps/api/graph/pm2.json']
    depends_on:
      - hasura
    image: codelabai/codelab:${DOCKER_TAG_VERSION}
    env_file:
      - ../.env
    environment:
      - NODE_ENV=production
      - CODELAB_ENV=production
      - API_PORT_GRAPH
      - HASURA_GRAPHQL_URI
      - POSTGRES_HOST

  fluentd:
    ports:
      - 24224:24224
    container_name: fluentd
    image: fluentd
    tty: true # colorize output
    environment:
      DEBUG_COLORS: 'true'
      TERM: xterm-256color
      COLORTERM: truecolor
    build:
      context: fluentd
    volumes:
      - ./fluentd/configs:/fluentd/etc/

  postgres:
    image: postgres:12
    container_name: codelab-postgres
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      # - HOST:CONTAINER
      # Allow local machine access
      - ${POSTGRES_PORT}:5432
    env_file:
      - ../.env
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB

  postgres-e2e:
    image: postgres:12
    container_name: codelab-postgres-e2e
    restart: always
    volumes:
      - db_e2e_data:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      # - HOST:CONTAINER
      # Allow local machine access
      - ${POSTGRES_PORT_E2E}:5432
    env_file:
      - ../.env
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB=postgres # Override with default table

  pgadmin:
    image: dpage/pgadmin4:4.28
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@codelab.ai
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 5050:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  hasura:
    image: hasura/graphql-engine:v1.3.3
    container_name: codelab-hasura
    expose:
      - 8080
    ports:
      - 8080:8080
    depends_on:
      - postgres
    restart: always
    env_file:
      - ../.env
    environment:
      - HASURA_GRAPHQL_DATABASE_URL
      - HASURA_GRAPHQL_ADMIN_SECRET
      - 'HASURA_GRAPHQL_JWT_SECRET={"type": "HS512", "key": "AQang2XTwWG8odE3WiI-0bc0f3O0Gq0h3SDs2rp6Kl00P-MOHzB6_DjKi525E0B5-kvacmu1kjc3bQQp7FQusA"}'
      - HASURA_GRAPHQL_ENABLE_CONSOLE
      - HASURA_GRAPHQL_DEV_MODE
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES
      - HASURA_GRAPHQL_MIGRATIONS_DIR=../apps/api/graph/.hasura/migrations
      - HASURA_GRAPHQL_METADATA_DIR=../apps/api/graph/.hasura/metadata

volumes:
  db_data:
    name: codelab-postgres-volume
  db_e2e_data:
    name: codelab-postgres-e2e-volume
  pgadmin-data:
    name: codelab-pgadmin-volume
