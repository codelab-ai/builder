{
	"name": "@codelab/publishable",
	"versions": {
		"0.0.1": {
			"name": "@codelab/publishable",
			"version": "0.0.1",
			"main": "./publishable.umd.js",
			"module": "./publishable.esm.js",
			"typings": "./index.d.ts",
			"readmeFilename": "README.md",
			"description": "Codelab.ai is a web application builder consisting of a data modeling tool and a view binding layer. It was the only available domain extension left & has nothing to do with Artificial Intelligence, but is a likely addition in the future.",
			"_id": "@codelab/publishable@0.0.1",
			"dist": {
				"shasum": "cfa531b79829755ddd4a7b97a2a1531b93067a1a",
				"integrity": "sha512-pQV6cSftSSOqsVXnhKFglFDiLNY3zPFjwgWXh/Dl4mr4hS2KWrjt35UBAam7ho8KG6RdFM4RCQ/JmWCupby7Hw==",
				"tarball": "http://localhost:4873/@codelab/publishable/-/@codelab/publishable-0.0.1.tgz"
			},
			"contributors": []
		}
	},
	"time": {
		"modified": "2020-09-04T01:33:19.371Z",
		"created": "2020-09-04T01:33:19.371Z",
		"0.0.1": "2020-09-04T01:33:19.371Z"
	},
	"users": {},
	"dist-tags": {
		"latest": "0.0.1"
	},
	"_uplinks": {},
	"_distfiles": {},
	"_attachments": {
		"publishable-0.0.1.tgz": {
			"shasum": "cfa531b79829755ddd4a7b97a2a1531b93067a1a",
			"version": "0.0.1"
		}
	},
	"_rev": "3-ecbc6531c9d61ad1",
	"_id": "@codelab/publishable",
	"readme": "# What is Codelab.ai\n\nCodelab.ai is a web application builder consisting of a data modeling tool and a view binding layer. It was the only available domain extension left & has nothing to do with Artificial Intelligence, but is a likely addition in the future.\n\n- Create models with fields & configure their relationships using a D3.js graph interface.\n- Build the UI by editing the DOM Tree & configuring the components\n\n# Built With\n\n### Build\n\n- [NX](https://nx.dev/react)\n  - NX is a CLI toolkit for Monorepo development, similar to Angular CLI but framework agnostic\n  - It scaffolds packages & provide us with a unified API for interacting with our libraries\n\n### Frontend\n\n- [React](https://reactjs.org)\n  - A JavasScript library for building user interfaces, although we only use `.tsx`\n- [Next.js](https://nextjs.org)\n  - A React Framework for server-side rendering (SSR) & other performance optimizations\n\n### Backend\n\n- [Mongoose]()\n- [Nest.js](https://nestjs.com)\n  - A Node.js framework suitable for micro-services architecture, which heavily uses OOP principles such as dependency injection (DI)\n\n### UI\n\n- [Storybook](https://storybook.js.org)\n  - A tool for developing UI components in isolation\n- [Ant Design](https://ant.design)\n  - A UI/Component library for React\n\n### Testing\n\n- [Jest](https://jestjs.io)\n  - JavaScript testing framework\n- [Cypress](https://www.cypress.io)\n  - E2e testing framework\n\n# Plugins to Install\n\n1. Install [NX Console](https://marketplace.visualstudio.com/items?itemName=nrwl.angular-console), you will use the interface to run the application\n2. Install [Move TS](https://marketplace.visualstudio.com/items?itemName=stringham.move-ts)\n\n- VSCode doesn't auto update imports when renaming files, use this to help with moving files\n\n3. (Optional) Install [WebStorm](https://www.jetbrains.com/webstorm/)\n\n- VSCode doesn't allow us to move an export (function, variable, class etc.) from one file to another, which is a huge limitation in refactoring, as this is a common procedure\n- WebStorm does have this functionality, but is a paid product. They have a 30-day free trial you can try out the feature. If you find the program useful we can consider purchasing a license for you.\n\n3. Install [ESLint](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint), for realtime visual linting\n\nThe project directory structure is based on NX, with `apps` directory containing all the user facing sites, while `libs` containing all imported libraries.\n\n# Getting Started\n\n1. Clone a forked version of the repository\n2. `cp .env.example .env.dev`\n3. `yarn`\n\nThe NX Console tab has all the commands you'll need to interact with the app under the `Generate & Run Target` section. For the most part, you'll be developing with Jest & Storybook.\n\n4. Select `Run`, which will display all commands in the format of `[package]:[command]`. Use `test` for Jest, & `storybook` for Storybook.\n\n# CI/CD pipeline\n\nClone off master and create a local branch using a name that is relevant to the task in hyphenated-lowercase-or-kebab-case. Always rebase master branch before you push, so merge won't have any issues.\n\nTo commit code, run `yarn commit`. (This will trigger the git `pre-commit` hook via [Husky](https://github.com/typicode/husky), which then uses [Lint Staged](https://github.com/okonet/lint-staged) to run [ESLint](https://github.com/eslint/eslint) on staged files. ESLint will use [Prettier](https://github.com/prettier/prettier) to format files.)\n\nAfter using `yarn commit` a couple times and understanding the commit mesage format, you can manually create the message if you wish.\n\nFollow the CLI prompt to complete the commit. ([Commitizen](https://github.com/commitizen/cz-cli) is used to trigger the terminal prompt for constructing the proper commit message format.)\n\nOnce pushed to the remote repository, create a Pull Request on Github to `master`. Make sure all the tests run successfully, the PR will then be reviewed by the administrator.\n\n<!-- # Site Documentation\n\nFor a more detailed documentation, go to the [Documentation Site](https://docs.codelab.ai) -->\n"
}