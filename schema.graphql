"""query root"""
type Query {
  getApp(input: GetAppInput!): App
  getApps: [App!]!
  getMe: User!
  graph(input: GetGraphInput!): Graph!
  getPages(input: GetPagesInput!): [Page!]!
  getPage(input: GetPageInput!): Page!
}

type Mutation {
  createApp(input: CreateAppInput!): App!
  deleteApp(input: DeleteAppInput!): App!
  deleteUser(input: DeleteUserInput!): User!
  updateUser(input: UpdateUserInput!): User!
  registerUser(input: RegisterUserInput!): User!
  loginUser(input: LoginUserInput!): User!
  createGraph(input: CreateGraphInput!): Graph!
  addChildNode(input: AddChildNodeInput!): Graph!
  updateNode(input: UpdateNodeInput!): Graph!
  deleteNode(input: DeleteNodeInput!): Graph!
  moveNode(input: MoveNodeInput!): Graph!
  createPage(input: CreatePageInput!): Page!
}

type App {
  id: String!
  title: String!
}

type User {
  id: String!
  email: String!
  accessToken: String!
}

type Edge {
  id: String!
  source: String!
  target: String!
  props: JSONObject!
  order: Float!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Vertex {
  id: String
  type: NodeType!
  props: JSONObject!
}

enum NodeType {
  React_Fragment
  React_Html_Div
  React_Html_P
  React_Html_A
  React_Html_Span
  React_Text
  React_Icon
  React_Menu
  React_Menu_Item
  React_Menu_ItemGroup
  React_Menu_SubMenu
  React_Card
  React_Card_Grid
  React_Card_Meta
  React_Typography
  React_Typography_Title
  React_Typography_Text
  React_Typography_Paragraph
  React_Alert
  React_Affix
  React_AutoComplete
  React_Button
  React_Breadcrumb
  React_Breadcrumb_Item
  React_Dropdown
  React_Form
  React_Form_Item
  React_Form_ItemHook
  React_Form_List
  React_Checkbox
  React_Input
  React_InputNumber
  React_Select
  React_Select_Option
  React_Grid_Layout_Container
  React_Grid
  React_ResponsiveGrid
  React_Provider
  React_Modal
  React_Radio_Group
  React_Radio
  React_Rate
  React_Slider
  React_Switch
  React_Table
  React_Space
  React_DatePicker
  React_Divider
  React_Pagination
  React_PageHeader
  React_Badge
  React_Avatar
  React_Comment
  React_Calendar
  React_Descriptions
  React_Descriptions_Item
  React_Empty
  React_Timeline
  React_Timeline_Item
  React_Tabs
  React_Tabs_TabPane
  React_Statistic
  React_Tooltip
  React_Tag
  React_Tree
  React_Drawer
  React_Progress
  React_Result
  React_Spin
  React_Skeleton
  React_Anchor
  React_Anchor_Link
  React_BackTop
  React_ConfigProvider
  React_Popconfirm
  React_Transfer
  React_TreeSelect
  React_TreeNode
  React_TimePicker
  React_Upload
  React_Steps
  React_Steps_Step
  React_Collapse
  React_Collapse_Panel
  React_Carousel
  React_List
  React_List_Item
  React_List_Item_Meta
  React_Mentions
  React_Mentions_Option
  React_Layout
  React_Layout_Header
  React_Layout_Sider
  React_Layout_Content
  React_Layout_Footer
  React_Cascader
  React_Popover
  React_RenderComponent
  React_RenderContainer
  React_Mapper
  Model
  Schema
  Tree
  Ref
}

type Graph {
  id: String
  label: String!
  vertices: [Vertex!]!
  edges: [Edge!]!
}

type Page {
  id: String
  title: String!
}

input GetAppInput {
  appId: String!
}

input GetGraphInput {
  graphId: String
  pageId: String
}

input GetPagesInput {
  appId: String!
}

input GetPageInput {
  pageId: String!
}

input CreateAppInput {
  title: String!
}

input DeleteAppInput {
  id: String!
}

input DeleteUserInput {
  email: String!
}

input UpdateUserInput {
  id: String!
  email: String!
}

input RegisterUserInput {
  email: String!
  password: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateGraphInput {
  label: String!
}

input AddChildNodeInput {
  graphId: String!
  parentVertexId: String
  vertex: AddChildNodeVertexType!
  order: Float
}

input AddChildNodeVertexType {
  type: NodeType!
  props: JSONObject!
}

input UpdateNodeInput {
  graphId: String!
  type: UpdateNodeVertexType!
}

input UpdateNodeVertexType {
  id: String!
  type: NodeType!
  props: JSONObject!
}

input DeleteNodeInput {
  vertexId: String!
}

input MoveNodeInput {
  graphId: String!
  type: EdgeType!
}

input EdgeType {
  source: String!
  target: String!
}

input CreatePageInput {
  title: String!
  appId: String!
}
