overwrite: true
schema: http://localhost:4004/graphql
documents: apps/api/graph/src/assets/**/*.graphql
# documents: libs/state/apollo/src/__generated__/graphql-schema.json
generates:
  # Generate into lib so we can import
  libs/state/apollo/src/generated/graphql.tsx:
    plugins:
      - typescript
      - typescript-operations
      - typescript-react-apollo
      # - typescript-document-nodes
      # - typescript-graphql-files-modules
      # - graphql-codegen-apollo-next-ssr
      # - typescript-graphql-files-modules
    config:
      reactApolloVersion: 3
      withHooks: true
      withHOC: false
      withComponent: false
      exportFragmentSpreadSubTypes: true
      documentMode: graphQLTag
      namingConvention:
        enumValues: keep
  libs/state/apollo/src/generated/page.tsx:
    plugins:
      - graphql-codegen-apollo-next-ssr
    config:
      documentMode: external
      importDocumentNodeExternallyFrom: ./graphql
      reactApolloVersion: 3
      withHooks: true
      # withHOC: false
      # excludePatterns: 'getComments'
      # excludePatternsOptions: 'i'
      # customDataIdFromObjectName: 'test'
      # customDataIdFromObjectImport: 'abc'
      apolloClientInstanceImport: '@codelab/ui/hoc'
    preset: import-types
    presetConfig:
      typesPath: ./graphql

  # libs/state/apollo/src/__generated__/graphql-files-modules.d.ts:
  #   plugins:
  #     - typescript-graphql-files-modules
  #   config:
  #     namingConvention: keep
  # libs/state/apollo/src/__generated__/graphql-documents-nodes.ts:
  #   plugins:
  #     - typescript
  #     - typescript-document-nodes
  #     # - typescript-graphql-files-modules
  #     # - fragment-matcher
hooks:
  afterAllFileWrite:
    - 'eslint --fix'
